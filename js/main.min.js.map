{"version":3,"sources":["swiper-bundle.js","main.js"],"names":["factory","exports","_typeof","module","define","amd","globalThis","self","Swiper","obj","constructor","Object","extend$1","target","src","keys","forEach","key","isObject$1","length","ssrDocument","body","addEventListener","removeEventListener","activeElement","nodeName","querySelectorAll","getElementById","blur","querySelector","childNodes","style","getElementsByTagName","createEvent","importNode","createElement","location","children","setAttribute","pathname","protocol","search","createElementNS","getDocument","doc","document","support","deviceCached","browser","swiper","hash","host","hostname","href","origin","history","ssrWindow","navigator","userAgent","this","replaceState","pushState","go","back","setTimeout","CustomEvent","matchMedia","callback","getComputedStyle","getPropertyValue","cancelAnimationFrame","id","clearTimeout","getWindow","win","window","requestAnimationFrame","deleteProps","delay","object","now","Date","getTranslate","el","axis","getComputedStyle$1","curTransform","curStyle","nextTick","currentStyle","WebKitCSSMatrix","transform","webkitTransform","split","map","a","replace","join","transformMatrix","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","matrix","isObject","o","prototype","call","slice","extend","to","noExtend","parseFloat","i","nextSource","arguments","undefined","HTMLElement","node","nodeType","keysArray","filter","indexOf","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","isNode","enumerable","__swiper__","setCSSProperty","varName","varValue","setProperty","animateCSSModeScroll","current","dir","time","_ref","targetPosition","side","startPosition","translate","startTime","duration","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","animate","getTime","Math","max","min","easeProgress","cos","progress","PI","currentPosition","isOutOfBound","overflow","scrollTo","_defineProperty","slideEl","shadowEl","selector","_toConsumableArray","element","matches","tag","classes","getSlideTransformEl","_el$classList","classList","isArray","box","getBoundingClientRect","clientTop","clientLeft","scrollY","scrollTop","scrollLeft","scrollX","top","left","prevEls","prev","prop","elementIndex","nextEls","child","elementNextAll","nextElementSibling","next","parent","parentElement","parents","push","elementTransitionEnd","e","elementParents","fireCallBack","size","includeMargins","offsetWidth","smoothScroll","documentElement","touch","DocumentTouch","getDevice","overrides","platform","screenWidth","calcDevice","ipad","device","windows","android","getSupport","screen","width","height","_temp","ua","match","macos","concat","screenHeight","iphone","os","ipod","iPadScreens","ios","getBrowser","toLowerCase","major","minor","needPerspectiveFix","String","_ua$split$1$split$0$s2","_slicedToArray","num","Number","isSafari","isWebView","test","transitionEmit","runCallbacks","updateAutoHeight","previousIndex","activeIndex","direction","emit","step","allowClick","base","targetEl","currentY","pageX","currentX","pageY","touches","found","__closestFrom","getRootNode","rtlTranslate","translatesDiff","newProgress","breakpoints","setBreakpoint","minTranslate","enabled","updateProgress","allowSlidePrev","updateSlides","processLazyPreloader","destroyed","slideSelector","slidesPerView","isEnd","isBeginning","centeredSlides","isVirtualLoop","imageEl","closest","slideToLoop","realIndex","lazyEl","slideTo","remove","isElement","slides","autoplay","running","paused","timeout","resume","events","allowSlideNext","snapGrid","attachEvents","slideClass","onTouchStart","lazyPreloaderClass","onTouchMove","dummyEventAttached","method","detachEvents","events$1","capture","nested","isGridEnabled","initialized","passive","domMethod","onTouchEnd","breakpoint","currentBreakpoint","breakpointOnlyParams","wasMultiRow","isMultiRow","breakpointParams","fill","add","containerModifierClass","emitContainerClasses","onScroll","wasModuleEnabled","isModuleEnabled","onResize","onLoad","grid","rows","slideToClickedSlide","loopPreventsSliding","init","rewind","oneWayMovement","swipeHandler","cssMode","noSwiping","noSwipingClass","noSwipingSelector","createElements","passiveListeners","maxBackfaceHiddenSlides","slideActiveClass","slideNextClass","slidePrevClass","edgeSwipeThreshold","autoHeight","setWrapperSize","virtualTranslate","extendParams","effect","moduleParams","breakpointsBase","allModulesParams","spaceBetween","slidesPerGroup","moduleParamName","slidesPerGroupSkip","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","watchOverflow","roundLengths","touchRatio","touchAngle","simulateTouch","longSwipes","longSwipesRatio","longSwipesMs","followFinger","prototypes","eventsEmitter","update","transition","slide","grabCursor","checkOverflow","checkOverflow$1","watchSlidesProgress","preventClicks","preventClicksPropagation","loop","loopedSlides","slideVisibleClass","wrapperClass","_emitClasses","on","priority","destroy","eventsListeners","handler","event","once","onceHandler","__emitterProxy","Array","_key","_len","args","onAny","apply","eventsAnyListeners","offAny","index","splice","off","eventHandler","data","context","_len2","_key2","unshift","eventsArray","updateSlidesClasses","updateSize","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","elementStyle","isNaN","assign","updateActiveIndex","property","getDirectionLabel","margin-top","margin-bottom ","margin-left","margin-right","padding-left","padding-right","marginRight","getDirectionPropertyValue","label","slidesEl","swiperSize","virtual","isVirtual","wrongRTL","previousSlidesLength","elementChildren","slidesLength","offsetAfter","slidesGrid","slidesSizesGrid","offsetBefore","previousSnapGridLength","previousSlidesGridLength","slidePosition","virtualSize","rtl","marginLeft","marginBottom","allSlidesSize","maxSnap","shouldResetSlideSize","initSlides","slideSize","currentTransform","currentWebKitTransform","paddingLeft","paddingRight","boxSizing","updateSlide","gridEnabled","slideStyles","elementOuterSize","_slide2","floor","swiperSlideSize","prevSlideSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","slidesBefore","slidesAfter","groupSize","ceil","slideIndex","slideSizeValue","snap","allSlidesOffset","snapIndex","addToSnapGrid","v","addToSlidesGrid","hasClassBackfaceClassAdded","contains","backFaceHiddenClass","updateSlidesOffset","updateClickedSlide","getSlideByIndex","getAttribute","activeSlides","newHeight","visibleSlides","offsetHeight","offsetTop","offsetLeft","minusOffset","updateSlidesProgress","swiperSlideOffset","offsetCenter","visibleSlidesIndexes","slideOffset","slideBefore","slideProgress","originalSlideProgress","slideAfter","isVisible","originalProgress","lastSlideIndex","translateMax","translateAbs","multiplier","maxTranslate","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","firstSlideIndex","firstSlideTranslate","abs","lastSlideTranslate","getFilteredSlide","activeSlide","nextSlide","elementPrevAll","prevSlide","elementOffset","emitSlidesClasses","getVirtualRealIndex","aIndex","previousRealIndex","previousSnapIndex","skip","runCallbacksOnInit","slideFound","clickedIndex","clickedSlide","currentTranslate","setTranslate","x","y","byController","translateBounds","internal","newTranslate","preventInteractionOnTransition","isH","setTransition","_wrapperEl$scrollTo","animating","onTranslateToWrapperTransitionEnd","getSwiperTranslate","translateTo","transitionDuration","transitionStart","transitionEnd","normalizedTranslate","initial","normalizedGrid","normalizedGridNext","t","_cssModeVirtualInitialSet","_immediateVirtual","initialSlide","onSlideToWrapperTransitionEnd","_wrapperEl$scrollTo2","newIndex","slideNext","perGroup","increment","_clientLeft","slidePrev","slidesPerViewDynamic","val","loopFix","normalizedSnapGrid","prevSnap","prevSnapIndex","prevIndex","lastIndex","slideReset","normalize","slideToClosest","threshold","nextSnap","currentSnap","slideToIndex","slideRealIndex","activeSlideIndex","byMousewheel","loopCreate","prependSlidesIndexes","appendSlidesIndexes","_ref4$slideTo","isNext","isPrev","slidesPrepended","_ref4","slidesAppended","prepend","append","recalcSlides","currentSlideTranslate","newSlideTranslate","diff","controller","loopParams","control","loopDestroy","swiperSlideIndex","newSlidesOrder","removeAttribute","setGrabCursor","moving","touchEventsTarget","c","unsetGrabCursor","touchEventsData","originalEvent","isLocked","cursor","composedPath","eventPath","path","getBreakpoint","changeDirection","isEnabled","allowTouchMove","edgeSwipeDetection","preventDefault","evCache","allowTouchCallbacks","isTouched","isMoved","isScrolling","startMoving","touchStartTime","swipeDirection","focusableElements","which","button","swipingClassHasValue","touchStartForcePreventDefault","shouldPreventDefault","shadowRoot","isTargetShadow","closestElement","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","startX","innerWidth","pointerIndex","targetTouch","preventedByNestedSwiper","allowThresholdMove","startY","prevX","touchStartPreventDefault","isContentEditable","freeMode","pointerType","targetTouches","pointerId","diffX","diffY","stopPropagation","touchesDiff","touchesDirection","isLoop","startTranslate","pow","evt","bubbles","dispatchEvent","atan2","allowMomentumBounce","prevTouchesDirection","zoom","disableParentSwiper","resistanceRatio","touchReleaseOnEdges","touchMoveStopPropagation","previousX","previousY","loopFixed","resistance","cachedEv","timeDiff","pathTree","touchEndTime","lastClickTime","findIndex","currentPos","includes","type","rewindFirstIndex","ratio","stopIndex","rewindLastIndex","isNavButtonTarget","navigation","shortSwipes","nextEl","prevEl","stopImmediatePropagation","wasEnabled","updateOnWindowResize","bind","onClick","swiperMethod","enable","dummyEventListener","needsReLoop","point","originalParams","points","value","containerEl","prepareClasses","entries","item","resultClasses","prefix","classNames","directionChanged","suffixes","currentHeight","innerHeight","minRatio","b","addClasses","_points$i","removeClasses","wasLocked","lastSlideRightEdge","resizeObserver","free-mode","url","grid-column","defaults","_el$classList2","_el$classList3","extendedDefaults","previousTranslate","velocity","newParams","clickTimeout","velocities","modules","_swiper$modules","mod","moduleExtendParams","auto","swiperParams","passedParams","eventName","cls","className","updates","imagesToLoad","imagesLoaded","exact","_createClass","breakLoop","spv","slideInView","getSlideClasses","view","translated","currentDirection","newDirection","translateValue","needUpdate","complete","res","mounted","mount","trim","getWrapperSelector","deleteInstance","cleanStyles","installModule","protoMethod","Resize","Observer","Virtual","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","cssModeTimeout","cache","newDefaults","from","offset","tempDOM","__modules__","innerHTML","m","checkProps","makeElementsArray","subEl","tagName","disabled","verticalClass","paginationDisabledClass","pagination","observer","slidesBuffer","newActiveIndex","appendElement","activeIndexBuffer","indexToRemove","slidesIndexes","prependElement","removeSlide","prependSlide","effectInit","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","slideOpacity","effectTarget","ty","overwriteParamsResult","transformElements","effectVirtualTransitionEnd","allSlides","slideShadows","cubeEffect","effectParams","shadow","shadowOffset","backfaceVisibility","shadowScale","transformEl","shadowAfter","eventTriggered","shadowBefore","swiperHeight","parentNode","wrapperRotate","cubeShadowEl","cancelable","coverflowEffect","rotate","stretch","shadowContainer","shadowClass","depth","scale","modifier","prototypeGroup","resizeHandler","calcBrowser","orientationChangeHandler","removeObserver","animationFrame","ResizeObserver","contentBoxSize","_ref2","contentRect","createObserver","inlineSize","blockSize","newWidth","unobserve","options","observers","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","observe","attributes","childList","characterData","containerParents","attach","observeParents","disconnect","use","offsetProp","previousFrom","previousTo","previousSlidesGrid","previousOffset","onRendered","_swiper$params","_swiper$params$virtua","_swiper$virtual","getSlides","prependIndexes","appendIndexes","getSlideIndex","loopTo","slidesToRender","appendSlide","force","numberOfNewSlides","cachedEl","newCache","loopFrom","cachedIndex","cachedElIndex","keyboard","onlyInViewport","domSlidesAssigned","handle","keyCode","pageUpDown","kc","isArrowRight","isArrowUp","isArrowDown","altKey","removeAllSlides","windowHeight","inView","isPageUp","isPageDown","charCode","isArrowLeft","shiftKey","ctrlKey","metaKey","disable","swiperWidth","Mousewheel","swiperOffset","swiperCoord","windowWidth","releaseOnEdges","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","returnValue","mousewheel","lastScrollTime","recentWheelEvents","PIXEL_STEP","sY","detail","wheelDelta","wheelDeltaX","sX","pX","lastEventBeforeSnap","invert","LINE_HEIGHT","pY","PAGE_HEIGHT","handleMouseEnter","mouseEntered","handleMouseLeave","newEvent","delta","rtlFactor","raw","animateSlider","prevEvent","targetElContainsTarget","releaseScroll","pixelY","pixelX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinY","positions","ignoreWheelEvents","position","snapToThreshold","sticky","shift","firstEvent","autoplayDisableOnInteraction","stop","disabledClass","hiddenClass","lockClass","hideOnClick","navigationDisabledClass","getEl","toggleEl","onPrevClick","onNextClick","initButton","_subEl$classList","_swiper$navigation","destroyButton","createElementIfNotDefined","_s","_el$classList4","isHidden","_el$classList5","_swiper$navigation2","_swiper$navigation3","classesToSelector","_swiper$navigation4","Pagination","clickable","renderProgressbar","renderBullet","renderCustom","toggle","number","_swiper$el$classList2","bulletClass","modifierClass","currentClass","dynamicMainBullets","_swiper$el$classList","formatFractionCurrent","totalClass","progressbarFillClass","progressbarOppositeClass","total","pfx","isPaginationDisabled","bulletElement","setSideBullets","bulletActiveClass","bulletEl","progressbarOpposite","dynamicBullets","horizontalClass","bullets","firstIndex","bulletSize","onBulletClick","dynamicBulletIndex","midIndex","bulletIndex","bullet","bulletsOffset","firstDisplayedBullet","dynamicBulletsLength","_bulletEl$classList","suffix","fractionEl","textContent","formatFractionTotal","progressbarDirection","scaleX","scaleY","progressEl","lastDisplayedBullet","subElIndex","paginationHTML","totalEl","numberOfBullets","renderFraction","render","uniqueNavElements","clickableClass","draggable","snapOnRelease","dragClass","scrollbarDisabledClass","dragEl","dragTimeout","dragStartPos","dragSize","trackSize","scrollbar","newSize","newPos","divider","display","opacity","getPointerPosition","setDragPosition","positionRatio","hide","onDragMove","clientX","clientY","onDragStart","activeListener","passiveListener","eventMethod","enableDraggable","swiperEl","onDragEnd","disableDraggable","Parallax","setTransform","currentOpacity","currentRotate","p","parallax","_swiper","Zoom","containerClass","zoomedSlideClass","currentScale","fakeGestureTouched","slideWidth","slideHeight","imageWrapEl","maxRatio","image","minX","touchesStart","touchesCurrent","parallaxDuration","parallaxEl","gesture","distance","sqrt","prevTime","defineProperty","fakeGestureMoved","eventWithinSlide","onGestureStart","scaleStart","minY","maxX","maxY","prevPositionX","prevPositionY","x1","y2","x2","y1","onGestureEnd","isScaling","getDistanceBetweenTouches","originX","_getScaleOrigin2","originY","transformOrigin","scaledWidth","scaleMove","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","scaledHeight","zoomIn","onTransitionEnd","forceZoomRatio","touchY","offsetX","offsetY","imageHeight","translateY","translateMaxY","imageWidth","translateMinX","translateMinY","translateMaxX","translateX","zoomOut","touchX","touchAction","zoomToggle","activeListenerWithCapture","getListeners","out","_getListeners","Controller","onGestureChange","inverse","by","LinearSpline","binarySearch","_getListeners2","guess","maxIndex","minIndex","getScaleOrigin","get","interpolate","in","getInterpolateFunction","controlled","setControlledTranslate","i3","array","i1","setControlledTransition","notification","spline","controlledTranslate","controlElement","getRandomNumber","random","repeat","onControllerSwiper","removeSpline","addElRoleDescription","description","addElControls","_t","A11y","notificationClass","prevSlideMessage","nextSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","itemRoleDescriptionMessage","slideRole","liveRegion","addElLabel","addElId","a11y","firstSlideMessage","live","containerRoleDescriptionMessage","clicked","enableEl","onEnterOrSpaceKey","notify","makeElNotFocusable","addElRole","role","click","disableEl","hasPagination","initNavEl","wrapperId","message","handlePointerDown","handlePointerUp","controls","makeElFocusable","paginationEl","isActive","sourceCapabilities","hasClickablePagination","round","_ref5","updateNavigation","updatePagination","History","handleFocus","keepQuery","root","_swiper$navigation5","addElLive","slugify","_ref6","text","getPathValues","urlOverride","pathArray","setHistory","state","HashNavigation","activeSlideHash","paths","newHash","scrollToSlide","slideHistory","setHistoryPopState","part","onHashChange","setHash","hashNavigation","slideHash","waitForTransition","disableOnInteraction","stopOnLastSlide","raf","autoplayStartTime","wasPaused","pausedByTouch","slideChanged","touchStartTimeout","pausedByInteraction","getSlideDelay","activeSlideEl","watchState","currentSlideDelay","autoplayDelayTotal","autoplayDelayCurrent","autoplayTimeLeft","proceed","timeLeft","reverseDirection","pauseOnMouseEnter","start","attachMouseEvents","run","detachMouseEvents","visibilityState","pause","calcTimeLeft","delayForce","reset","onVisibilityChange","onPointerEnter","attachDocumentEvents","detachDocumentEvents","onPointerLeave","thumbsSwiper","Thumb","slideThumbActiveClass","thumbsParams","thumbs","onThumbClick","thumbsToActivate","multipleActiveThumbs","swiperCreated","autoScrollOffset","useOffset","currentThumbsIndex","newThumbsIndex","SwiperClass","getThumbsElementAndInit","thumbsElement","thumbsSwiperParams","onThumbsSwiper","thumbsContainerClass","thumbActiveClass","watchForThumbsToAppear","newThumbsSlide","momentumVelocityRatio","lastMoveEvent","momentumDistance","newPosition","momentum","momentumRatio","momentumBounce","afterBouncePosition","momentumBounceRatio","minimumVelocity","doBounce","j","pop","moveDistance","currentSlideSize","bounceAmount","needsLoopFix","numFullColumns","slidesNumberEvenToRows","newSlideOrderIndex","column","groupIndex","slideIndexInGroup","columnsInGroup","row","slidesPerRow","baseLength","_swiper$params$grid","currentSlide","_swiper$params2","_swiper$params$grid2","order","_swiper$params3","transitionEndTarget","fadeEffect","crossFade","slideAngle","tx","tz","zFactor","createShadow","EffectFlip","flipEffect","createSlideShadows","rotateY","rotateX","sin","shadowAngle","scale2","centerOffset","offsetMultiplier","creativeEffect","zIndex","shadowBeforeEl","shadowAfterEl","limitProgress","shadowPerProgress","limitRotation","progressMultiplier","getTranslateValue","isCenteredSlides","center","custom","translateZ","rotateString","slideTransform","scaleString","opacityString","shadowOpacity","EffectCards","perSlideOffset","margin","r","isSwipeToPrev","perSlideRotate","tXAdd","isSwipeToNext","subProgress","cardsEffect","tX","_swiper$touchEventsDa","tY","tZ","prevY","SLIDER","observeSlideChildren","numOfSliders","addActiveClass","pointerCircles","windowLoad","console","log"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * Swiper 9.0.5\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2023 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: February 13, 2023\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n    /**\r\n     * SSR Window 4.0.2\r\n     * Better handling for window object in SSR environment\r\n     * https://github.com/nolimits4web/ssr-window\r\n     *\r\n     * Copyright 2021, Vladimir Kharlampidi\r\n     *\r\n     * Licensed under MIT\r\n     *\r\n     * Released on: December 13, 2021\r\n     */\r\n    /* eslint-disable no-param-reassign */\r\n    function isObject$1(obj) {\r\n      return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\r\n    }\r\n    function extend$1(target, src) {\r\n      if (target === void 0) {\r\n        target = {};\r\n      }\r\n      if (src === void 0) {\r\n        src = {};\r\n      }\r\n      Object.keys(src).forEach(key => {\r\n        if (typeof target[key] === 'undefined') target[key] = src[key];else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\r\n          extend$1(target[key], src[key]);\r\n        }\r\n      });\r\n    }\r\n    const ssrDocument = {\r\n      body: {},\r\n      addEventListener() {},\r\n      removeEventListener() {},\r\n      activeElement: {\r\n        blur() {},\r\n        nodeName: ''\r\n      },\r\n      querySelector() {\r\n        return null;\r\n      },\r\n      querySelectorAll() {\r\n        return [];\r\n      },\r\n      getElementById() {\r\n        return null;\r\n      },\r\n      createEvent() {\r\n        return {\r\n          initEvent() {}\r\n        };\r\n      },\r\n      createElement() {\r\n        return {\r\n          children: [],\r\n          childNodes: [],\r\n          style: {},\r\n          setAttribute() {},\r\n          getElementsByTagName() {\r\n            return [];\r\n          }\r\n        };\r\n      },\r\n      createElementNS() {\r\n        return {};\r\n      },\r\n      importNode() {\r\n        return null;\r\n      },\r\n      location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: ''\r\n      }\r\n    };\r\n    function getDocument() {\r\n      const doc = typeof document !== 'undefined' ? document : {};\r\n      extend$1(doc, ssrDocument);\r\n      return doc;\r\n    }\r\n    const ssrWindow = {\r\n      document: ssrDocument,\r\n      navigator: {\r\n        userAgent: ''\r\n      },\r\n      location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: ''\r\n      },\r\n      history: {\r\n        replaceState() {},\r\n        pushState() {},\r\n        go() {},\r\n        back() {}\r\n      },\r\n      CustomEvent: function CustomEvent() {\r\n        return this;\r\n      },\r\n      addEventListener() {},\r\n      removeEventListener() {},\r\n      getComputedStyle() {\r\n        return {\r\n          getPropertyValue() {\r\n            return '';\r\n          }\r\n        };\r\n      },\r\n      Image() {},\r\n      Date() {},\r\n      screen: {},\r\n      setTimeout() {},\r\n      clearTimeout() {},\r\n      matchMedia() {\r\n        return {};\r\n      },\r\n      requestAnimationFrame(callback) {\r\n        if (typeof setTimeout === 'undefined') {\r\n          callback();\r\n          return null;\r\n        }\r\n        return setTimeout(callback, 0);\r\n      },\r\n      cancelAnimationFrame(id) {\r\n        if (typeof setTimeout === 'undefined') {\r\n          return;\r\n        }\r\n        clearTimeout(id);\r\n      }\r\n    };\r\n    function getWindow() {\r\n      const win = typeof window !== 'undefined' ? window : {};\r\n      extend$1(win, ssrWindow);\r\n      return win;\r\n    }\r\n\r\n    function deleteProps(obj) {\r\n      const object = obj;\r\n      Object.keys(object).forEach(key => {\r\n        try {\r\n          object[key] = null;\r\n        } catch (e) {\r\n          // no getter for object\r\n        }\r\n        try {\r\n          delete object[key];\r\n        } catch (e) {\r\n          // something got wrong\r\n        }\r\n      });\r\n    }\r\n    function nextTick(callback, delay) {\r\n      if (delay === void 0) {\r\n        delay = 0;\r\n      }\r\n      return setTimeout(callback, delay);\r\n    }\r\n    function now() {\r\n      return Date.now();\r\n    }\r\n    function getComputedStyle$1(el) {\r\n      const window = getWindow();\r\n      let style;\r\n      if (window.getComputedStyle) {\r\n        style = window.getComputedStyle(el, null);\r\n      }\r\n      if (!style && el.currentStyle) {\r\n        style = el.currentStyle;\r\n      }\r\n      if (!style) {\r\n        style = el.style;\r\n      }\r\n      return style;\r\n    }\r\n    function getTranslate(el, axis) {\r\n      if (axis === void 0) {\r\n        axis = 'x';\r\n      }\r\n      const window = getWindow();\r\n      let matrix;\r\n      let curTransform;\r\n      let transformMatrix;\r\n      const curStyle = getComputedStyle$1(el);\r\n      if (window.WebKitCSSMatrix) {\r\n        curTransform = curStyle.transform || curStyle.webkitTransform;\r\n        if (curTransform.split(',').length > 6) {\r\n          curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\r\n        }\r\n        // Some old versions of Webkit choke when 'none' is passed; pass\r\n        // empty string instead in this case\r\n        transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n      } else {\r\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n        matrix = transformMatrix.toString().split(',');\r\n      }\r\n      if (axis === 'x') {\r\n        // Latest Chrome and webkits Fix\r\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\r\n        // Crazy IE10 Matrix\r\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\r\n        // Normal Browsers\r\n        else curTransform = parseFloat(matrix[4]);\r\n      }\r\n      if (axis === 'y') {\r\n        // Latest Chrome and webkits Fix\r\n        if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\r\n        // Crazy IE10 Matrix\r\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\r\n        // Normal Browsers\r\n        else curTransform = parseFloat(matrix[5]);\r\n      }\r\n      return curTransform || 0;\r\n    }\r\n    function isObject(o) {\r\n      return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\r\n    }\r\n    function isNode(node) {\r\n      // eslint-disable-next-line\r\n      if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\r\n        return node instanceof HTMLElement;\r\n      }\r\n      return node && (node.nodeType === 1 || node.nodeType === 11);\r\n    }\r\n    function extend() {\r\n      const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\r\n      const noExtend = ['__proto__', 'constructor', 'prototype'];\r\n      for (let i = 1; i < arguments.length; i += 1) {\r\n        const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\r\n        if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\r\n          const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\r\n          for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n            const nextKey = keysArray[nextIndex];\r\n            const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n            if (desc !== undefined && desc.enumerable) {\r\n              if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n                if (nextSource[nextKey].__swiper__) {\r\n                  to[nextKey] = nextSource[nextKey];\r\n                } else {\r\n                  extend(to[nextKey], nextSource[nextKey]);\r\n                }\r\n              } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n                to[nextKey] = {};\r\n                if (nextSource[nextKey].__swiper__) {\r\n                  to[nextKey] = nextSource[nextKey];\r\n                } else {\r\n                  extend(to[nextKey], nextSource[nextKey]);\r\n                }\r\n              } else {\r\n                to[nextKey] = nextSource[nextKey];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return to;\r\n    }\r\n    function setCSSProperty(el, varName, varValue) {\r\n      el.style.setProperty(varName, varValue);\r\n    }\r\n    function animateCSSModeScroll(_ref) {\r\n      let {\r\n        swiper,\r\n        targetPosition,\r\n        side\r\n      } = _ref;\r\n      const window = getWindow();\r\n      const startPosition = -swiper.translate;\r\n      let startTime = null;\r\n      let time;\r\n      const duration = swiper.params.speed;\r\n      swiper.wrapperEl.style.scrollSnapType = 'none';\r\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n      const dir = targetPosition > startPosition ? 'next' : 'prev';\r\n      const isOutOfBound = (current, target) => {\r\n        return dir === 'next' && current >= target || dir === 'prev' && current <= target;\r\n      };\r\n      const animate = () => {\r\n        time = new Date().getTime();\r\n        if (startTime === null) {\r\n          startTime = time;\r\n        }\r\n        const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\r\n        const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\r\n        let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\r\n        if (isOutOfBound(currentPosition, targetPosition)) {\r\n          currentPosition = targetPosition;\r\n        }\r\n        swiper.wrapperEl.scrollTo({\r\n          [side]: currentPosition\r\n        });\r\n        if (isOutOfBound(currentPosition, targetPosition)) {\r\n          swiper.wrapperEl.style.overflow = 'hidden';\r\n          swiper.wrapperEl.style.scrollSnapType = '';\r\n          setTimeout(() => {\r\n            swiper.wrapperEl.style.overflow = '';\r\n            swiper.wrapperEl.scrollTo({\r\n              [side]: currentPosition\r\n            });\r\n          });\r\n          window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n          return;\r\n        }\r\n        swiper.cssModeFrameID = window.requestAnimationFrame(animate);\r\n      };\r\n      animate();\r\n    }\r\n    function getSlideTransformEl(slideEl) {\r\n      return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\r\n    }\r\n    function elementChildren(element, selector) {\r\n      if (selector === void 0) {\r\n        selector = '';\r\n      }\r\n      return [...element.children].filter(el => el.matches(selector));\r\n    }\r\n    function createElement(tag, classes) {\r\n      if (classes === void 0) {\r\n        classes = [];\r\n      }\r\n      const el = document.createElement(tag);\r\n      el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\r\n      return el;\r\n    }\r\n    function elementOffset(el) {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      const box = el.getBoundingClientRect();\r\n      const body = document.body;\r\n      const clientTop = el.clientTop || body.clientTop || 0;\r\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\r\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\r\n      return {\r\n        top: box.top + scrollTop - clientTop,\r\n        left: box.left + scrollLeft - clientLeft\r\n      };\r\n    }\r\n    function elementPrevAll(el, selector) {\r\n      const prevEls = [];\r\n      while (el.previousElementSibling) {\r\n        const prev = el.previousElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n          if (prev.matches(selector)) prevEls.push(prev);\r\n        } else prevEls.push(prev);\r\n        el = prev;\r\n      }\r\n      return prevEls;\r\n    }\r\n    function elementNextAll(el, selector) {\r\n      const nextEls = [];\r\n      while (el.nextElementSibling) {\r\n        const next = el.nextElementSibling; // eslint-disable-line\r\n        if (selector) {\r\n          if (next.matches(selector)) nextEls.push(next);\r\n        } else nextEls.push(next);\r\n        el = next;\r\n      }\r\n      return nextEls;\r\n    }\r\n    function elementStyle(el, prop) {\r\n      const window = getWindow();\r\n      return window.getComputedStyle(el, null).getPropertyValue(prop);\r\n    }\r\n    function elementIndex(el) {\r\n      let child = el;\r\n      let i;\r\n      if (child) {\r\n        i = 0;\r\n        // eslint-disable-next-line\r\n        while ((child = child.previousSibling) !== null) {\r\n          if (child.nodeType === 1) i += 1;\r\n        }\r\n        return i;\r\n      }\r\n      return undefined;\r\n    }\r\n    function elementParents(el, selector) {\r\n      const parents = []; // eslint-disable-line\r\n      let parent = el.parentElement; // eslint-disable-line\r\n      while (parent) {\r\n        if (selector) {\r\n          if (parent.matches(selector)) parents.push(parent);\r\n        } else {\r\n          parents.push(parent);\r\n        }\r\n        parent = parent.parentElement;\r\n      }\r\n      return parents;\r\n    }\r\n    function elementTransitionEnd(el, callback) {\r\n      function fireCallBack(e) {\r\n        if (e.target !== el) return;\r\n        callback.call(el, e);\r\n        el.removeEventListener('transitionend', fireCallBack);\r\n      }\r\n      if (callback) {\r\n        el.addEventListener('transitionend', fireCallBack);\r\n      }\r\n    }\r\n    function elementOuterSize(el, size, includeMargins) {\r\n      const window = getWindow();\r\n      if (includeMargins) {\r\n        return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\r\n      }\r\n      return el.offsetWidth;\r\n    }\r\n\r\n    let support;\r\n    function calcSupport() {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      return {\r\n        smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\r\n        touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\r\n      };\r\n    }\r\n    function getSupport() {\r\n      if (!support) {\r\n        support = calcSupport();\r\n      }\r\n      return support;\r\n    }\r\n\r\n    let deviceCached;\r\n    function calcDevice(_temp) {\r\n      let {\r\n        userAgent\r\n      } = _temp === void 0 ? {} : _temp;\r\n      const support = getSupport();\r\n      const window = getWindow();\r\n      const platform = window.navigator.platform;\r\n      const ua = userAgent || window.navigator.userAgent;\r\n      const device = {\r\n        ios: false,\r\n        android: false\r\n      };\r\n      const screenWidth = window.screen.width;\r\n      const screenHeight = window.screen.height;\r\n      const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n      let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n      const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n      const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n      const windows = platform === 'Win32';\r\n      let macos = platform === 'MacIntel';\r\n\r\n      // iPadOs 13 fix\r\n      const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\r\n      if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\r\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n        if (!ipad) ipad = [0, 1, '13_0_0'];\r\n        macos = false;\r\n      }\r\n\r\n      // Android\r\n      if (android && !windows) {\r\n        device.os = 'android';\r\n        device.android = true;\r\n      }\r\n      if (ipad || iphone || ipod) {\r\n        device.os = 'ios';\r\n        device.ios = true;\r\n      }\r\n\r\n      // Export object\r\n      return device;\r\n    }\r\n    function getDevice(overrides) {\r\n      if (overrides === void 0) {\r\n        overrides = {};\r\n      }\r\n      if (!deviceCached) {\r\n        deviceCached = calcDevice(overrides);\r\n      }\r\n      return deviceCached;\r\n    }\r\n\r\n    let browser;\r\n    function calcBrowser() {\r\n      const window = getWindow();\r\n      let needPerspectiveFix = false;\r\n      function isSafari() {\r\n        const ua = window.navigator.userAgent.toLowerCase();\r\n        return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\r\n      }\r\n      if (isSafari()) {\r\n        const ua = String(window.navigator.userAgent);\r\n        if (ua.includes('Version/')) {\r\n          const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\r\n          needPerspectiveFix = major < 16 || major === 16 && minor < 2;\r\n        }\r\n      }\r\n      return {\r\n        isSafari: needPerspectiveFix || isSafari(),\r\n        needPerspectiveFix,\r\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\r\n      };\r\n    }\r\n    function getBrowser() {\r\n      if (!browser) {\r\n        browser = calcBrowser();\r\n      }\r\n      return browser;\r\n    }\r\n\r\n    function Resize(_ref) {\r\n      let {\r\n        swiper,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      let observer = null;\r\n      let animationFrame = null;\r\n      const resizeHandler = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        emit('beforeResize');\r\n        emit('resize');\r\n      };\r\n      const createObserver = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        observer = new ResizeObserver(entries => {\r\n          animationFrame = window.requestAnimationFrame(() => {\r\n            const {\r\n              width,\r\n              height\r\n            } = swiper;\r\n            let newWidth = width;\r\n            let newHeight = height;\r\n            entries.forEach(_ref2 => {\r\n              let {\r\n                contentBoxSize,\r\n                contentRect,\r\n                target\r\n              } = _ref2;\r\n              if (target && target !== swiper.el) return;\r\n              newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\r\n              newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\r\n            });\r\n            if (newWidth !== width || newHeight !== height) {\r\n              resizeHandler();\r\n            }\r\n          });\r\n        });\r\n        observer.observe(swiper.el);\r\n      };\r\n      const removeObserver = () => {\r\n        if (animationFrame) {\r\n          window.cancelAnimationFrame(animationFrame);\r\n        }\r\n        if (observer && observer.unobserve && swiper.el) {\r\n          observer.unobserve(swiper.el);\r\n          observer = null;\r\n        }\r\n      };\r\n      const orientationChangeHandler = () => {\r\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n        emit('orientationchange');\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\r\n          createObserver();\r\n          return;\r\n        }\r\n        window.addEventListener('resize', resizeHandler);\r\n        window.addEventListener('orientationchange', orientationChangeHandler);\r\n      });\r\n      on('destroy', () => {\r\n        removeObserver();\r\n        window.removeEventListener('resize', resizeHandler);\r\n        window.removeEventListener('orientationchange', orientationChangeHandler);\r\n      });\r\n    }\r\n\r\n    function Observer(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const observers = [];\r\n      const window = getWindow();\r\n      const attach = function (target, options) {\r\n        if (options === void 0) {\r\n          options = {};\r\n        }\r\n        const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\r\n        const observer = new ObserverFunc(mutations => {\r\n          // The observerUpdate event should only be triggered\r\n          // once despite the number of mutations.  Additional\r\n          // triggers are redundant and are very costly\r\n          if (mutations.length === 1) {\r\n            emit('observerUpdate', mutations[0]);\r\n            return;\r\n          }\r\n          const observerUpdate = function observerUpdate() {\r\n            emit('observerUpdate', mutations[0]);\r\n          };\r\n          if (window.requestAnimationFrame) {\r\n            window.requestAnimationFrame(observerUpdate);\r\n          } else {\r\n            window.setTimeout(observerUpdate, 0);\r\n          }\r\n        });\r\n        observer.observe(target, {\r\n          attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n          childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n          characterData: typeof options.characterData === 'undefined' ? true : options.characterData\r\n        });\r\n        observers.push(observer);\r\n      };\r\n      const init = () => {\r\n        if (!swiper.params.observer) return;\r\n        if (swiper.params.observeParents) {\r\n          const containerParents = elementParents(swiper.el);\r\n          for (let i = 0; i < containerParents.length; i += 1) {\r\n            attach(containerParents[i]);\r\n          }\r\n        }\r\n        // Observe container\r\n        attach(swiper.el, {\r\n          childList: swiper.params.observeSlideChildren\r\n        });\r\n\r\n        // Observe wrapper\r\n        attach(swiper.wrapperEl, {\r\n          attributes: false\r\n        });\r\n      };\r\n      const destroy = () => {\r\n        observers.forEach(observer => {\r\n          observer.disconnect();\r\n        });\r\n        observers.splice(0, observers.length);\r\n      };\r\n      extendParams({\r\n        observer: false,\r\n        observeParents: false,\r\n        observeSlideChildren: false\r\n      });\r\n      on('init', init);\r\n      on('destroy', destroy);\r\n    }\r\n\r\n    /* eslint-disable no-underscore-dangle */\r\n\r\n    var eventsEmitter = {\r\n      on(events, handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        const method = priority ? 'unshift' : 'push';\r\n        events.split(' ').forEach(event => {\r\n          if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n          self.eventsListeners[event][method](handler);\r\n        });\r\n        return self;\r\n      },\r\n      once(events, handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        function onceHandler() {\r\n          self.off(events, onceHandler);\r\n          if (onceHandler.__emitterProxy) {\r\n            delete onceHandler.__emitterProxy;\r\n          }\r\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            args[_key] = arguments[_key];\r\n          }\r\n          handler.apply(self, args);\r\n        }\r\n        onceHandler.__emitterProxy = handler;\r\n        return self.on(events, onceHandler, priority);\r\n      },\r\n      onAny(handler, priority) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (typeof handler !== 'function') return self;\r\n        const method = priority ? 'unshift' : 'push';\r\n        if (self.eventsAnyListeners.indexOf(handler) < 0) {\r\n          self.eventsAnyListeners[method](handler);\r\n        }\r\n        return self;\r\n      },\r\n      offAny(handler) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsAnyListeners) return self;\r\n        const index = self.eventsAnyListeners.indexOf(handler);\r\n        if (index >= 0) {\r\n          self.eventsAnyListeners.splice(index, 1);\r\n        }\r\n        return self;\r\n      },\r\n      off(events, handler) {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsListeners) return self;\r\n        events.split(' ').forEach(event => {\r\n          if (typeof handler === 'undefined') {\r\n            self.eventsListeners[event] = [];\r\n          } else if (self.eventsListeners[event]) {\r\n            self.eventsListeners[event].forEach((eventHandler, index) => {\r\n              if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\r\n                self.eventsListeners[event].splice(index, 1);\r\n              }\r\n            });\r\n          }\r\n        });\r\n        return self;\r\n      },\r\n      emit() {\r\n        const self = this;\r\n        if (!self.eventsListeners || self.destroyed) return self;\r\n        if (!self.eventsListeners) return self;\r\n        let events;\r\n        let data;\r\n        let context;\r\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n          args[_key2] = arguments[_key2];\r\n        }\r\n        if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n          events = args[0];\r\n          data = args.slice(1, args.length);\r\n          context = self;\r\n        } else {\r\n          events = args[0].events;\r\n          data = args[0].data;\r\n          context = args[0].context || self;\r\n        }\r\n        data.unshift(context);\r\n        const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n        eventsArray.forEach(event => {\r\n          if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\r\n            self.eventsAnyListeners.forEach(eventHandler => {\r\n              eventHandler.apply(context, [event, ...data]);\r\n            });\r\n          }\r\n          if (self.eventsListeners && self.eventsListeners[event]) {\r\n            self.eventsListeners[event].forEach(eventHandler => {\r\n              eventHandler.apply(context, data);\r\n            });\r\n          }\r\n        });\r\n        return self;\r\n      }\r\n    };\r\n\r\n    function updateSize() {\r\n      const swiper = this;\r\n      let width;\r\n      let height;\r\n      const el = swiper.el;\r\n      if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\r\n        width = swiper.params.width;\r\n      } else {\r\n        width = el.clientWidth;\r\n      }\r\n      if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\r\n        height = swiper.params.height;\r\n      } else {\r\n        height = el.clientHeight;\r\n      }\r\n      if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\r\n        return;\r\n      }\r\n\r\n      // Subtract paddings\r\n      width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\r\n      height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\r\n      if (Number.isNaN(width)) width = 0;\r\n      if (Number.isNaN(height)) height = 0;\r\n      Object.assign(swiper, {\r\n        width,\r\n        height,\r\n        size: swiper.isHorizontal() ? width : height\r\n      });\r\n    }\r\n\r\n    function updateSlides() {\r\n      const swiper = this;\r\n      function getDirectionLabel(property) {\r\n        if (swiper.isHorizontal()) {\r\n          return property;\r\n        }\r\n        // prettier-ignore\r\n        return {\r\n          'width': 'height',\r\n          'margin-top': 'margin-left',\r\n          'margin-bottom ': 'margin-right',\r\n          'margin-left': 'margin-top',\r\n          'margin-right': 'margin-bottom',\r\n          'padding-left': 'padding-top',\r\n          'padding-right': 'padding-bottom',\r\n          'marginRight': 'marginBottom'\r\n        }[property];\r\n      }\r\n      function getDirectionPropertyValue(node, label) {\r\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\r\n      }\r\n      const params = swiper.params;\r\n      const {\r\n        wrapperEl,\r\n        slidesEl,\r\n        size: swiperSize,\r\n        rtlTranslate: rtl,\r\n        wrongRTL\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\r\n      const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n      let snapGrid = [];\r\n      const slidesGrid = [];\r\n      const slidesSizesGrid = [];\r\n      let offsetBefore = params.slidesOffsetBefore;\r\n      if (typeof offsetBefore === 'function') {\r\n        offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n      }\r\n      let offsetAfter = params.slidesOffsetAfter;\r\n      if (typeof offsetAfter === 'function') {\r\n        offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n      }\r\n      const previousSnapGridLength = swiper.snapGrid.length;\r\n      const previousSlidesGridLength = swiper.slidesGrid.length;\r\n      let spaceBetween = params.spaceBetween;\r\n      let slidePosition = -offsetBefore;\r\n      let prevSlideSize = 0;\r\n      let index = 0;\r\n      if (typeof swiperSize === 'undefined') {\r\n        return;\r\n      }\r\n      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\r\n      }\r\n      swiper.virtualSize = -spaceBetween;\r\n\r\n      // reset margins\r\n      slides.forEach(slideEl => {\r\n        if (rtl) {\r\n          slideEl.style.marginLeft = '';\r\n        } else {\r\n          slideEl.style.marginRight = '';\r\n        }\r\n        slideEl.style.marginBottom = '';\r\n        slideEl.style.marginTop = '';\r\n      });\r\n\r\n      // reset cssMode offsets\r\n      if (params.centeredSlides && params.cssMode) {\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\r\n      }\r\n      const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\r\n      if (gridEnabled) {\r\n        swiper.grid.initSlides(slidesLength);\r\n      }\r\n\r\n      // Calc slides\r\n      let slideSize;\r\n      const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\r\n        return typeof params.breakpoints[key].slidesPerView !== 'undefined';\r\n      }).length > 0;\r\n      for (let i = 0; i < slidesLength; i += 1) {\r\n        slideSize = 0;\r\n        let slide;\r\n        if (slides[i]) slide = slides[i];\r\n        if (gridEnabled) {\r\n          swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\r\n        }\r\n        if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\r\n\r\n        if (params.slidesPerView === 'auto') {\r\n          if (shouldResetSlideSize) {\r\n            slides[i].style[getDirectionLabel('width')] = ``;\r\n          }\r\n          const slideStyles = getComputedStyle(slide);\r\n          const currentTransform = slide.style.transform;\r\n          const currentWebKitTransform = slide.style.webkitTransform;\r\n          if (currentTransform) {\r\n            slide.style.transform = 'none';\r\n          }\r\n          if (currentWebKitTransform) {\r\n            slide.style.webkitTransform = 'none';\r\n          }\r\n          if (params.roundLengths) {\r\n            slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\r\n          } else {\r\n            // eslint-disable-next-line\r\n            const width = getDirectionPropertyValue(slideStyles, 'width');\r\n            const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\r\n            const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\r\n            const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\r\n            const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\r\n            const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n            if (boxSizing && boxSizing === 'border-box') {\r\n              slideSize = width + marginLeft + marginRight;\r\n            } else {\r\n              const {\r\n                clientWidth,\r\n                offsetWidth\r\n              } = slide;\r\n              slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\r\n            }\r\n          }\r\n          if (currentTransform) {\r\n            slide.style.transform = currentTransform;\r\n          }\r\n          if (currentWebKitTransform) {\r\n            slide.style.webkitTransform = currentWebKitTransform;\r\n          }\r\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n        } else {\r\n          slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\r\n          if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n          if (slides[i]) {\r\n            slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\r\n          }\r\n        }\r\n        if (slides[i]) {\r\n          slides[i].swiperSlideSize = slideSize;\r\n        }\r\n        slidesSizesGrid.push(slideSize);\r\n        if (params.centeredSlides) {\r\n          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\r\n          if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n          if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n          if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n          if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n          slidesGrid.push(slidePosition);\r\n        } else {\r\n          if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n          if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n          slidesGrid.push(slidePosition);\r\n          slidePosition = slidePosition + slideSize + spaceBetween;\r\n        }\r\n        swiper.virtualSize += slideSize + spaceBetween;\r\n        prevSlideSize = slideSize;\r\n        index += 1;\r\n      }\r\n      swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n      if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n        wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\r\n      }\r\n      if (params.setWrapperSize) {\r\n        wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\r\n      }\r\n      if (gridEnabled) {\r\n        swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\r\n      }\r\n\r\n      // Remove last grid elements depending on width\r\n      if (!params.centeredSlides) {\r\n        const newSlidesGrid = [];\r\n        for (let i = 0; i < snapGrid.length; i += 1) {\r\n          let slidesGridItem = snapGrid[i];\r\n          if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n          if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n            newSlidesGrid.push(slidesGridItem);\r\n          }\r\n        }\r\n        snapGrid = newSlidesGrid;\r\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n          snapGrid.push(swiper.virtualSize - swiperSize);\r\n        }\r\n      }\r\n      if (isVirtual && params.loop) {\r\n        const size = slidesSizesGrid[0] + spaceBetween;\r\n        if (params.slidesPerGroup > 1) {\r\n          const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\r\n          const groupSize = size * params.slidesPerGroup;\r\n          for (let i = 0; i < groups; i += 1) {\r\n            snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\r\n          }\r\n        }\r\n        for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\r\n          if (params.slidesPerGroup === 1) {\r\n            snapGrid.push(snapGrid[snapGrid.length - 1] + size);\r\n          }\r\n          slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\r\n          swiper.virtualSize += size;\r\n        }\r\n      }\r\n      if (snapGrid.length === 0) snapGrid = [0];\r\n      if (params.spaceBetween !== 0) {\r\n        const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\r\n        slides.filter((_, slideIndex) => {\r\n          if (!params.cssMode || params.loop) return true;\r\n          if (slideIndex === slides.length - 1) {\r\n            return false;\r\n          }\r\n          return true;\r\n        }).forEach(slideEl => {\r\n          slideEl.style[key] = `${spaceBetween}px`;\r\n        });\r\n      }\r\n      if (params.centeredSlides && params.centeredSlidesBounds) {\r\n        let allSlidesSize = 0;\r\n        slidesSizesGrid.forEach(slideSizeValue => {\r\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n        });\r\n        allSlidesSize -= params.spaceBetween;\r\n        const maxSnap = allSlidesSize - swiperSize;\r\n        snapGrid = snapGrid.map(snap => {\r\n          if (snap < 0) return -offsetBefore;\r\n          if (snap > maxSnap) return maxSnap + offsetAfter;\r\n          return snap;\r\n        });\r\n      }\r\n      if (params.centerInsufficientSlides) {\r\n        let allSlidesSize = 0;\r\n        slidesSizesGrid.forEach(slideSizeValue => {\r\n          allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n        });\r\n        allSlidesSize -= params.spaceBetween;\r\n        if (allSlidesSize < swiperSize) {\r\n          const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n          snapGrid.forEach((snap, snapIndex) => {\r\n            snapGrid[snapIndex] = snap - allSlidesOffset;\r\n          });\r\n          slidesGrid.forEach((snap, snapIndex) => {\r\n            slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n          });\r\n        }\r\n      }\r\n      Object.assign(swiper, {\r\n        slides,\r\n        snapGrid,\r\n        slidesGrid,\r\n        slidesSizesGrid\r\n      });\r\n      if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\r\n        setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\r\n        const addToSnapGrid = -swiper.snapGrid[0];\r\n        const addToSlidesGrid = -swiper.slidesGrid[0];\r\n        swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\r\n        swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\r\n      }\r\n      if (slidesLength !== previousSlidesLength) {\r\n        swiper.emit('slidesLengthChange');\r\n      }\r\n      if (snapGrid.length !== previousSnapGridLength) {\r\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n        swiper.emit('snapGridLengthChange');\r\n      }\r\n      if (slidesGrid.length !== previousSlidesGridLength) {\r\n        swiper.emit('slidesGridLengthChange');\r\n      }\r\n      if (params.watchSlidesProgress) {\r\n        swiper.updateSlidesOffset();\r\n      }\r\n      if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\r\n        const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\r\n        const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\r\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\r\n          if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\r\n        } else if (hasClassBackfaceClassAdded) {\r\n          swiper.el.classList.remove(backFaceHiddenClass);\r\n        }\r\n      }\r\n    }\r\n\r\n    function updateAutoHeight(speed) {\r\n      const swiper = this;\r\n      const activeSlides = [];\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      let newHeight = 0;\r\n      let i;\r\n      if (typeof speed === 'number') {\r\n        swiper.setTransition(speed);\r\n      } else if (speed === true) {\r\n        swiper.setTransition(swiper.params.speed);\r\n      }\r\n      const getSlideByIndex = index => {\r\n        if (isVirtual) {\r\n          return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\r\n        }\r\n        return swiper.slides[index];\r\n      };\r\n      // Find slides currently in view\r\n      if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n        if (swiper.params.centeredSlides) {\r\n          (swiper.visibleSlides || []).forEach(slide => {\r\n            activeSlides.push(slide);\r\n          });\r\n        } else {\r\n          for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n            const index = swiper.activeIndex + i;\r\n            if (index > swiper.slides.length && !isVirtual) break;\r\n            activeSlides.push(getSlideByIndex(index));\r\n          }\r\n        }\r\n      } else {\r\n        activeSlides.push(getSlideByIndex(swiper.activeIndex));\r\n      }\r\n\r\n      // Find new height from highest slide in view\r\n      for (i = 0; i < activeSlides.length; i += 1) {\r\n        if (typeof activeSlides[i] !== 'undefined') {\r\n          const height = activeSlides[i].offsetHeight;\r\n          newHeight = height > newHeight ? height : newHeight;\r\n        }\r\n      }\r\n\r\n      // Update Height\r\n      if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\r\n    }\r\n\r\n    function updateSlidesOffset() {\r\n      const swiper = this;\r\n      const slides = swiper.slides;\r\n      // eslint-disable-next-line\r\n      const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset;\r\n      }\r\n    }\r\n\r\n    function updateSlidesProgress(translate) {\r\n      if (translate === void 0) {\r\n        translate = this && this.translate || 0;\r\n      }\r\n      const swiper = this;\r\n      const params = swiper.params;\r\n      const {\r\n        slides,\r\n        rtlTranslate: rtl,\r\n        snapGrid\r\n      } = swiper;\r\n      if (slides.length === 0) return;\r\n      if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n      let offsetCenter = -translate;\r\n      if (rtl) offsetCenter = translate;\r\n\r\n      // Visible Slides\r\n      slides.forEach(slideEl => {\r\n        slideEl.classList.remove(params.slideVisibleClass);\r\n      });\r\n      swiper.visibleSlidesIndexes = [];\r\n      swiper.visibleSlides = [];\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const slide = slides[i];\r\n        let slideOffset = slide.swiperSlideOffset;\r\n        if (params.cssMode && params.centeredSlides) {\r\n          slideOffset -= slides[0].swiperSlideOffset;\r\n        }\r\n        const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n        const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n        const slideBefore = -(offsetCenter - slideOffset);\r\n        const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n        const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\r\n        if (isVisible) {\r\n          swiper.visibleSlides.push(slide);\r\n          swiper.visibleSlidesIndexes.push(i);\r\n          slides[i].classList.add(params.slideVisibleClass);\r\n        }\r\n        slide.progress = rtl ? -slideProgress : slideProgress;\r\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\r\n      }\r\n    }\r\n\r\n    function updateProgress(translate) {\r\n      const swiper = this;\r\n      if (typeof translate === 'undefined') {\r\n        const multiplier = swiper.rtlTranslate ? -1 : 1;\r\n        // eslint-disable-next-line\r\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\r\n      }\r\n      const params = swiper.params;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      let {\r\n        progress,\r\n        isBeginning,\r\n        isEnd,\r\n        progressLoop\r\n      } = swiper;\r\n      const wasBeginning = isBeginning;\r\n      const wasEnd = isEnd;\r\n      if (translatesDiff === 0) {\r\n        progress = 0;\r\n        isBeginning = true;\r\n        isEnd = true;\r\n      } else {\r\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\r\n        const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\r\n        const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\r\n        isBeginning = isBeginningRounded || progress <= 0;\r\n        isEnd = isEndRounded || progress >= 1;\r\n        if (isBeginningRounded) progress = 0;\r\n        if (isEndRounded) progress = 1;\r\n      }\r\n      if (params.loop) {\r\n        const firstSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') === '0')[0]);\r\n        const lastSlideIndex = elementIndex(swiper.slides.filter(el => el.getAttribute('data-swiper-slide-index') * 1 === swiper.slides.length - 1)[0]);\r\n        const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\r\n        const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\r\n        const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\r\n        const translateAbs = Math.abs(translate);\r\n        if (translateAbs >= firstSlideTranslate) {\r\n          progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\r\n        } else {\r\n          progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\r\n        }\r\n        if (progressLoop > 1) progressLoop -= 1;\r\n      }\r\n      Object.assign(swiper, {\r\n        progress,\r\n        progressLoop,\r\n        isBeginning,\r\n        isEnd\r\n      });\r\n      if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\r\n      if (isBeginning && !wasBeginning) {\r\n        swiper.emit('reachBeginning toEdge');\r\n      }\r\n      if (isEnd && !wasEnd) {\r\n        swiper.emit('reachEnd toEdge');\r\n      }\r\n      if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\r\n        swiper.emit('fromEdge');\r\n      }\r\n      swiper.emit('progress', progress);\r\n    }\r\n\r\n    function updateSlidesClasses() {\r\n      const swiper = this;\r\n      const {\r\n        slides,\r\n        params,\r\n        slidesEl,\r\n        activeIndex\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      const getFilteredSlide = selector => {\r\n        return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\r\n      };\r\n      slides.forEach(slideEl => {\r\n        slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\r\n      });\r\n      let activeSlide;\r\n      if (isVirtual) {\r\n        if (params.loop) {\r\n          let slideIndex = activeIndex - swiper.virtual.slidesBefore;\r\n          if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\r\n          if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\r\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\r\n        } else {\r\n          activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n        }\r\n      } else {\r\n        activeSlide = slides[activeIndex];\r\n      }\r\n      if (activeSlide) {\r\n        // Active classes\r\n        activeSlide.classList.add(params.slideActiveClass);\r\n\r\n        // Next Slide\r\n        let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\r\n        if (params.loop && !nextSlide) {\r\n          nextSlide = slides[0];\r\n        }\r\n        if (nextSlide) {\r\n          nextSlide.classList.add(params.slideNextClass);\r\n        }\r\n        // Prev Slide\r\n        let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\r\n        if (params.loop && !prevSlide === 0) {\r\n          prevSlide = slides[slides.length - 1];\r\n        }\r\n        if (prevSlide) {\r\n          prevSlide.classList.add(params.slidePrevClass);\r\n        }\r\n      }\r\n      swiper.emitSlidesClasses();\r\n    }\r\n\r\n    function getActiveIndexByTranslate(swiper) {\r\n      const {\r\n        slidesGrid,\r\n        params\r\n      } = swiper;\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      let activeIndex;\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\r\n            activeIndex = i;\r\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n            activeIndex = i + 1;\r\n          }\r\n        } else if (translate >= slidesGrid[i]) {\r\n          activeIndex = i;\r\n        }\r\n      }\r\n      // Normalize slideIndex\r\n      if (params.normalizeSlideIndex) {\r\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n      }\r\n      return activeIndex;\r\n    }\r\n    function updateActiveIndex(newActiveIndex) {\r\n      const swiper = this;\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      const {\r\n        snapGrid,\r\n        params,\r\n        activeIndex: previousIndex,\r\n        realIndex: previousRealIndex,\r\n        snapIndex: previousSnapIndex\r\n      } = swiper;\r\n      let activeIndex = newActiveIndex;\r\n      let snapIndex;\r\n      const getVirtualRealIndex = aIndex => {\r\n        let realIndex = aIndex - swiper.virtual.slidesBefore;\r\n        if (realIndex < 0) {\r\n          realIndex = swiper.virtual.slides.length + realIndex;\r\n        }\r\n        if (realIndex >= swiper.virtual.slides.length) {\r\n          realIndex -= swiper.virtual.slides.length;\r\n        }\r\n        return realIndex;\r\n      };\r\n      if (typeof activeIndex === 'undefined') {\r\n        activeIndex = getActiveIndexByTranslate(swiper);\r\n      }\r\n      if (snapGrid.indexOf(translate) >= 0) {\r\n        snapIndex = snapGrid.indexOf(translate);\r\n      } else {\r\n        const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n      }\r\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n      if (activeIndex === previousIndex) {\r\n        if (snapIndex !== previousSnapIndex) {\r\n          swiper.snapIndex = snapIndex;\r\n          swiper.emit('snapIndexChange');\r\n        }\r\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.realIndex = getVirtualRealIndex(activeIndex);\r\n        }\r\n        return;\r\n      }\r\n      // Get real index\r\n      let realIndex;\r\n      if (swiper.virtual && params.virtual.enabled && params.loop) {\r\n        realIndex = getVirtualRealIndex(activeIndex);\r\n      } else if (swiper.slides[activeIndex]) {\r\n        realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\r\n      } else {\r\n        realIndex = activeIndex;\r\n      }\r\n      Object.assign(swiper, {\r\n        snapIndex,\r\n        realIndex,\r\n        previousIndex,\r\n        activeIndex\r\n      });\r\n      swiper.emit('activeIndexChange');\r\n      swiper.emit('snapIndexChange');\r\n      if (previousRealIndex !== realIndex) {\r\n        swiper.emit('realIndexChange');\r\n      }\r\n      if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n        swiper.emit('slideChange');\r\n      }\r\n    }\r\n\r\n    function updateClickedSlide(e) {\r\n      const swiper = this;\r\n      const params = swiper.params;\r\n      const slide = e.closest(`.${params.slideClass}, swiper-slide`);\r\n      let slideFound = false;\r\n      let slideIndex;\r\n      if (slide) {\r\n        for (let i = 0; i < swiper.slides.length; i += 1) {\r\n          if (swiper.slides[i] === slide) {\r\n            slideFound = true;\r\n            slideIndex = i;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (slide && slideFound) {\r\n        swiper.clickedSlide = slide;\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\r\n        } else {\r\n          swiper.clickedIndex = slideIndex;\r\n        }\r\n      } else {\r\n        swiper.clickedSlide = undefined;\r\n        swiper.clickedIndex = undefined;\r\n        return;\r\n      }\r\n      if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n        swiper.slideToClickedSlide();\r\n      }\r\n    }\r\n\r\n    var update = {\r\n      updateSize,\r\n      updateSlides,\r\n      updateAutoHeight,\r\n      updateSlidesOffset,\r\n      updateSlidesProgress,\r\n      updateProgress,\r\n      updateSlidesClasses,\r\n      updateActiveIndex,\r\n      updateClickedSlide\r\n    };\r\n\r\n    function getSwiperTranslate(axis) {\r\n      if (axis === void 0) {\r\n        axis = this.isHorizontal() ? 'x' : 'y';\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        rtlTranslate: rtl,\r\n        translate,\r\n        wrapperEl\r\n      } = swiper;\r\n      if (params.virtualTranslate) {\r\n        return rtl ? -translate : translate;\r\n      }\r\n      if (params.cssMode) {\r\n        return translate;\r\n      }\r\n      let currentTranslate = getTranslate(wrapperEl, axis);\r\n      if (rtl) currentTranslate = -currentTranslate;\r\n      return currentTranslate || 0;\r\n    }\r\n\r\n    function setTranslate(translate, byController) {\r\n      const swiper = this;\r\n      const {\r\n        rtlTranslate: rtl,\r\n        params,\r\n        wrapperEl,\r\n        progress\r\n      } = swiper;\r\n      let x = 0;\r\n      let y = 0;\r\n      const z = 0;\r\n      if (swiper.isHorizontal()) {\r\n        x = rtl ? -translate : translate;\r\n      } else {\r\n        y = translate;\r\n      }\r\n      if (params.roundLengths) {\r\n        x = Math.floor(x);\r\n        y = Math.floor(y);\r\n      }\r\n      if (params.cssMode) {\r\n        wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n      } else if (!params.virtualTranslate) {\r\n        wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\r\n      }\r\n      swiper.previousTranslate = swiper.translate;\r\n      swiper.translate = swiper.isHorizontal() ? x : y;\r\n\r\n      // Check if we need to update progress\r\n      let newProgress;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      if (translatesDiff === 0) {\r\n        newProgress = 0;\r\n      } else {\r\n        newProgress = (translate - swiper.minTranslate()) / translatesDiff;\r\n      }\r\n      if (newProgress !== progress) {\r\n        swiper.updateProgress(translate);\r\n      }\r\n      swiper.emit('setTranslate', swiper.translate, byController);\r\n    }\r\n\r\n    function minTranslate() {\r\n      return -this.snapGrid[0];\r\n    }\r\n\r\n    function maxTranslate() {\r\n      return -this.snapGrid[this.snapGrid.length - 1];\r\n    }\r\n\r\n    function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\r\n      if (translate === void 0) {\r\n        translate = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (translateBounds === void 0) {\r\n        translateBounds = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        wrapperEl\r\n      } = swiper;\r\n      if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return false;\r\n      }\r\n      const minTranslate = swiper.minTranslate();\r\n      const maxTranslate = swiper.maxTranslate();\r\n      let newTranslate;\r\n      if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\r\n\r\n      // Update progress\r\n      swiper.updateProgress(newTranslate);\r\n      if (params.cssMode) {\r\n        const isH = swiper.isHorizontal();\r\n        if (speed === 0) {\r\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n        } else {\r\n          if (!swiper.support.smoothScroll) {\r\n            animateCSSModeScroll({\r\n              swiper,\r\n              targetPosition: -newTranslate,\r\n              side: isH ? 'left' : 'top'\r\n            });\r\n            return true;\r\n          }\r\n          wrapperEl.scrollTo({\r\n            [isH ? 'left' : 'top']: -newTranslate,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n      if (speed === 0) {\r\n        swiper.setTransition(0);\r\n        swiper.setTranslate(newTranslate);\r\n        if (runCallbacks) {\r\n          swiper.emit('beforeTransitionStart', speed, internal);\r\n          swiper.emit('transitionEnd');\r\n        }\r\n      } else {\r\n        swiper.setTransition(speed);\r\n        swiper.setTranslate(newTranslate);\r\n        if (runCallbacks) {\r\n          swiper.emit('beforeTransitionStart', speed, internal);\r\n          swiper.emit('transitionStart');\r\n        }\r\n        if (!swiper.animating) {\r\n          swiper.animating = true;\r\n          if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n            swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n              if (!swiper || swiper.destroyed) return;\r\n              if (e.target !== this) return;\r\n              swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n              swiper.onTranslateToWrapperTransitionEnd = null;\r\n              delete swiper.onTranslateToWrapperTransitionEnd;\r\n              if (runCallbacks) {\r\n                swiper.emit('transitionEnd');\r\n              }\r\n            };\r\n          }\r\n          swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    var translate = {\r\n      getTranslate: getSwiperTranslate,\r\n      setTranslate,\r\n      minTranslate,\r\n      maxTranslate,\r\n      translateTo\r\n    };\r\n\r\n    function setTransition(duration, byController) {\r\n      const swiper = this;\r\n      if (!swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\r\n      }\r\n      swiper.emit('setTransition', duration, byController);\r\n    }\r\n\r\n    function transitionEmit(_ref) {\r\n      let {\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step\r\n      } = _ref;\r\n      const {\r\n        activeIndex,\r\n        previousIndex\r\n      } = swiper;\r\n      let dir = direction;\r\n      if (!dir) {\r\n        if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\r\n      }\r\n      swiper.emit(`transition${step}`);\r\n      if (runCallbacks && activeIndex !== previousIndex) {\r\n        if (dir === 'reset') {\r\n          swiper.emit(`slideResetTransition${step}`);\r\n          return;\r\n        }\r\n        swiper.emit(`slideChangeTransition${step}`);\r\n        if (dir === 'next') {\r\n          swiper.emit(`slideNextTransition${step}`);\r\n        } else {\r\n          swiper.emit(`slidePrevTransition${step}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    function transitionStart(runCallbacks, direction) {\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params\r\n      } = swiper;\r\n      if (params.cssMode) return;\r\n      if (params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n      transitionEmit({\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step: 'Start'\r\n      });\r\n    }\r\n\r\n    function transitionEnd(runCallbacks, direction) {\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params\r\n      } = swiper;\r\n      swiper.animating = false;\r\n      if (params.cssMode) return;\r\n      swiper.setTransition(0);\r\n      transitionEmit({\r\n        swiper,\r\n        runCallbacks,\r\n        direction,\r\n        step: 'End'\r\n      });\r\n    }\r\n\r\n    var transition = {\r\n      setTransition,\r\n      transitionStart,\r\n      transitionEnd\r\n    };\r\n\r\n    function slideTo(index, speed, runCallbacks, internal, initial) {\r\n      if (index === void 0) {\r\n        index = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (typeof index === 'string') {\r\n        index = parseInt(index, 10);\r\n      }\r\n      const swiper = this;\r\n      let slideIndex = index;\r\n      if (slideIndex < 0) slideIndex = 0;\r\n      const {\r\n        params,\r\n        snapGrid,\r\n        slidesGrid,\r\n        previousIndex,\r\n        activeIndex,\r\n        rtlTranslate: rtl,\r\n        wrapperEl,\r\n        enabled\r\n      } = swiper;\r\n      if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\r\n        return false;\r\n      }\r\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n      let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n      if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n      const translate = -snapGrid[snapIndex];\r\n      // Normalize slideIndex\r\n      if (params.normalizeSlideIndex) {\r\n        for (let i = 0; i < slidesGrid.length; i += 1) {\r\n          const normalizedTranslate = -Math.floor(translate * 100);\r\n          const normalizedGrid = Math.floor(slidesGrid[i] * 100);\r\n          const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\r\n          if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\r\n              slideIndex = i;\r\n            } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\r\n              slideIndex = i + 1;\r\n            }\r\n          } else if (normalizedTranslate >= normalizedGrid) {\r\n            slideIndex = i;\r\n          }\r\n        }\r\n      }\r\n      // Directions locks\r\n      if (swiper.initialized && slideIndex !== activeIndex) {\r\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n          return false;\r\n        }\r\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n          if ((activeIndex || 0) !== slideIndex) {\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n      if (slideIndex !== (previousIndex || 0) && runCallbacks) {\r\n        swiper.emit('beforeSlideChangeStart');\r\n      }\r\n\r\n      // Update progress\r\n      swiper.updateProgress(translate);\r\n      let direction;\r\n      if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\r\n\r\n      // Update Index\r\n      if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n        swiper.updateActiveIndex(slideIndex);\r\n        // Update Height\r\n        if (params.autoHeight) {\r\n          swiper.updateAutoHeight();\r\n        }\r\n        swiper.updateSlidesClasses();\r\n        if (params.effect !== 'slide') {\r\n          swiper.setTranslate(translate);\r\n        }\r\n        if (direction !== 'reset') {\r\n          swiper.transitionStart(runCallbacks, direction);\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        }\r\n        return false;\r\n      }\r\n      if (params.cssMode) {\r\n        const isH = swiper.isHorizontal();\r\n        const t = rtl ? translate : -translate;\r\n        if (speed === 0) {\r\n          const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n          if (isVirtual) {\r\n            swiper.wrapperEl.style.scrollSnapType = 'none';\r\n            swiper._immediateVirtual = true;\r\n          }\r\n          if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\r\n            swiper._cssModeVirtualInitialSet = true;\r\n            requestAnimationFrame(() => {\r\n              wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n            });\r\n          } else {\r\n            wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n          }\r\n          if (isVirtual) {\r\n            requestAnimationFrame(() => {\r\n              swiper.wrapperEl.style.scrollSnapType = '';\r\n              swiper._immediateVirtual = false;\r\n            });\r\n          }\r\n        } else {\r\n          if (!swiper.support.smoothScroll) {\r\n            animateCSSModeScroll({\r\n              swiper,\r\n              targetPosition: t,\r\n              side: isH ? 'left' : 'top'\r\n            });\r\n            return true;\r\n          }\r\n          wrapperEl.scrollTo({\r\n            [isH ? 'left' : 'top']: t,\r\n            behavior: 'smooth'\r\n          });\r\n        }\r\n        return true;\r\n      }\r\n      swiper.setTransition(speed);\r\n      swiper.setTranslate(translate);\r\n      swiper.updateActiveIndex(slideIndex);\r\n      swiper.updateSlidesClasses();\r\n      swiper.emit('beforeTransitionStart', speed, internal);\r\n      swiper.transitionStart(runCallbacks, direction);\r\n      if (speed === 0) {\r\n        swiper.transitionEnd(runCallbacks, direction);\r\n      } else if (!swiper.animating) {\r\n        swiper.animating = true;\r\n        if (!swiper.onSlideToWrapperTransitionEnd) {\r\n          swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n            if (!swiper || swiper.destroyed) return;\r\n            if (e.target !== this) return;\r\n            swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n            swiper.onSlideToWrapperTransitionEnd = null;\r\n            delete swiper.onSlideToWrapperTransitionEnd;\r\n            swiper.transitionEnd(runCallbacks, direction);\r\n          };\r\n        }\r\n        swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      }\r\n      return true;\r\n    }\r\n\r\n    function slideToLoop(index, speed, runCallbacks, internal) {\r\n      if (index === void 0) {\r\n        index = 0;\r\n      }\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (typeof index === 'string') {\r\n        const indexAsNumber = parseInt(index, 10);\r\n        index = indexAsNumber;\r\n      }\r\n      const swiper = this;\r\n      let newIndex = index;\r\n      if (swiper.params.loop) {\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          // eslint-disable-next-line\r\n          newIndex = newIndex + swiper.virtual.slidesBefore;\r\n        } else {\r\n          newIndex = elementIndex(swiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === newIndex)[0]);\r\n        }\r\n      }\r\n      return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideNext(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        enabled,\r\n        params,\r\n        animating\r\n      } = swiper;\r\n      if (!enabled) return swiper;\r\n      let perGroup = params.slidesPerGroup;\r\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n        perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\r\n      }\r\n      const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      if (params.loop) {\r\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\r\n        swiper.loopFix({\r\n          direction: 'next'\r\n        });\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\r\n      }\r\n      if (params.rewind && swiper.isEnd) {\r\n        return swiper.slideTo(0, speed, runCallbacks, internal);\r\n      }\r\n      return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slidePrev(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        snapGrid,\r\n        slidesGrid,\r\n        rtlTranslate,\r\n        enabled,\r\n        animating\r\n      } = swiper;\r\n      if (!enabled) return swiper;\r\n      const isVirtual = swiper.virtual && params.virtual.enabled;\r\n      if (params.loop) {\r\n        if (animating && !isVirtual && params.loopPreventsSliding) return false;\r\n        swiper.loopFix({\r\n          direction: 'prev'\r\n        });\r\n        // eslint-disable-next-line\r\n        swiper._clientLeft = swiper.wrapperEl.clientLeft;\r\n      }\r\n      const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n      function normalize(val) {\r\n        if (val < 0) return -Math.floor(Math.abs(val));\r\n        return Math.floor(val);\r\n      }\r\n      const normalizedTranslate = normalize(translate);\r\n      const normalizedSnapGrid = snapGrid.map(val => normalize(val));\r\n      let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n      if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n        let prevSnapIndex;\r\n        snapGrid.forEach((snap, snapIndex) => {\r\n          if (normalizedTranslate >= snap) {\r\n            // prevSnap = snap;\r\n            prevSnapIndex = snapIndex;\r\n          }\r\n        });\r\n        if (typeof prevSnapIndex !== 'undefined') {\r\n          prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\r\n        }\r\n      }\r\n      let prevIndex = 0;\r\n      if (typeof prevSnap !== 'undefined') {\r\n        prevIndex = slidesGrid.indexOf(prevSnap);\r\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n        if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n          prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\r\n          prevIndex = Math.max(prevIndex, 0);\r\n        }\r\n      }\r\n      if (params.rewind && swiper.isBeginning) {\r\n        const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\r\n      }\r\n      return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideReset(speed, runCallbacks, internal) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      const swiper = this;\r\n      return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    /* eslint no-unused-vars: \"off\" */\r\n    function slideToClosest(speed, runCallbacks, internal, threshold) {\r\n      if (speed === void 0) {\r\n        speed = this.params.speed;\r\n      }\r\n      if (runCallbacks === void 0) {\r\n        runCallbacks = true;\r\n      }\r\n      if (threshold === void 0) {\r\n        threshold = 0.5;\r\n      }\r\n      const swiper = this;\r\n      let index = swiper.activeIndex;\r\n      const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n      const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n      const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n      if (translate >= swiper.snapGrid[snapIndex]) {\r\n        // The current translate is on or after the current snap index, so the choice\r\n        // is between the current index and the one after it.\r\n        const currentSnap = swiper.snapGrid[snapIndex];\r\n        const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\r\n          index += swiper.params.slidesPerGroup;\r\n        }\r\n      } else {\r\n        // The current translate is before the current snap index, so the choice\r\n        // is between the current index and the one before it.\r\n        const prevSnap = swiper.snapGrid[snapIndex - 1];\r\n        const currentSnap = swiper.snapGrid[snapIndex];\r\n        if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\r\n          index -= swiper.params.slidesPerGroup;\r\n        }\r\n      }\r\n      index = Math.max(index, 0);\r\n      index = Math.min(index, swiper.slidesGrid.length - 1);\r\n      return swiper.slideTo(index, speed, runCallbacks, internal);\r\n    }\r\n\r\n    function slideToClickedSlide() {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n      let slideToIndex = swiper.clickedIndex;\r\n      let realIndex;\r\n      const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\r\n      if (params.loop) {\r\n        if (swiper.animating) return;\r\n        realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\r\n        if (params.centeredSlides) {\r\n          if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\r\n            swiper.loopFix();\r\n            slideToIndex = elementIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\r\n            nextTick(() => {\r\n              swiper.slideTo(slideToIndex);\r\n            });\r\n          } else {\r\n            swiper.slideTo(slideToIndex);\r\n          }\r\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n          swiper.loopFix();\r\n          slideToIndex = elementIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\r\n          nextTick(() => {\r\n            swiper.slideTo(slideToIndex);\r\n          });\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    }\r\n\r\n    var slide = {\r\n      slideTo,\r\n      slideToLoop,\r\n      slideNext,\r\n      slidePrev,\r\n      slideReset,\r\n      slideToClosest,\r\n      slideToClickedSlide\r\n    };\r\n\r\n    function loopCreate(slideRealIndex) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\r\n      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\r\n      slides.forEach((el, index) => {\r\n        el.setAttribute('data-swiper-slide-index', index);\r\n      });\r\n      swiper.loopFix({\r\n        slideRealIndex,\r\n        direction: params.centeredSlides ? undefined : 'next'\r\n      });\r\n    }\r\n\r\n    function loopFix(_temp) {\r\n      let {\r\n        slideRealIndex,\r\n        slideTo = true,\r\n        direction,\r\n        setTranslate,\r\n        activeSlideIndex,\r\n        byController,\r\n        byMousewheel\r\n      } = _temp === void 0 ? {} : _temp;\r\n      const swiper = this;\r\n      if (!swiper.params.loop) return;\r\n      swiper.emit('beforeLoopFix');\r\n      const {\r\n        slides,\r\n        allowSlidePrev,\r\n        allowSlideNext,\r\n        slidesEl,\r\n        params\r\n      } = swiper;\r\n      swiper.allowSlidePrev = true;\r\n      swiper.allowSlideNext = true;\r\n      if (swiper.virtual && params.virtual.enabled) {\r\n        if (slideTo) {\r\n          if (!params.centeredSlides && swiper.snapIndex === 0) {\r\n            swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\r\n          } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\r\n            swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\r\n          } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\r\n            swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\r\n          }\r\n        }\r\n        swiper.allowSlidePrev = allowSlidePrev;\r\n        swiper.allowSlideNext = allowSlideNext;\r\n        swiper.emit('loopFix');\r\n        return;\r\n      }\r\n      const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\r\n      let loopedSlides = params.loopedSlides || slidesPerView;\r\n      if (loopedSlides % params.slidesPerGroup !== 0) {\r\n        loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\r\n      }\r\n      swiper.loopedSlides = loopedSlides;\r\n      const prependSlidesIndexes = [];\r\n      const appendSlidesIndexes = [];\r\n      let activeIndex = swiper.activeIndex;\r\n      if (typeof activeSlideIndex === 'undefined') {\r\n        activeSlideIndex = elementIndex(swiper.slides.filter(el => el.classList.contains('swiper-slide-active'))[0]);\r\n      } else {\r\n        activeIndex = activeSlideIndex;\r\n      }\r\n      const isNext = direction === 'next' || !direction;\r\n      const isPrev = direction === 'prev' || !direction;\r\n      let slidesPrepended = 0;\r\n      let slidesAppended = 0;\r\n      // prepend last slides before start\r\n      if (activeSlideIndex < loopedSlides) {\r\n        slidesPrepended = loopedSlides - activeSlideIndex;\r\n        for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\r\n          const index = i - Math.floor(i / slides.length) * slides.length;\r\n          prependSlidesIndexes.push(slides.length - index - 1);\r\n        }\r\n      } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\r\n        slidesAppended = activeSlideIndex - (swiper.slides.length - loopedSlides * 2);\r\n        for (let i = 0; i < slidesAppended; i += 1) {\r\n          const index = i - Math.floor(i / slides.length) * slides.length;\r\n          appendSlidesIndexes.push(index);\r\n        }\r\n      }\r\n      if (isPrev) {\r\n        prependSlidesIndexes.forEach(index => {\r\n          slidesEl.prepend(swiper.slides[index]);\r\n        });\r\n      }\r\n      if (isNext) {\r\n        appendSlidesIndexes.forEach(index => {\r\n          slidesEl.append(swiper.slides[index]);\r\n        });\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.watchSlidesProgress) {\r\n        swiper.updateSlidesOffset();\r\n      }\r\n      if (slideTo) {\r\n        if (prependSlidesIndexes.length > 0 && isPrev) {\r\n          if (typeof slideRealIndex === 'undefined') {\r\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\r\n            const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\r\n            const diff = newSlideTranslate - currentSlideTranslate;\r\n            if (byMousewheel) {\r\n              swiper.setTranslate(swiper.translate - diff);\r\n            } else {\r\n              swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\r\n              if (setTranslate) {\r\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\r\n              }\r\n            }\r\n          } else {\r\n            if (setTranslate) {\r\n              swiper.slideToLoop(slideRealIndex, 0, false, true);\r\n            }\r\n          }\r\n        } else if (appendSlidesIndexes.length > 0 && isNext) {\r\n          if (typeof slideRealIndex === 'undefined') {\r\n            const currentSlideTranslate = swiper.slidesGrid[activeIndex];\r\n            const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\r\n            const diff = newSlideTranslate - currentSlideTranslate;\r\n            if (byMousewheel) {\r\n              swiper.setTranslate(swiper.translate - diff);\r\n            } else {\r\n              swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\r\n              if (setTranslate) {\r\n                swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\r\n              }\r\n            }\r\n          } else {\r\n            swiper.slideToLoop(slideRealIndex, 0, false, true);\r\n          }\r\n        }\r\n      }\r\n      swiper.allowSlidePrev = allowSlidePrev;\r\n      swiper.allowSlideNext = allowSlideNext;\r\n      if (swiper.controller && swiper.controller.control && !byController) {\r\n        const loopParams = {\r\n          slideRealIndex,\r\n          slideTo: false,\r\n          direction,\r\n          setTranslate,\r\n          activeSlideIndex,\r\n          byController: true\r\n        };\r\n        if (Array.isArray(swiper.controller.control)) {\r\n          swiper.controller.control.forEach(c => {\r\n            if (c.params.loop) c.loopFix(loopParams);\r\n          });\r\n        } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\r\n          swiper.controller.control.loopFix(loopParams);\r\n        }\r\n      }\r\n      swiper.emit('loopFix');\r\n    }\r\n\r\n    function loopDestroy() {\r\n      const swiper = this;\r\n      const {\r\n        slides,\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\r\n      swiper.recalcSlides();\r\n      const newSlidesOrder = [];\r\n      slides.forEach(slideEl => {\r\n        const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\r\n        newSlidesOrder[index] = slideEl;\r\n      });\r\n      slides.forEach(slideEl => {\r\n        slideEl.removeAttribute('data-swiper-slide-index');\r\n      });\r\n      newSlidesOrder.forEach(slideEl => {\r\n        slidesEl.append(slideEl);\r\n      });\r\n      swiper.recalcSlides();\r\n      swiper.slideTo(swiper.realIndex, 0);\r\n    }\r\n\r\n    var loop = {\r\n      loopCreate,\r\n      loopFix,\r\n      loopDestroy\r\n    };\r\n\r\n    function setGrabCursor(moving) {\r\n      const swiper = this;\r\n      if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\r\n      const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\r\n      el.style.cursor = 'move';\r\n      el.style.cursor = moving ? 'grabbing' : 'grab';\r\n    }\r\n\r\n    function unsetGrabCursor() {\r\n      const swiper = this;\r\n      if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\r\n        return;\r\n      }\r\n      swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\r\n    }\r\n\r\n    var grabCursor = {\r\n      setGrabCursor,\r\n      unsetGrabCursor\r\n    };\r\n\r\n    // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\r\n    function closestElement(selector, base) {\r\n      if (base === void 0) {\r\n        base = this;\r\n      }\r\n      function __closestFrom(el) {\r\n        if (!el || el === getDocument() || el === getWindow()) return null;\r\n        if (el.assignedSlot) el = el.assignedSlot;\r\n        const found = el.closest(selector);\r\n        if (!found && !el.getRootNode) {\r\n          return null;\r\n        }\r\n        return found || __closestFrom(el.getRootNode().host);\r\n      }\r\n      return __closestFrom(base);\r\n    }\r\n    function onTouchStart(event) {\r\n      const swiper = this;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      const data = swiper.touchEventsData;\r\n      data.evCache.push(event);\r\n      const {\r\n        params,\r\n        touches,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      if (swiper.animating && params.preventInteractionOnTransition) {\r\n        return;\r\n      }\r\n      if (!swiper.animating && params.cssMode && params.loop) {\r\n        swiper.loopFix();\r\n      }\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      let targetEl = e.target;\r\n      if (params.touchEventsTarget === 'wrapper') {\r\n        if (!swiper.wrapperEl.contains(targetEl)) return;\r\n      }\r\n      if ('which' in e && e.which === 3) return;\r\n      if ('button' in e && e.button > 0) return;\r\n      if (data.isTouched && data.isMoved) return;\r\n\r\n      // change target el for shadow root component\r\n      const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\r\n      // eslint-disable-next-line\r\n      const eventPath = event.composedPath ? event.composedPath() : event.path;\r\n      if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\r\n        targetEl = eventPath[0];\r\n      }\r\n      const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\r\n      const isTargetShadow = !!(e.target && e.target.shadowRoot);\r\n\r\n      // use closestElement for shadow root element to get the actual closest for nested shadow root element\r\n      if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\r\n        swiper.allowClick = true;\r\n        return;\r\n      }\r\n      if (params.swipeHandler) {\r\n        if (!targetEl.closest(params.swipeHandler)) return;\r\n      }\r\n      touches.currentX = e.pageX;\r\n      touches.currentY = e.pageY;\r\n      const startX = touches.currentX;\r\n      const startY = touches.currentY;\r\n\r\n      // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\r\n\r\n      const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n      const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n      if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\r\n        if (edgeSwipeDetection === 'prevent') {\r\n          event.preventDefault();\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n      Object.assign(data, {\r\n        isTouched: true,\r\n        isMoved: false,\r\n        allowTouchCallbacks: true,\r\n        isScrolling: undefined,\r\n        startMoving: undefined\r\n      });\r\n      touches.startX = startX;\r\n      touches.startY = startY;\r\n      data.touchStartTime = now();\r\n      swiper.allowClick = true;\r\n      swiper.updateSize();\r\n      swiper.swipeDirection = undefined;\r\n      if (params.threshold > 0) data.allowThresholdMove = false;\r\n      let preventDefault = true;\r\n      if (targetEl.matches(data.focusableElements)) {\r\n        preventDefault = false;\r\n        if (targetEl.nodeName === 'SELECT') {\r\n          data.isTouched = false;\r\n        }\r\n      }\r\n      if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\r\n        document.activeElement.blur();\r\n      }\r\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\r\n        e.preventDefault();\r\n      }\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\r\n        swiper.freeMode.onTouchStart();\r\n      }\r\n      swiper.emit('touchStart', e);\r\n    }\r\n\r\n    function onTouchMove(event) {\r\n      const document = getDocument();\r\n      const swiper = this;\r\n      const data = swiper.touchEventsData;\r\n      const {\r\n        params,\r\n        touches,\r\n        rtlTranslate: rtl,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      if (!data.isTouched) {\r\n        if (data.startMoving && data.isScrolling) {\r\n          swiper.emit('touchMoveOpposite', e);\r\n        }\r\n        return;\r\n      }\r\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n      if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\r\n      const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\r\n      const pageX = targetTouch.pageX;\r\n      const pageY = targetTouch.pageY;\r\n      if (e.preventedByNestedSwiper) {\r\n        touches.startX = pageX;\r\n        touches.startY = pageY;\r\n        return;\r\n      }\r\n      if (!swiper.allowTouchMove) {\r\n        if (!e.target.matches(data.focusableElements)) {\r\n          swiper.allowClick = false;\r\n        }\r\n        if (data.isTouched) {\r\n          Object.assign(touches, {\r\n            startX: pageX,\r\n            startY: pageY,\r\n            prevX: swiper.touches.currentX,\r\n            prevY: swiper.touches.currentY,\r\n            currentX: pageX,\r\n            currentY: pageY\r\n          });\r\n          data.touchStartTime = now();\r\n        }\r\n        return;\r\n      }\r\n      if (params.touchReleaseOnEdges && !params.loop) {\r\n        if (swiper.isVertical()) {\r\n          // Vertical\r\n          if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\r\n            data.isTouched = false;\r\n            data.isMoved = false;\r\n            return;\r\n          }\r\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\r\n          return;\r\n        }\r\n      }\r\n      if (document.activeElement) {\r\n        if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\r\n          data.isMoved = true;\r\n          swiper.allowClick = false;\r\n          return;\r\n        }\r\n      }\r\n      if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchMove', e);\r\n      }\r\n      if (e.targetTouches && e.targetTouches.length > 1) return;\r\n      touches.currentX = pageX;\r\n      touches.currentY = pageY;\r\n      const diffX = touches.currentX - touches.startX;\r\n      const diffY = touches.currentY - touches.startY;\r\n      if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\r\n      if (typeof data.isScrolling === 'undefined') {\r\n        let touchAngle;\r\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\r\n          data.isScrolling = false;\r\n        } else {\r\n          // eslint-disable-next-line\r\n          if (diffX * diffX + diffY * diffY >= 25) {\r\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\r\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\r\n          }\r\n        }\r\n      }\r\n      if (data.isScrolling) {\r\n        swiper.emit('touchMoveOpposite', e);\r\n      }\r\n      if (typeof data.startMoving === 'undefined') {\r\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n          data.startMoving = true;\r\n        }\r\n      }\r\n      if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\r\n        data.isTouched = false;\r\n        return;\r\n      }\r\n      if (!data.startMoving) {\r\n        return;\r\n      }\r\n      swiper.allowClick = false;\r\n      if (!params.cssMode && e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n      if (params.touchMoveStopPropagation && !params.nested) {\r\n        e.stopPropagation();\r\n      }\r\n      let diff = swiper.isHorizontal() ? diffX : diffY;\r\n      let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\r\n      if (params.oneWayMovement) {\r\n        diff = Math.abs(diff) * (rtl ? 1 : -1);\r\n        touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\r\n      }\r\n      touches.diff = diff;\r\n      diff *= params.touchRatio;\r\n      if (rtl) {\r\n        diff = -diff;\r\n        touchesDiff = -touchesDiff;\r\n      }\r\n      const prevTouchesDirection = swiper.touchesDirection;\r\n      swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n      swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\r\n      const isLoop = swiper.params.loop && !params.cssMode;\r\n      if (!data.isMoved) {\r\n        if (isLoop) {\r\n          swiper.loopFix({\r\n            direction: swiper.swipeDirection\r\n          });\r\n        }\r\n        data.startTranslate = swiper.getTranslate();\r\n        swiper.setTransition(0);\r\n        if (swiper.animating) {\r\n          const evt = new window.CustomEvent('transitionend', {\r\n            bubbles: true,\r\n            cancelable: true\r\n          });\r\n          swiper.wrapperEl.dispatchEvent(evt);\r\n        }\r\n        data.allowMomentumBounce = false;\r\n        // Grab Cursor\r\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n          swiper.setGrabCursor(true);\r\n        }\r\n        swiper.emit('sliderFirstMove', e);\r\n      }\r\n      let loopFixed;\r\n      if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\r\n        // need another loop fix\r\n        swiper.loopFix({\r\n          direction: swiper.swipeDirection,\r\n          setTranslate: true\r\n        });\r\n        loopFixed = true;\r\n      }\r\n      swiper.emit('sliderMove', e);\r\n      data.isMoved = true;\r\n      data.currentTranslate = diff + data.startTranslate;\r\n      let disableParentSwiper = true;\r\n      let resistanceRatio = params.resistanceRatio;\r\n      if (params.touchReleaseOnEdges) {\r\n        resistanceRatio = 0;\r\n      }\r\n      if (diff > 0) {\r\n        if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\r\n          swiper.loopFix({\r\n            direction: 'prev',\r\n            setTranslate: true,\r\n            activeSlideIndex: 0\r\n          });\r\n        }\r\n        if (data.currentTranslate > swiper.minTranslate()) {\r\n          disableParentSwiper = false;\r\n          if (params.resistance) {\r\n            data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\r\n          }\r\n        }\r\n      } else if (diff < 0) {\r\n        if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\r\n          swiper.loopFix({\r\n            direction: 'next',\r\n            setTranslate: true,\r\n            activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\r\n          });\r\n        }\r\n        if (data.currentTranslate < swiper.maxTranslate()) {\r\n          disableParentSwiper = false;\r\n          if (params.resistance) {\r\n            data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\r\n          }\r\n        }\r\n      }\r\n      if (disableParentSwiper) {\r\n        e.preventedByNestedSwiper = true;\r\n      }\r\n\r\n      // Directions locks\r\n      if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n      if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n      if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\r\n        data.currentTranslate = data.startTranslate;\r\n      }\r\n\r\n      // Threshold\r\n      if (params.threshold > 0) {\r\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n          if (!data.allowThresholdMove) {\r\n            data.allowThresholdMove = true;\r\n            touches.startX = touches.currentX;\r\n            touches.startY = touches.currentY;\r\n            data.currentTranslate = data.startTranslate;\r\n            touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n            return;\r\n          }\r\n        } else {\r\n          data.currentTranslate = data.startTranslate;\r\n          return;\r\n        }\r\n      }\r\n      if (!params.followFinger || params.cssMode) return;\r\n\r\n      // Update active index in free mode\r\n      if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\r\n        swiper.freeMode.onTouchMove();\r\n      }\r\n      // Update progress\r\n      swiper.updateProgress(data.currentTranslate);\r\n      // Update translate\r\n      swiper.setTranslate(data.currentTranslate);\r\n    }\r\n\r\n    function onTouchEnd(event) {\r\n      const swiper = this;\r\n      const data = swiper.touchEventsData;\r\n      const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\r\n      if (pointerIndex >= 0) {\r\n        data.evCache.splice(pointerIndex, 1);\r\n      }\r\n      if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) return;\r\n      const {\r\n        params,\r\n        touches,\r\n        rtlTranslate: rtl,\r\n        slidesGrid,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      if (!params.simulateTouch && event.pointerType === 'mouse') return;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent;\r\n      if (data.allowTouchCallbacks) {\r\n        swiper.emit('touchEnd', e);\r\n      }\r\n      data.allowTouchCallbacks = false;\r\n      if (!data.isTouched) {\r\n        if (data.isMoved && params.grabCursor) {\r\n          swiper.setGrabCursor(false);\r\n        }\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n      }\r\n      // Return Grab Cursor\r\n      if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n        swiper.setGrabCursor(false);\r\n      }\r\n\r\n      // Time diff\r\n      const touchEndTime = now();\r\n      const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n      // Tap, doubleTap, Click\r\n      if (swiper.allowClick) {\r\n        const pathTree = e.path || e.composedPath && e.composedPath();\r\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\r\n        swiper.emit('tap click', e);\r\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\r\n          swiper.emit('doubleTap doubleClick', e);\r\n        }\r\n      }\r\n      data.lastClickTime = now();\r\n      nextTick(() => {\r\n        if (!swiper.destroyed) swiper.allowClick = true;\r\n      });\r\n      if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        data.startMoving = false;\r\n        return;\r\n      }\r\n      data.isTouched = false;\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      let currentPos;\r\n      if (params.followFinger) {\r\n        currentPos = rtl ? swiper.translate : -swiper.translate;\r\n      } else {\r\n        currentPos = -data.currentTranslate;\r\n      }\r\n      if (params.cssMode) {\r\n        return;\r\n      }\r\n      if (swiper.params.freeMode && params.freeMode.enabled) {\r\n        swiper.freeMode.onTouchEnd({\r\n          currentPos\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Find current slide\r\n      let stopIndex = 0;\r\n      let groupSize = swiper.slidesSizesGrid[0];\r\n      for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\r\n        const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n        if (typeof slidesGrid[i + increment] !== 'undefined') {\r\n          if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\r\n            stopIndex = i;\r\n            groupSize = slidesGrid[i + increment] - slidesGrid[i];\r\n          }\r\n        } else if (currentPos >= slidesGrid[i]) {\r\n          stopIndex = i;\r\n          groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n        }\r\n      }\r\n      let rewindFirstIndex = null;\r\n      let rewindLastIndex = null;\r\n      if (params.rewind) {\r\n        if (swiper.isBeginning) {\r\n          rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n        } else if (swiper.isEnd) {\r\n          rewindFirstIndex = 0;\r\n        }\r\n      }\r\n      // Find current slide size\r\n      const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n      const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n      if (timeDiff > params.longSwipesMs) {\r\n        // Long touches\r\n        if (!params.longSwipes) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        if (swiper.swipeDirection === 'next') {\r\n          if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\r\n        }\r\n        if (swiper.swipeDirection === 'prev') {\r\n          if (ratio > 1 - params.longSwipesRatio) {\r\n            swiper.slideTo(stopIndex + increment);\r\n          } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\r\n            swiper.slideTo(rewindLastIndex);\r\n          } else {\r\n            swiper.slideTo(stopIndex);\r\n          }\r\n        }\r\n      } else {\r\n        // Short swipes\r\n        if (!params.shortSwipes) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n        if (!isNavButtonTarget) {\r\n          if (swiper.swipeDirection === 'next') {\r\n            swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\r\n          }\r\n          if (swiper.swipeDirection === 'prev') {\r\n            swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\r\n          }\r\n        } else if (e.target === swiper.navigation.nextEl) {\r\n          swiper.slideTo(stopIndex + increment);\r\n        } else {\r\n          swiper.slideTo(stopIndex);\r\n        }\r\n      }\r\n    }\r\n\r\n    let timeout;\r\n    function onResize() {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        el\r\n      } = swiper;\r\n      if (el && el.offsetWidth === 0) return;\r\n\r\n      // Breakpoints\r\n      if (params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      }\r\n\r\n      // Save locks\r\n      const {\r\n        allowSlideNext,\r\n        allowSlidePrev,\r\n        snapGrid\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\r\n      // Disable locks on resize\r\n      swiper.allowSlideNext = true;\r\n      swiper.allowSlidePrev = true;\r\n      swiper.updateSize();\r\n      swiper.updateSlides();\r\n      swiper.updateSlidesClasses();\r\n      const isVirtualLoop = isVirtual && params.loop;\r\n      if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\r\n        swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n      } else {\r\n        if (swiper.params.loop && !isVirtual) {\r\n          swiper.slideToLoop(swiper.realIndex, 0, false, true);\r\n        } else {\r\n          swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n      }\r\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n          swiper.autoplay.resume();\r\n        }, 500);\r\n      }\r\n      // Return locks after resize\r\n      swiper.allowSlidePrev = allowSlidePrev;\r\n      swiper.allowSlideNext = allowSlideNext;\r\n      if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n        swiper.checkOverflow();\r\n      }\r\n    }\r\n\r\n    function onClick(e) {\r\n      const swiper = this;\r\n      if (!swiper.enabled) return;\r\n      if (!swiper.allowClick) {\r\n        if (swiper.params.preventClicks) e.preventDefault();\r\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n          e.stopPropagation();\r\n          e.stopImmediatePropagation();\r\n        }\r\n      }\r\n    }\r\n\r\n    function onScroll() {\r\n      const swiper = this;\r\n      const {\r\n        wrapperEl,\r\n        rtlTranslate,\r\n        enabled\r\n      } = swiper;\r\n      if (!enabled) return;\r\n      swiper.previousTranslate = swiper.translate;\r\n      if (swiper.isHorizontal()) {\r\n        swiper.translate = -wrapperEl.scrollLeft;\r\n      } else {\r\n        swiper.translate = -wrapperEl.scrollTop;\r\n      }\r\n      // eslint-disable-next-line\r\n      if (swiper.translate === 0) swiper.translate = 0;\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n      let newProgress;\r\n      const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n      if (translatesDiff === 0) {\r\n        newProgress = 0;\r\n      } else {\r\n        newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\r\n      }\r\n      if (newProgress !== swiper.progress) {\r\n        swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n      }\r\n      swiper.emit('setTranslate', swiper.translate, false);\r\n    }\r\n\r\n    const processLazyPreloader = (swiper, imageEl) => {\r\n      if (!swiper || swiper.destroyed || !swiper.params) return;\r\n      const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\r\n      const slideEl = imageEl.closest(slideSelector());\r\n      if (slideEl) {\r\n        const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\r\n        if (lazyEl) lazyEl.remove();\r\n      }\r\n    };\r\n\r\n    function onLoad(e) {\r\n      const swiper = this;\r\n      processLazyPreloader(swiper, e.target);\r\n      swiper.update();\r\n    }\r\n\r\n    let dummyEventAttached = false;\r\n    function dummyEventListener() {}\r\n    const events = (swiper, method) => {\r\n      const document = getDocument();\r\n      const {\r\n        params,\r\n        el,\r\n        wrapperEl,\r\n        device\r\n      } = swiper;\r\n      const capture = !!params.nested;\r\n      const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n      const swiperMethod = method;\r\n\r\n      // Touch Events\r\n      el[domMethod]('pointerdown', swiper.onTouchStart, {\r\n        passive: false\r\n      });\r\n      document[domMethod]('pointermove', swiper.onTouchMove, {\r\n        passive: false,\r\n        capture\r\n      });\r\n      document[domMethod]('pointerup', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointercancel', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointerout', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n      document[domMethod]('pointerleave', swiper.onTouchEnd, {\r\n        passive: true\r\n      });\r\n\r\n      // Prevent Links Clicks\r\n      if (params.preventClicks || params.preventClicksPropagation) {\r\n        el[domMethod]('click', swiper.onClick, true);\r\n      }\r\n      if (params.cssMode) {\r\n        wrapperEl[domMethod]('scroll', swiper.onScroll);\r\n      }\r\n\r\n      // Resize handler\r\n      if (params.updateOnWindowResize) {\r\n        swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\r\n      } else {\r\n        swiper[swiperMethod]('observerUpdate', onResize, true);\r\n      }\r\n\r\n      // Images loader\r\n      el[domMethod]('load', swiper.onLoad, {\r\n        capture: true\r\n      });\r\n    };\r\n    function attachEvents() {\r\n      const swiper = this;\r\n      const document = getDocument();\r\n      const {\r\n        params\r\n      } = swiper;\r\n      swiper.onTouchStart = onTouchStart.bind(swiper);\r\n      swiper.onTouchMove = onTouchMove.bind(swiper);\r\n      swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n      if (params.cssMode) {\r\n        swiper.onScroll = onScroll.bind(swiper);\r\n      }\r\n      swiper.onClick = onClick.bind(swiper);\r\n      swiper.onLoad = onLoad.bind(swiper);\r\n      if (!dummyEventAttached) {\r\n        document.addEventListener('touchstart', dummyEventListener);\r\n        dummyEventAttached = true;\r\n      }\r\n      events(swiper, 'on');\r\n    }\r\n    function detachEvents() {\r\n      const swiper = this;\r\n      events(swiper, 'off');\r\n    }\r\n    var events$1 = {\r\n      attachEvents,\r\n      detachEvents\r\n    };\r\n\r\n    const isGridEnabled = (swiper, params) => {\r\n      return swiper.grid && params.grid && params.grid.rows > 1;\r\n    };\r\n    function setBreakpoint() {\r\n      const swiper = this;\r\n      const {\r\n        realIndex,\r\n        initialized,\r\n        params,\r\n        el\r\n      } = swiper;\r\n      const breakpoints = params.breakpoints;\r\n      if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\r\n\r\n      // Get breakpoint for window width and update parameters\r\n      const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\r\n      if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\r\n      const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n      const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n      const wasMultiRow = isGridEnabled(swiper, params);\r\n      const isMultiRow = isGridEnabled(swiper, breakpointParams);\r\n      const wasEnabled = params.enabled;\r\n      if (wasMultiRow && !isMultiRow) {\r\n        el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\r\n        swiper.emitContainerClasses();\r\n      } else if (!wasMultiRow && isMultiRow) {\r\n        el.classList.add(`${params.containerModifierClass}grid`);\r\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\r\n          el.classList.add(`${params.containerModifierClass}grid-column`);\r\n        }\r\n        swiper.emitContainerClasses();\r\n      }\r\n\r\n      // Toggle navigation, pagination, scrollbar\r\n      ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\r\n        const wasModuleEnabled = params[prop] && params[prop].enabled;\r\n        const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\r\n        if (wasModuleEnabled && !isModuleEnabled) {\r\n          swiper[prop].disable();\r\n        }\r\n        if (!wasModuleEnabled && isModuleEnabled) {\r\n          swiper[prop].enable();\r\n        }\r\n      });\r\n      const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n      const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n      if (directionChanged && initialized) {\r\n        swiper.changeDirection();\r\n      }\r\n      extend(swiper.params, breakpointParams);\r\n      const isEnabled = swiper.params.enabled;\r\n      Object.assign(swiper, {\r\n        allowTouchMove: swiper.params.allowTouchMove,\r\n        allowSlideNext: swiper.params.allowSlideNext,\r\n        allowSlidePrev: swiper.params.allowSlidePrev\r\n      });\r\n      if (wasEnabled && !isEnabled) {\r\n        swiper.disable();\r\n      } else if (!wasEnabled && isEnabled) {\r\n        swiper.enable();\r\n      }\r\n      swiper.currentBreakpoint = breakpoint;\r\n      swiper.emit('_beforeBreakpoint', breakpointParams);\r\n      if (needsReLoop && initialized) {\r\n        swiper.loopDestroy();\r\n        swiper.loopCreate(realIndex);\r\n        swiper.updateSlides();\r\n      }\r\n      swiper.emit('breakpoint', breakpointParams);\r\n    }\r\n\r\n    function getBreakpoint(breakpoints, base, containerEl) {\r\n      if (base === void 0) {\r\n        base = 'window';\r\n      }\r\n      if (!breakpoints || base === 'container' && !containerEl) return undefined;\r\n      let breakpoint = false;\r\n      const window = getWindow();\r\n      const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\r\n      const points = Object.keys(breakpoints).map(point => {\r\n        if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n          const minRatio = parseFloat(point.substr(1));\r\n          const value = currentHeight * minRatio;\r\n          return {\r\n            value,\r\n            point\r\n          };\r\n        }\r\n        return {\r\n          value: point,\r\n          point\r\n        };\r\n      });\r\n      points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\r\n      for (let i = 0; i < points.length; i += 1) {\r\n        const {\r\n          point,\r\n          value\r\n        } = points[i];\r\n        if (base === 'window') {\r\n          if (window.matchMedia(`(min-width: ${value}px)`).matches) {\r\n            breakpoint = point;\r\n          }\r\n        } else if (value <= containerEl.clientWidth) {\r\n          breakpoint = point;\r\n        }\r\n      }\r\n      return breakpoint || 'max';\r\n    }\r\n\r\n    var breakpoints = {\r\n      setBreakpoint,\r\n      getBreakpoint\r\n    };\r\n\r\n    function prepareClasses(entries, prefix) {\r\n      const resultClasses = [];\r\n      entries.forEach(item => {\r\n        if (typeof item === 'object') {\r\n          Object.keys(item).forEach(classNames => {\r\n            if (item[classNames]) {\r\n              resultClasses.push(prefix + classNames);\r\n            }\r\n          });\r\n        } else if (typeof item === 'string') {\r\n          resultClasses.push(prefix + item);\r\n        }\r\n      });\r\n      return resultClasses;\r\n    }\r\n    function addClasses() {\r\n      const swiper = this;\r\n      const {\r\n        classNames,\r\n        params,\r\n        rtl,\r\n        el,\r\n        device\r\n      } = swiper;\r\n      // prettier-ignore\r\n      const suffixes = prepareClasses(['initialized', params.direction, {\r\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\r\n      }, {\r\n        'autoheight': params.autoHeight\r\n      }, {\r\n        'rtl': rtl\r\n      }, {\r\n        'grid': params.grid && params.grid.rows > 1\r\n      }, {\r\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\r\n      }, {\r\n        'android': device.android\r\n      }, {\r\n        'ios': device.ios\r\n      }, {\r\n        'css-mode': params.cssMode\r\n      }, {\r\n        'centered': params.cssMode && params.centeredSlides\r\n      }, {\r\n        'watch-progress': params.watchSlidesProgress\r\n      }], params.containerModifierClass);\r\n      classNames.push(...suffixes);\r\n      el.classList.add(...classNames);\r\n      swiper.emitContainerClasses();\r\n    }\r\n\r\n    function removeClasses() {\r\n      const swiper = this;\r\n      const {\r\n        el,\r\n        classNames\r\n      } = swiper;\r\n      el.classList.remove(...classNames);\r\n      swiper.emitContainerClasses();\r\n    }\r\n\r\n    var classes = {\r\n      addClasses,\r\n      removeClasses\r\n    };\r\n\r\n    function checkOverflow() {\r\n      const swiper = this;\r\n      const {\r\n        isLocked: wasLocked,\r\n        params\r\n      } = swiper;\r\n      const {\r\n        slidesOffsetBefore\r\n      } = params;\r\n      if (slidesOffsetBefore) {\r\n        const lastSlideIndex = swiper.slides.length - 1;\r\n        const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\r\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\r\n      } else {\r\n        swiper.isLocked = swiper.snapGrid.length === 1;\r\n      }\r\n      if (params.allowSlideNext === true) {\r\n        swiper.allowSlideNext = !swiper.isLocked;\r\n      }\r\n      if (params.allowSlidePrev === true) {\r\n        swiper.allowSlidePrev = !swiper.isLocked;\r\n      }\r\n      if (wasLocked && wasLocked !== swiper.isLocked) {\r\n        swiper.isEnd = false;\r\n      }\r\n      if (wasLocked !== swiper.isLocked) {\r\n        swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n      }\r\n    }\r\n    var checkOverflow$1 = {\r\n      checkOverflow\r\n    };\r\n\r\n    var defaults = {\r\n      init: true,\r\n      direction: 'horizontal',\r\n      oneWayMovement: false,\r\n      touchEventsTarget: 'wrapper',\r\n      initialSlide: 0,\r\n      speed: 300,\r\n      cssMode: false,\r\n      updateOnWindowResize: true,\r\n      resizeObserver: true,\r\n      nested: false,\r\n      createElements: false,\r\n      enabled: true,\r\n      focusableElements: 'input, select, option, textarea, button, video, label',\r\n      // Overrides\r\n      width: null,\r\n      height: null,\r\n      //\r\n      preventInteractionOnTransition: false,\r\n      // ssr\r\n      userAgent: null,\r\n      url: null,\r\n      // To support iOS's swipe-to-go-back gesture (when being used in-app).\r\n      edgeSwipeDetection: false,\r\n      edgeSwipeThreshold: 20,\r\n      // Autoheight\r\n      autoHeight: false,\r\n      // Set wrapper width\r\n      setWrapperSize: false,\r\n      // Virtual Translate\r\n      virtualTranslate: false,\r\n      // Effects\r\n      effect: 'slide',\r\n      // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n\r\n      // Breakpoints\r\n      breakpoints: undefined,\r\n      breakpointsBase: 'window',\r\n      // Slides grid\r\n      spaceBetween: 0,\r\n      slidesPerView: 1,\r\n      slidesPerGroup: 1,\r\n      slidesPerGroupSkip: 0,\r\n      slidesPerGroupAuto: false,\r\n      centeredSlides: false,\r\n      centeredSlidesBounds: false,\r\n      slidesOffsetBefore: 0,\r\n      // in px\r\n      slidesOffsetAfter: 0,\r\n      // in px\r\n      normalizeSlideIndex: true,\r\n      centerInsufficientSlides: false,\r\n      // Disable swiper and hide navigation when container not overflow\r\n      watchOverflow: true,\r\n      // Round length\r\n      roundLengths: false,\r\n      // Touches\r\n      touchRatio: 1,\r\n      touchAngle: 45,\r\n      simulateTouch: true,\r\n      shortSwipes: true,\r\n      longSwipes: true,\r\n      longSwipesRatio: 0.5,\r\n      longSwipesMs: 300,\r\n      followFinger: true,\r\n      allowTouchMove: true,\r\n      threshold: 5,\r\n      touchMoveStopPropagation: false,\r\n      touchStartPreventDefault: true,\r\n      touchStartForcePreventDefault: false,\r\n      touchReleaseOnEdges: false,\r\n      // Unique Navigation Elements\r\n      uniqueNavElements: true,\r\n      // Resistance\r\n      resistance: true,\r\n      resistanceRatio: 0.85,\r\n      // Progress\r\n      watchSlidesProgress: false,\r\n      // Cursor\r\n      grabCursor: false,\r\n      // Clicks\r\n      preventClicks: true,\r\n      preventClicksPropagation: true,\r\n      slideToClickedSlide: false,\r\n      // loop\r\n      loop: false,\r\n      loopedSlides: null,\r\n      loopPreventsSliding: true,\r\n      // rewind\r\n      rewind: false,\r\n      // Swiping/no swiping\r\n      allowSlidePrev: true,\r\n      allowSlideNext: true,\r\n      swipeHandler: null,\r\n      // '.swipe-handler',\r\n      noSwiping: true,\r\n      noSwipingClass: 'swiper-no-swiping',\r\n      noSwipingSelector: null,\r\n      // Passive Listeners\r\n      passiveListeners: true,\r\n      maxBackfaceHiddenSlides: 10,\r\n      // NS\r\n      containerModifierClass: 'swiper-',\r\n      // NEW\r\n      slideClass: 'swiper-slide',\r\n      slideActiveClass: 'swiper-slide-active',\r\n      slideVisibleClass: 'swiper-slide-visible',\r\n      slideNextClass: 'swiper-slide-next',\r\n      slidePrevClass: 'swiper-slide-prev',\r\n      wrapperClass: 'swiper-wrapper',\r\n      lazyPreloaderClass: 'swiper-lazy-preloader',\r\n      // Callbacks\r\n      runCallbacksOnInit: true,\r\n      // Internals\r\n      _emitClasses: false\r\n    };\r\n\r\n    function moduleExtendParams(params, allModulesParams) {\r\n      return function extendParams(obj) {\r\n        if (obj === void 0) {\r\n          obj = {};\r\n        }\r\n        const moduleParamName = Object.keys(obj)[0];\r\n        const moduleParams = obj[moduleParamName];\r\n        if (typeof moduleParams !== 'object' || moduleParams === null) {\r\n          extend(allModulesParams, obj);\r\n          return;\r\n        }\r\n        if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\r\n          params[moduleParamName] = {\r\n            auto: true\r\n          };\r\n        }\r\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) {\r\n          extend(allModulesParams, obj);\r\n          return;\r\n        }\r\n        if (params[moduleParamName] === true) {\r\n          params[moduleParamName] = {\r\n            enabled: true\r\n          };\r\n        }\r\n        if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\r\n          params[moduleParamName].enabled = true;\r\n        }\r\n        if (!params[moduleParamName]) params[moduleParamName] = {\r\n          enabled: false\r\n        };\r\n        extend(allModulesParams, obj);\r\n      };\r\n    }\r\n\r\n    /* eslint no-param-reassign: \"off\" */\r\n    const prototypes = {\r\n      eventsEmitter,\r\n      update,\r\n      translate,\r\n      transition,\r\n      slide,\r\n      loop,\r\n      grabCursor,\r\n      events: events$1,\r\n      breakpoints,\r\n      checkOverflow: checkOverflow$1,\r\n      classes\r\n    };\r\n    const extendedDefaults = {};\r\n    class Swiper {\r\n      constructor() {\r\n        let el;\r\n        let params;\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\r\n          params = args[0];\r\n        } else {\r\n          [el, params] = args;\r\n        }\r\n        if (!params) params = {};\r\n        params = extend({}, params);\r\n        if (el && !params.el) params.el = el;\r\n        const document = getDocument();\r\n        if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\r\n          const swipers = [];\r\n          document.querySelectorAll(params.el).forEach(containerEl => {\r\n            const newParams = extend({}, params, {\r\n              el: containerEl\r\n            });\r\n            swipers.push(new Swiper(newParams));\r\n          });\r\n          // eslint-disable-next-line no-constructor-return\r\n          return swipers;\r\n        }\r\n\r\n        // Swiper Instance\r\n        const swiper = this;\r\n        swiper.__swiper__ = true;\r\n        swiper.support = getSupport();\r\n        swiper.device = getDevice({\r\n          userAgent: params.userAgent\r\n        });\r\n        swiper.browser = getBrowser();\r\n        swiper.eventsListeners = {};\r\n        swiper.eventsAnyListeners = [];\r\n        swiper.modules = [...swiper.__modules__];\r\n        if (params.modules && Array.isArray(params.modules)) {\r\n          swiper.modules.push(...params.modules);\r\n        }\r\n        const allModulesParams = {};\r\n        swiper.modules.forEach(mod => {\r\n          mod({\r\n            params,\r\n            swiper,\r\n            extendParams: moduleExtendParams(params, allModulesParams),\r\n            on: swiper.on.bind(swiper),\r\n            once: swiper.once.bind(swiper),\r\n            off: swiper.off.bind(swiper),\r\n            emit: swiper.emit.bind(swiper)\r\n          });\r\n        });\r\n\r\n        // Extend defaults with modules params\r\n        const swiperParams = extend({}, defaults, allModulesParams);\r\n\r\n        // Extend defaults with passed params\r\n        swiper.params = extend({}, swiperParams, extendedDefaults, params);\r\n        swiper.originalParams = extend({}, swiper.params);\r\n        swiper.passedParams = extend({}, params);\r\n\r\n        // add event listeners\r\n        if (swiper.params && swiper.params.on) {\r\n          Object.keys(swiper.params.on).forEach(eventName => {\r\n            swiper.on(eventName, swiper.params.on[eventName]);\r\n          });\r\n        }\r\n        if (swiper.params && swiper.params.onAny) {\r\n          swiper.onAny(swiper.params.onAny);\r\n        }\r\n\r\n        // Extend Swiper\r\n        Object.assign(swiper, {\r\n          enabled: swiper.params.enabled,\r\n          el,\r\n          // Classes\r\n          classNames: [],\r\n          // Slides\r\n          slides: [],\r\n          slidesGrid: [],\r\n          snapGrid: [],\r\n          slidesSizesGrid: [],\r\n          // isDirection\r\n          isHorizontal() {\r\n            return swiper.params.direction === 'horizontal';\r\n          },\r\n          isVertical() {\r\n            return swiper.params.direction === 'vertical';\r\n          },\r\n          // Indexes\r\n          activeIndex: 0,\r\n          realIndex: 0,\r\n          //\r\n          isBeginning: true,\r\n          isEnd: false,\r\n          // Props\r\n          translate: 0,\r\n          previousTranslate: 0,\r\n          progress: 0,\r\n          velocity: 0,\r\n          animating: false,\r\n          // Locks\r\n          allowSlideNext: swiper.params.allowSlideNext,\r\n          allowSlidePrev: swiper.params.allowSlidePrev,\r\n          // Touch Events\r\n          touchEventsData: {\r\n            isTouched: undefined,\r\n            isMoved: undefined,\r\n            allowTouchCallbacks: undefined,\r\n            touchStartTime: undefined,\r\n            isScrolling: undefined,\r\n            currentTranslate: undefined,\r\n            startTranslate: undefined,\r\n            allowThresholdMove: undefined,\r\n            // Form elements to match\r\n            focusableElements: swiper.params.focusableElements,\r\n            // Last click time\r\n            lastClickTime: now(),\r\n            clickTimeout: undefined,\r\n            // Velocities\r\n            velocities: [],\r\n            allowMomentumBounce: undefined,\r\n            startMoving: undefined,\r\n            evCache: []\r\n          },\r\n          // Clicks\r\n          allowClick: true,\r\n          // Touches\r\n          allowTouchMove: swiper.params.allowTouchMove,\r\n          touches: {\r\n            startX: 0,\r\n            startY: 0,\r\n            currentX: 0,\r\n            currentY: 0,\r\n            diff: 0\r\n          },\r\n          // Images\r\n          imagesToLoad: [],\r\n          imagesLoaded: 0\r\n        });\r\n        swiper.emit('_swiper');\r\n\r\n        // Init\r\n        if (swiper.params.init) {\r\n          swiper.init();\r\n        }\r\n\r\n        // Return app instance\r\n        // eslint-disable-next-line no-constructor-return\r\n        return swiper;\r\n      }\r\n      recalcSlides() {\r\n        const swiper = this;\r\n        const {\r\n          slidesEl,\r\n          params\r\n        } = swiper;\r\n        swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\r\n      }\r\n      enable() {\r\n        const swiper = this;\r\n        if (swiper.enabled) return;\r\n        swiper.enabled = true;\r\n        if (swiper.params.grabCursor) {\r\n          swiper.setGrabCursor();\r\n        }\r\n        swiper.emit('enable');\r\n      }\r\n      disable() {\r\n        const swiper = this;\r\n        if (!swiper.enabled) return;\r\n        swiper.enabled = false;\r\n        if (swiper.params.grabCursor) {\r\n          swiper.unsetGrabCursor();\r\n        }\r\n        swiper.emit('disable');\r\n      }\r\n      setProgress(progress, speed) {\r\n        const swiper = this;\r\n        progress = Math.min(Math.max(progress, 0), 1);\r\n        const min = swiper.minTranslate();\r\n        const max = swiper.maxTranslate();\r\n        const current = (max - min) * progress + min;\r\n        swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      emitContainerClasses() {\r\n        const swiper = this;\r\n        if (!swiper.params._emitClasses || !swiper.el) return;\r\n        const cls = swiper.el.className.split(' ').filter(className => {\r\n          return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\r\n        });\r\n        swiper.emit('_containerClasses', cls.join(' '));\r\n      }\r\n      getSlideClasses(slideEl) {\r\n        const swiper = this;\r\n        if (swiper.destroyed) return '';\r\n        return slideEl.className.split(' ').filter(className => {\r\n          return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\r\n        }).join(' ');\r\n      }\r\n      emitSlidesClasses() {\r\n        const swiper = this;\r\n        if (!swiper.params._emitClasses || !swiper.el) return;\r\n        const updates = [];\r\n        swiper.slides.forEach(slideEl => {\r\n          const classNames = swiper.getSlideClasses(slideEl);\r\n          updates.push({\r\n            slideEl,\r\n            classNames\r\n          });\r\n          swiper.emit('_slideClass', slideEl, classNames);\r\n        });\r\n        swiper.emit('_slideClasses', updates);\r\n      }\r\n      slidesPerViewDynamic(view, exact) {\r\n        if (view === void 0) {\r\n          view = 'current';\r\n        }\r\n        if (exact === void 0) {\r\n          exact = false;\r\n        }\r\n        const swiper = this;\r\n        const {\r\n          params,\r\n          slides,\r\n          slidesGrid,\r\n          slidesSizesGrid,\r\n          size: swiperSize,\r\n          activeIndex\r\n        } = swiper;\r\n        let spv = 1;\r\n        if (params.centeredSlides) {\r\n          let slideSize = slides[activeIndex].swiperSlideSize;\r\n          let breakLoop;\r\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n            if (slides[i] && !breakLoop) {\r\n              slideSize += slides[i].swiperSlideSize;\r\n              spv += 1;\r\n              if (slideSize > swiperSize) breakLoop = true;\r\n            }\r\n          }\r\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n            if (slides[i] && !breakLoop) {\r\n              slideSize += slides[i].swiperSlideSize;\r\n              spv += 1;\r\n              if (slideSize > swiperSize) breakLoop = true;\r\n            }\r\n          }\r\n        } else {\r\n          // eslint-disable-next-line\r\n          if (view === 'current') {\r\n            for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n              const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\r\n              if (slideInView) {\r\n                spv += 1;\r\n              }\r\n            }\r\n          } else {\r\n            // previous\r\n            for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n              const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\r\n              if (slideInView) {\r\n                spv += 1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n        return spv;\r\n      }\r\n      update() {\r\n        const swiper = this;\r\n        if (!swiper || swiper.destroyed) return;\r\n        const {\r\n          snapGrid,\r\n          params\r\n        } = swiper;\r\n        // Breakpoints\r\n        if (params.breakpoints) {\r\n          swiper.setBreakpoint();\r\n        }\r\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\r\n          if (imageEl.complete) {\r\n            processLazyPreloader(swiper, imageEl);\r\n          }\r\n        });\r\n        swiper.updateSize();\r\n        swiper.updateSlides();\r\n        swiper.updateProgress();\r\n        swiper.updateSlidesClasses();\r\n        function setTranslate() {\r\n          const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n          const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n          swiper.setTranslate(newTranslate);\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        }\r\n        let translated;\r\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\r\n          setTranslate();\r\n          if (swiper.params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n          }\r\n        } else {\r\n          if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n            translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n          } else {\r\n            translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n          }\r\n          if (!translated) {\r\n            setTranslate();\r\n          }\r\n        }\r\n        if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n          swiper.checkOverflow();\r\n        }\r\n        swiper.emit('update');\r\n      }\r\n      changeDirection(newDirection, needUpdate) {\r\n        if (needUpdate === void 0) {\r\n          needUpdate = true;\r\n        }\r\n        const swiper = this;\r\n        const currentDirection = swiper.params.direction;\r\n        if (!newDirection) {\r\n          // eslint-disable-next-line\r\n          newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n        }\r\n        if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\r\n          return swiper;\r\n        }\r\n        swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\r\n        swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\r\n        swiper.emitContainerClasses();\r\n        swiper.params.direction = newDirection;\r\n        swiper.slides.forEach(slideEl => {\r\n          if (newDirection === 'vertical') {\r\n            slideEl.style.width = '';\r\n          } else {\r\n            slideEl.style.height = '';\r\n          }\r\n        });\r\n        swiper.emit('changeDirection');\r\n        if (needUpdate) swiper.update();\r\n        return swiper;\r\n      }\r\n      changeLanguageDirection(direction) {\r\n        const swiper = this;\r\n        if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\r\n        swiper.rtl = direction === 'rtl';\r\n        swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\r\n        if (swiper.rtl) {\r\n          swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\r\n          swiper.el.dir = 'rtl';\r\n        } else {\r\n          swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\r\n          swiper.el.dir = 'ltr';\r\n        }\r\n        swiper.update();\r\n      }\r\n      mount(element) {\r\n        const swiper = this;\r\n        if (swiper.mounted) return true;\r\n\r\n        // Find el\r\n        let el = element || swiper.params.el;\r\n        if (typeof el === 'string') {\r\n          el = document.querySelector(el);\r\n        }\r\n        if (!el) {\r\n          return false;\r\n        }\r\n        el.swiper = swiper;\r\n        if (el.shadowEl) {\r\n          swiper.isElement = true;\r\n        }\r\n        const getWrapperSelector = () => {\r\n          return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\r\n        };\r\n        const getWrapper = () => {\r\n          if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n            const res = el.shadowRoot.querySelector(getWrapperSelector());\r\n            // Children needs to return slot items\r\n            return res;\r\n          }\r\n          return elementChildren(el, getWrapperSelector())[0];\r\n        };\r\n        // Find Wrapper\r\n        let wrapperEl = getWrapper();\r\n        if (!wrapperEl && swiper.params.createElements) {\r\n          wrapperEl = createElement('div', swiper.params.wrapperClass);\r\n          el.append(wrapperEl);\r\n          elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\r\n            wrapperEl.append(slideEl);\r\n          });\r\n        }\r\n        Object.assign(swiper, {\r\n          el,\r\n          wrapperEl,\r\n          slidesEl: swiper.isElement ? el : wrapperEl,\r\n          mounted: true,\r\n          // RTL\r\n          rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\r\n          rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\r\n          wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\r\n        });\r\n        return true;\r\n      }\r\n      init(el) {\r\n        const swiper = this;\r\n        if (swiper.initialized) return swiper;\r\n        const mounted = swiper.mount(el);\r\n        if (mounted === false) return swiper;\r\n        swiper.emit('beforeInit');\r\n\r\n        // Set breakpoint\r\n        if (swiper.params.breakpoints) {\r\n          swiper.setBreakpoint();\r\n        }\r\n\r\n        // Add Classes\r\n        swiper.addClasses();\r\n\r\n        // Update size\r\n        swiper.updateSize();\r\n\r\n        // Update slides\r\n        swiper.updateSlides();\r\n        if (swiper.params.watchOverflow) {\r\n          swiper.checkOverflow();\r\n        }\r\n\r\n        // Set Grab Cursor\r\n        if (swiper.params.grabCursor && swiper.enabled) {\r\n          swiper.setGrabCursor();\r\n        }\r\n\r\n        // Slide To Initial Slide\r\n        if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\r\n          swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\r\n        } else {\r\n          swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\r\n        }\r\n\r\n        // Create loop\r\n        if (swiper.params.loop) {\r\n          swiper.loopCreate();\r\n        }\r\n\r\n        // Attach events\r\n        swiper.attachEvents();\r\n        [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\r\n          if (imageEl.complete) {\r\n            processLazyPreloader(swiper, imageEl);\r\n          } else {\r\n            imageEl.addEventListener('load', e => {\r\n              processLazyPreloader(swiper, e.target);\r\n            });\r\n          }\r\n        });\r\n\r\n        // Init Flag\r\n        swiper.initialized = true;\r\n\r\n        // Emit\r\n        swiper.emit('init');\r\n        swiper.emit('afterInit');\r\n        return swiper;\r\n      }\r\n      destroy(deleteInstance, cleanStyles) {\r\n        if (deleteInstance === void 0) {\r\n          deleteInstance = true;\r\n        }\r\n        if (cleanStyles === void 0) {\r\n          cleanStyles = true;\r\n        }\r\n        const swiper = this;\r\n        const {\r\n          params,\r\n          el,\r\n          wrapperEl,\r\n          slides\r\n        } = swiper;\r\n        if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n          return null;\r\n        }\r\n        swiper.emit('beforeDestroy');\r\n\r\n        // Init Flag\r\n        swiper.initialized = false;\r\n\r\n        // Detach events\r\n        swiper.detachEvents();\r\n\r\n        // Destroy loop\r\n        if (params.loop) {\r\n          swiper.loopDestroy();\r\n        }\r\n\r\n        // Cleanup styles\r\n        if (cleanStyles) {\r\n          swiper.removeClasses();\r\n          el.removeAttribute('style');\r\n          wrapperEl.removeAttribute('style');\r\n          if (slides && slides.length) {\r\n            slides.forEach(slideEl => {\r\n              slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\r\n              slideEl.removeAttribute('style');\r\n              slideEl.removeAttribute('data-swiper-slide-index');\r\n            });\r\n          }\r\n        }\r\n        swiper.emit('destroy');\r\n\r\n        // Detach emitter events\r\n        Object.keys(swiper.eventsListeners).forEach(eventName => {\r\n          swiper.off(eventName);\r\n        });\r\n        if (deleteInstance !== false) {\r\n          swiper.el.swiper = null;\r\n          deleteProps(swiper);\r\n        }\r\n        swiper.destroyed = true;\r\n        return null;\r\n      }\r\n      static extendDefaults(newDefaults) {\r\n        extend(extendedDefaults, newDefaults);\r\n      }\r\n      static get extendedDefaults() {\r\n        return extendedDefaults;\r\n      }\r\n      static get defaults() {\r\n        return defaults;\r\n      }\r\n      static installModule(mod) {\r\n        if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\r\n        const modules = Swiper.prototype.__modules__;\r\n        if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\r\n          modules.push(mod);\r\n        }\r\n      }\r\n      static use(module) {\r\n        if (Array.isArray(module)) {\r\n          module.forEach(m => Swiper.installModule(m));\r\n          return Swiper;\r\n        }\r\n        Swiper.installModule(module);\r\n        return Swiper;\r\n      }\r\n    }\r\n    Object.keys(prototypes).forEach(prototypeGroup => {\r\n      Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\r\n        Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n      });\r\n    });\r\n    Swiper.use([Resize, Observer]);\r\n\r\n    function Virtual(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      extendParams({\r\n        virtual: {\r\n          enabled: false,\r\n          slides: [],\r\n          cache: true,\r\n          renderSlide: null,\r\n          renderExternal: null,\r\n          renderExternalUpdate: true,\r\n          addSlidesBefore: 0,\r\n          addSlidesAfter: 0\r\n        }\r\n      });\r\n      let cssModeTimeout;\r\n      const document = getDocument();\r\n      swiper.virtual = {\r\n        cache: {},\r\n        from: undefined,\r\n        to: undefined,\r\n        slides: [],\r\n        offset: 0,\r\n        slidesGrid: []\r\n      };\r\n      const tempDOM = document.createElement('div');\r\n      function renderSlide(slide, index) {\r\n        const params = swiper.params.virtual;\r\n        if (params.cache && swiper.virtual.cache[index]) {\r\n          return swiper.virtual.cache[index];\r\n        }\r\n        // eslint-disable-next-line\r\n        let slideEl;\r\n        if (params.renderSlide) {\r\n          slideEl = params.renderSlide.call(swiper, slide, index);\r\n          if (typeof slideEl === 'string') {\r\n            tempDOM.innerHTML = slideEl;\r\n            slideEl = tempDOM.children[0];\r\n          }\r\n        } else if (swiper.isElement) {\r\n          slideEl = createElement('swiper-slide');\r\n        } else {\r\n          slideEl = createElement('div', swiper.params.slideClass);\r\n        }\r\n        slideEl.setAttribute('data-swiper-slide-index', index);\r\n        if (!params.renderSlide) {\r\n          slideEl.textContent = slide;\r\n        }\r\n        if (params.cache) swiper.virtual.cache[index] = slideEl;\r\n        return slideEl;\r\n      }\r\n      function update(force) {\r\n        const {\r\n          slidesPerView,\r\n          slidesPerGroup,\r\n          centeredSlides,\r\n          loop: isLoop\r\n        } = swiper.params;\r\n        const {\r\n          addSlidesBefore,\r\n          addSlidesAfter\r\n        } = swiper.params.virtual;\r\n        const {\r\n          from: previousFrom,\r\n          to: previousTo,\r\n          slides,\r\n          slidesGrid: previousSlidesGrid,\r\n          offset: previousOffset\r\n        } = swiper.virtual;\r\n        if (!swiper.params.cssMode) {\r\n          swiper.updateActiveIndex();\r\n        }\r\n        const activeIndex = swiper.activeIndex || 0;\r\n        let offsetProp;\r\n        if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\r\n        let slidesAfter;\r\n        let slidesBefore;\r\n        if (centeredSlides) {\r\n          slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\r\n          slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\r\n        } else {\r\n          slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\r\n          slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\r\n        }\r\n        let from = activeIndex - slidesBefore;\r\n        let to = activeIndex + slidesAfter;\r\n        if (!isLoop) {\r\n          from = Math.max(from, 0);\r\n          to = Math.min(to, slides.length - 1);\r\n        }\r\n        let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\r\n        if (isLoop && activeIndex >= slidesBefore) {\r\n          from -= slidesBefore;\r\n          if (!centeredSlides) offset += swiper.slidesGrid[0];\r\n        } else if (isLoop && activeIndex < slidesBefore) {\r\n          from = -slidesBefore;\r\n          if (centeredSlides) offset += swiper.slidesGrid[0];\r\n        }\r\n        Object.assign(swiper.virtual, {\r\n          from,\r\n          to,\r\n          offset,\r\n          slidesGrid: swiper.slidesGrid,\r\n          slidesBefore,\r\n          slidesAfter\r\n        });\r\n        function onRendered() {\r\n          swiper.updateSlides();\r\n          swiper.updateProgress();\r\n          swiper.updateSlidesClasses();\r\n          emit('virtualUpdate');\r\n        }\r\n        if (previousFrom === from && previousTo === to && !force) {\r\n          if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\r\n            swiper.slides.forEach(slideEl => {\r\n              slideEl.style[offsetProp] = `${offset}px`;\r\n            });\r\n          }\r\n          swiper.updateProgress();\r\n          emit('virtualUpdate');\r\n          return;\r\n        }\r\n        if (swiper.params.virtual.renderExternal) {\r\n          swiper.params.virtual.renderExternal.call(swiper, {\r\n            offset,\r\n            from,\r\n            to,\r\n            slides: function getSlides() {\r\n              const slidesToRender = [];\r\n              for (let i = from; i <= to; i += 1) {\r\n                slidesToRender.push(slides[i]);\r\n              }\r\n              return slidesToRender;\r\n            }()\r\n          });\r\n          if (swiper.params.virtual.renderExternalUpdate) {\r\n            onRendered();\r\n          } else {\r\n            emit('virtualUpdate');\r\n          }\r\n          return;\r\n        }\r\n        const prependIndexes = [];\r\n        const appendIndexes = [];\r\n        const getSlideIndex = index => {\r\n          let slideIndex = index;\r\n          if (index < 0) {\r\n            slideIndex = slides.length + index;\r\n          } else if (slideIndex >= slides.length) {\r\n            // eslint-disable-next-line\r\n            slideIndex = slideIndex - slides.length;\r\n          }\r\n          return slideIndex;\r\n        };\r\n        if (force) {\r\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\r\n            slideEl.remove();\r\n          });\r\n        } else {\r\n          for (let i = previousFrom; i <= previousTo; i += 1) {\r\n            if (i < from || i > to) {\r\n              const slideIndex = getSlideIndex(i);\r\n              swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\r\n                slideEl.remove();\r\n              });\r\n            }\r\n          }\r\n        }\r\n        const loopFrom = isLoop ? -slides.length : 0;\r\n        const loopTo = isLoop ? slides.length * 2 : slides.length;\r\n        for (let i = loopFrom; i < loopTo; i += 1) {\r\n          if (i >= from && i <= to) {\r\n            const slideIndex = getSlideIndex(i);\r\n            if (typeof previousTo === 'undefined' || force) {\r\n              appendIndexes.push(slideIndex);\r\n            } else {\r\n              if (i > previousTo) appendIndexes.push(slideIndex);\r\n              if (i < previousFrom) prependIndexes.push(slideIndex);\r\n            }\r\n          }\r\n        }\r\n        appendIndexes.forEach(index => {\r\n          swiper.slidesEl.append(renderSlide(slides[index], index));\r\n        });\r\n        if (isLoop) {\r\n          for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\r\n            const index = prependIndexes[i];\r\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\r\n          }\r\n        } else {\r\n          prependIndexes.sort((a, b) => b - a);\r\n          prependIndexes.forEach(index => {\r\n            swiper.slidesEl.prepend(renderSlide(slides[index], index));\r\n          });\r\n        }\r\n        elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\r\n          slideEl.style[offsetProp] = `${offset}px`;\r\n        });\r\n        onRendered();\r\n      }\r\n      function appendSlide(slides) {\r\n        if (typeof slides === 'object' && 'length' in slides) {\r\n          for (let i = 0; i < slides.length; i += 1) {\r\n            if (slides[i]) swiper.virtual.slides.push(slides[i]);\r\n          }\r\n        } else {\r\n          swiper.virtual.slides.push(slides);\r\n        }\r\n        update(true);\r\n      }\r\n      function prependSlide(slides) {\r\n        const activeIndex = swiper.activeIndex;\r\n        let newActiveIndex = activeIndex + 1;\r\n        let numberOfNewSlides = 1;\r\n        if (Array.isArray(slides)) {\r\n          for (let i = 0; i < slides.length; i += 1) {\r\n            if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\r\n          }\r\n          newActiveIndex = activeIndex + slides.length;\r\n          numberOfNewSlides = slides.length;\r\n        } else {\r\n          swiper.virtual.slides.unshift(slides);\r\n        }\r\n        if (swiper.params.virtual.cache) {\r\n          const cache = swiper.virtual.cache;\r\n          const newCache = {};\r\n          Object.keys(cache).forEach(cachedIndex => {\r\n            const cachedEl = cache[cachedIndex];\r\n            const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\r\n            if (cachedElIndex) {\r\n              cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\r\n            }\r\n            newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\r\n          });\r\n          swiper.virtual.cache = newCache;\r\n        }\r\n        update(true);\r\n        swiper.slideTo(newActiveIndex, 0);\r\n      }\r\n      function removeSlide(slidesIndexes) {\r\n        if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\r\n        let activeIndex = swiper.activeIndex;\r\n        if (Array.isArray(slidesIndexes)) {\r\n          for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\r\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\r\n            if (swiper.params.virtual.cache) {\r\n              delete swiper.virtual.cache[slidesIndexes[i]];\r\n            }\r\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\r\n            activeIndex = Math.max(activeIndex, 0);\r\n          }\r\n        } else {\r\n          swiper.virtual.slides.splice(slidesIndexes, 1);\r\n          if (swiper.params.virtual.cache) {\r\n            delete swiper.virtual.cache[slidesIndexes];\r\n          }\r\n          if (slidesIndexes < activeIndex) activeIndex -= 1;\r\n          activeIndex = Math.max(activeIndex, 0);\r\n        }\r\n        update(true);\r\n        swiper.slideTo(activeIndex, 0);\r\n      }\r\n      function removeAllSlides() {\r\n        swiper.virtual.slides = [];\r\n        if (swiper.params.virtual.cache) {\r\n          swiper.virtual.cache = {};\r\n        }\r\n        update(true);\r\n        swiper.slideTo(0, 0);\r\n      }\r\n      on('beforeInit', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        let domSlidesAssigned;\r\n        if (typeof swiper.passedParams.virtual.slides === 'undefined') {\r\n          const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\r\n          if (slides && slides.length) {\r\n            swiper.virtual.slides = [...slides];\r\n            domSlidesAssigned = true;\r\n            slides.forEach((slideEl, slideIndex) => {\r\n              slideEl.setAttribute('data-swiper-slide-index', slideIndex);\r\n              swiper.virtual.cache[slideIndex] = slideEl;\r\n              slideEl.remove();\r\n            });\r\n          }\r\n        }\r\n        if (!domSlidesAssigned) {\r\n          swiper.virtual.slides = swiper.params.virtual.slides;\r\n        }\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\r\n        swiper.params.watchSlidesProgress = true;\r\n        swiper.originalParams.watchSlidesProgress = true;\r\n        if (!swiper.params.initialSlide) {\r\n          update();\r\n        }\r\n      });\r\n      on('setTranslate', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\r\n          clearTimeout(cssModeTimeout);\r\n          cssModeTimeout = setTimeout(() => {\r\n            update();\r\n          }, 100);\r\n        } else {\r\n          update();\r\n        }\r\n      });\r\n      on('init update resize', () => {\r\n        if (!swiper.params.virtual.enabled) return;\r\n        if (swiper.params.cssMode) {\r\n          setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\r\n        }\r\n      });\r\n      Object.assign(swiper.virtual, {\r\n        appendSlide,\r\n        prependSlide,\r\n        removeSlide,\r\n        removeAllSlides,\r\n        update\r\n      });\r\n    }\r\n\r\n    /* eslint-disable consistent-return */\r\n    function Keyboard(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      swiper.keyboard = {\r\n        enabled: false\r\n      };\r\n      extendParams({\r\n        keyboard: {\r\n          enabled: false,\r\n          onlyInViewport: true,\r\n          pageUpDown: true\r\n        }\r\n      });\r\n      function handle(event) {\r\n        if (!swiper.enabled) return;\r\n        const {\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        let e = event;\r\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n        const kc = e.keyCode || e.charCode;\r\n        const pageUpDown = swiper.params.keyboard.pageUpDown;\r\n        const isPageUp = pageUpDown && kc === 33;\r\n        const isPageDown = pageUpDown && kc === 34;\r\n        const isArrowLeft = kc === 37;\r\n        const isArrowRight = kc === 39;\r\n        const isArrowUp = kc === 38;\r\n        const isArrowDown = kc === 40;\r\n        // Directions locks\r\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\r\n          return false;\r\n        }\r\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\r\n          return false;\r\n        }\r\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n          return undefined;\r\n        }\r\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\r\n          return undefined;\r\n        }\r\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\r\n          let inView = false;\r\n          // Check that swiper should be inside of visible area of window\r\n          if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\r\n            return undefined;\r\n          }\r\n          const el = swiper.el;\r\n          const swiperWidth = el.clientWidth;\r\n          const swiperHeight = el.clientHeight;\r\n          const windowWidth = window.innerWidth;\r\n          const windowHeight = window.innerHeight;\r\n          const swiperOffset = elementOffset(el);\r\n          if (rtl) swiperOffset.left -= el.scrollLeft;\r\n          const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\r\n          for (let i = 0; i < swiperCoord.length; i += 1) {\r\n            const point = swiperCoord[i];\r\n            if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\r\n              if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n              inView = true;\r\n            }\r\n          }\r\n          if (!inView) return undefined;\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n          }\r\n          if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\r\n          if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\r\n        } else {\r\n          if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\r\n            if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n          }\r\n          if (isPageDown || isArrowDown) swiper.slideNext();\r\n          if (isPageUp || isArrowUp) swiper.slidePrev();\r\n        }\r\n        emit('keyPress', kc);\r\n        return undefined;\r\n      }\r\n      function enable() {\r\n        if (swiper.keyboard.enabled) return;\r\n        document.addEventListener('keydown', handle);\r\n        swiper.keyboard.enabled = true;\r\n      }\r\n      function disable() {\r\n        if (!swiper.keyboard.enabled) return;\r\n        document.removeEventListener('keydown', handle);\r\n        swiper.keyboard.enabled = false;\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.keyboard.enabled) {\r\n          enable();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.keyboard.enabled) {\r\n          disable();\r\n        }\r\n      });\r\n      Object.assign(swiper.keyboard, {\r\n        enable,\r\n        disable\r\n      });\r\n    }\r\n\r\n    /* eslint-disable consistent-return */\r\n    function Mousewheel(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      extendParams({\r\n        mousewheel: {\r\n          enabled: false,\r\n          releaseOnEdges: false,\r\n          invert: false,\r\n          forceToAxis: false,\r\n          sensitivity: 1,\r\n          eventsTarget: 'container',\r\n          thresholdDelta: null,\r\n          thresholdTime: null\r\n        }\r\n      });\r\n      swiper.mousewheel = {\r\n        enabled: false\r\n      };\r\n      let timeout;\r\n      let lastScrollTime = now();\r\n      let lastEventBeforeSnap;\r\n      const recentWheelEvents = [];\r\n      function normalize(e) {\r\n        // Reasonable defaults\r\n        const PIXEL_STEP = 10;\r\n        const LINE_HEIGHT = 40;\r\n        const PAGE_HEIGHT = 800;\r\n        let sX = 0;\r\n        let sY = 0; // spinX, spinY\r\n        let pX = 0;\r\n        let pY = 0; // pixelX, pixelY\r\n\r\n        // Legacy\r\n        if ('detail' in e) {\r\n          sY = e.detail;\r\n        }\r\n        if ('wheelDelta' in e) {\r\n          sY = -e.wheelDelta / 120;\r\n        }\r\n        if ('wheelDeltaY' in e) {\r\n          sY = -e.wheelDeltaY / 120;\r\n        }\r\n        if ('wheelDeltaX' in e) {\r\n          sX = -e.wheelDeltaX / 120;\r\n        }\r\n\r\n        // side scrolling on FF with DOMMouseScroll\r\n        if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n          sX = sY;\r\n          sY = 0;\r\n        }\r\n        pX = sX * PIXEL_STEP;\r\n        pY = sY * PIXEL_STEP;\r\n        if ('deltaY' in e) {\r\n          pY = e.deltaY;\r\n        }\r\n        if ('deltaX' in e) {\r\n          pX = e.deltaX;\r\n        }\r\n        if (e.shiftKey && !pX) {\r\n          // if user scrolls with shift he wants horizontal scroll\r\n          pX = pY;\r\n          pY = 0;\r\n        }\r\n        if ((pX || pY) && e.deltaMode) {\r\n          if (e.deltaMode === 1) {\r\n            // delta in LINE units\r\n            pX *= LINE_HEIGHT;\r\n            pY *= LINE_HEIGHT;\r\n          } else {\r\n            // delta in PAGE units\r\n            pX *= PAGE_HEIGHT;\r\n            pY *= PAGE_HEIGHT;\r\n          }\r\n        }\r\n\r\n        // Fall-back if spin cannot be determined\r\n        if (pX && !sX) {\r\n          sX = pX < 1 ? -1 : 1;\r\n        }\r\n        if (pY && !sY) {\r\n          sY = pY < 1 ? -1 : 1;\r\n        }\r\n        return {\r\n          spinX: sX,\r\n          spinY: sY,\r\n          pixelX: pX,\r\n          pixelY: pY\r\n        };\r\n      }\r\n      function handleMouseEnter() {\r\n        if (!swiper.enabled) return;\r\n        swiper.mouseEntered = true;\r\n      }\r\n      function handleMouseLeave() {\r\n        if (!swiper.enabled) return;\r\n        swiper.mouseEntered = false;\r\n      }\r\n      function animateSlider(newEvent) {\r\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\r\n          // Prevent if delta of wheel scroll delta is below configured threshold\r\n          return false;\r\n        }\r\n        if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\r\n          // Prevent if time between scrolls is below configured threshold\r\n          return false;\r\n        }\r\n\r\n        // If the movement is NOT big enough and\r\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n        //   Don't go any further (avoid insignificant scroll movement).\r\n        if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\r\n          // Return false as a default\r\n          return true;\r\n        }\r\n        // If user is scrolling towards the end:\r\n        //   If the slider hasn't hit the latest slide or\r\n        //   if the slider is a loop and\r\n        //   if the slider isn't moving right now:\r\n        //     Go to next slide and\r\n        //     emit a scroll event.\r\n        // Else (the user is scrolling towards the beginning) and\r\n        // if the slider hasn't hit the first slide or\r\n        // if the slider is a loop and\r\n        // if the slider isn't moving right now:\r\n        //   Go to prev slide and\r\n        //   emit a scroll event.\r\n        if (newEvent.direction < 0) {\r\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n            swiper.slideNext();\r\n            emit('scroll', newEvent.raw);\r\n          }\r\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n          swiper.slidePrev();\r\n          emit('scroll', newEvent.raw);\r\n        }\r\n        // If you got here is because an animation has been triggered so store the current time\r\n        lastScrollTime = new window.Date().getTime();\r\n        // Return false as a default\r\n        return false;\r\n      }\r\n      function releaseScroll(newEvent) {\r\n        const params = swiper.params.mousewheel;\r\n        if (newEvent.direction < 0) {\r\n          if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n            // Return true to animate scroll on edges\r\n            return true;\r\n          }\r\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n          // Return true to animate scroll on edges\r\n          return true;\r\n        }\r\n        return false;\r\n      }\r\n      function handle(event) {\r\n        let e = event;\r\n        let disableParentSwiper = true;\r\n        if (!swiper.enabled) return;\r\n        const params = swiper.params.mousewheel;\r\n        if (swiper.params.cssMode) {\r\n          e.preventDefault();\r\n        }\r\n        let targetEl = swiper.el;\r\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\r\n        }\r\n        const targetElContainsTarget = targetEl && targetEl.contains(e.target);\r\n        if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\r\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n        let delta = 0;\r\n        const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n        const data = normalize(e);\r\n        if (params.forceToAxis) {\r\n          if (swiper.isHorizontal()) {\r\n            if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\r\n          } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\r\n        } else {\r\n          delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n        }\r\n        if (delta === 0) return true;\r\n        if (params.invert) delta = -delta;\r\n\r\n        // Get the scroll positions\r\n        let positions = swiper.getTranslate() + delta * params.sensitivity;\r\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\r\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\r\n\r\n        // When loop is true:\r\n        //     the disableParentSwiper will be true.\r\n        // When loop is false:\r\n        //     if the scroll positions is not on edge,\r\n        //     then the disableParentSwiper will be true.\r\n        //     if the scroll on edge positions,\r\n        //     then the disableParentSwiper will be false.\r\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\r\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\r\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\r\n          // Register the new event in a variable which stores the relevant data\r\n          const newEvent = {\r\n            time: now(),\r\n            delta: Math.abs(delta),\r\n            direction: Math.sign(delta),\r\n            raw: event\r\n          };\r\n\r\n          // Keep the most recent events\r\n          if (recentWheelEvents.length >= 2) {\r\n            recentWheelEvents.shift(); // only store the last N events\r\n          }\r\n\r\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n          recentWheelEvents.push(newEvent);\r\n\r\n          // If there is at least one previous recorded event:\r\n          //   If direction has changed or\r\n          //   if the scroll is quicker than the previous one:\r\n          //     Animate the slider.\r\n          // Else (this is the first time the wheel is moved):\r\n          //     Animate the slider.\r\n          if (prevEvent) {\r\n            if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\r\n              animateSlider(newEvent);\r\n            }\r\n          } else {\r\n            animateSlider(newEvent);\r\n          }\r\n\r\n          // If it's time to release the scroll:\r\n          //   Return now so you don't hit the preventDefault.\r\n          if (releaseScroll(newEvent)) {\r\n            return true;\r\n          }\r\n        } else {\r\n          // Freemode or scrollContainer:\r\n\r\n          // If we recently snapped after a momentum scroll, then ignore wheel events\r\n          // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n          // or if it's a new scroll (larger delta or inverse sign as last event before\r\n          // an end-of-momentum snap).\r\n          const newEvent = {\r\n            time: now(),\r\n            delta: Math.abs(delta),\r\n            direction: Math.sign(delta)\r\n          };\r\n          const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\r\n          if (!ignoreWheelEvents) {\r\n            lastEventBeforeSnap = undefined;\r\n            let position = swiper.getTranslate() + delta * params.sensitivity;\r\n            const wasBeginning = swiper.isBeginning;\r\n            const wasEnd = swiper.isEnd;\r\n            if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n            if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n            swiper.setTransition(0);\r\n            swiper.setTranslate(position);\r\n            swiper.updateProgress();\r\n            swiper.updateActiveIndex();\r\n            swiper.updateSlidesClasses();\r\n            if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\r\n              swiper.updateSlidesClasses();\r\n            }\r\n            if (swiper.params.loop) {\r\n              swiper.loopFix({\r\n                direction: newEvent.direction < 0 ? 'next' : 'prev',\r\n                byMousewheel: true\r\n              });\r\n            }\r\n            if (swiper.params.freeMode.sticky) {\r\n              // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n              // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n              // 1. do all N events have decreasing or same (absolute value) delta?\r\n              // 2. did all N events arrive in the last M (M=500?) msecs?\r\n              // 3. does the earliest event have an (absolute value) delta that's\r\n              //    at least P (P=1?) larger than the most recent event's delta?\r\n              // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n              // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\r\n              // Snap immediately and ignore remaining wheel events in this scroll.\r\n              // See comment above for \"remaining wheel events in this scroll\" determination.\r\n              // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n              clearTimeout(timeout);\r\n              timeout = undefined;\r\n              if (recentWheelEvents.length >= 15) {\r\n                recentWheelEvents.shift(); // only store the last N events\r\n              }\r\n\r\n              const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n              const firstEvent = recentWheelEvents[0];\r\n              recentWheelEvents.push(newEvent);\r\n              if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\r\n                // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n                recentWheelEvents.splice(0);\r\n              } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\r\n                // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n                // to wait for more events. Snap ASAP on the next tick.\r\n                // Also, because there's some remaining momentum we'll bias the snap in the\r\n                // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n                // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n                // if it's already scrolled more than 20% in the current direction, keep going.\r\n                const snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n                lastEventBeforeSnap = newEvent;\r\n                recentWheelEvents.splice(0);\r\n                timeout = nextTick(() => {\r\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                }, 0); // no delay; move on next tick\r\n              }\r\n\r\n              if (!timeout) {\r\n                // if we get here, then we haven't detected the end of a momentum scroll, so\r\n                // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n                // for 500ms.\r\n                timeout = nextTick(() => {\r\n                  const snapToThreshold = 0.5;\r\n                  lastEventBeforeSnap = newEvent;\r\n                  recentWheelEvents.splice(0);\r\n                  swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n                }, 500);\r\n              }\r\n            }\r\n\r\n            // Emit event\r\n            if (!ignoreWheelEvents) emit('scroll', e);\r\n\r\n            // Stop autoplay\r\n            if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\r\n            // Return page scroll on edge positions\r\n            if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n          }\r\n        }\r\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        return false;\r\n      }\r\n      function events(method) {\r\n        let targetEl = swiper.el;\r\n        if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n          targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\r\n        }\r\n        targetEl[method]('mouseenter', handleMouseEnter);\r\n        targetEl[method]('mouseleave', handleMouseLeave);\r\n        targetEl[method]('wheel', handle);\r\n      }\r\n      function enable() {\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.removeEventListener('wheel', handle);\r\n          return true;\r\n        }\r\n        if (swiper.mousewheel.enabled) return false;\r\n        events('addEventListener');\r\n        swiper.mousewheel.enabled = true;\r\n        return true;\r\n      }\r\n      function disable() {\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.addEventListener(event, handle);\r\n          return true;\r\n        }\r\n        if (!swiper.mousewheel.enabled) return false;\r\n        events('removeEventListener');\r\n        swiper.mousewheel.enabled = false;\r\n        return true;\r\n      }\r\n      on('init', () => {\r\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\r\n          disable();\r\n        }\r\n        if (swiper.params.mousewheel.enabled) enable();\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.cssMode) {\r\n          enable();\r\n        }\r\n        if (swiper.mousewheel.enabled) disable();\r\n      });\r\n      Object.assign(swiper.mousewheel, {\r\n        enable,\r\n        disable\r\n      });\r\n    }\r\n\r\n    function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\r\n      if (swiper.params.createElements) {\r\n        Object.keys(checkProps).forEach(key => {\r\n          if (!params[key] && params.auto === true) {\r\n            let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\r\n            if (!element) {\r\n              element = createElement('div', checkProps[key]);\r\n              element.className = checkProps[key];\r\n              swiper.el.append(element);\r\n            }\r\n            params[key] = element;\r\n            originalParams[key] = element;\r\n          }\r\n        });\r\n      }\r\n      return params;\r\n    }\r\n\r\n    function Navigation(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      extendParams({\r\n        navigation: {\r\n          nextEl: null,\r\n          prevEl: null,\r\n          hideOnClick: false,\r\n          disabledClass: 'swiper-button-disabled',\r\n          hiddenClass: 'swiper-button-hidden',\r\n          lockClass: 'swiper-button-lock',\r\n          navigationDisabledClass: 'swiper-navigation-disabled'\r\n        }\r\n      });\r\n      swiper.navigation = {\r\n        nextEl: null,\r\n        prevEl: null\r\n      };\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function getEl(el) {\r\n        let res;\r\n        if (el && typeof el === 'string' && swiper.isElement) {\r\n          res = swiper.el.shadowRoot.querySelector(el);\r\n          if (res) return res;\r\n        }\r\n        if (el) {\r\n          if (typeof el === 'string') res = [...document.querySelectorAll(el)];\r\n          if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\r\n            res = swiper.el.querySelector(el);\r\n          }\r\n        }\r\n        if (el && !res) return el;\r\n        // if (Array.isArray(res) && res.length === 1) res = res[0];\r\n        return res;\r\n      }\r\n      function toggleEl(el, disabled) {\r\n        const params = swiper.params.navigation;\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          if (subEl) {\r\n            subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\r\n            if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\r\n            if (swiper.params.watchOverflow && swiper.enabled) {\r\n              subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\r\n            }\r\n          }\r\n        });\r\n      }\r\n      function update() {\r\n        // Update Navigation Buttons\r\n        const {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        if (swiper.params.loop) {\r\n          toggleEl(prevEl, false);\r\n          toggleEl(nextEl, false);\r\n          return;\r\n        }\r\n        toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\r\n        toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\r\n      }\r\n      function onPrevClick(e) {\r\n        e.preventDefault();\r\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\r\n        swiper.slidePrev();\r\n        emit('navigationPrev');\r\n      }\r\n      function onNextClick(e) {\r\n        e.preventDefault();\r\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\r\n        swiper.slideNext();\r\n        emit('navigationNext');\r\n      }\r\n      function init() {\r\n        const params = swiper.params.navigation;\r\n        swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\r\n          nextEl: 'swiper-button-next',\r\n          prevEl: 'swiper-button-prev'\r\n        });\r\n        if (!(params.nextEl || params.prevEl)) return;\r\n        let nextEl = getEl(params.nextEl);\r\n        let prevEl = getEl(params.prevEl);\r\n        Object.assign(swiper.navigation, {\r\n          nextEl,\r\n          prevEl\r\n        });\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const initButton = (el, dir) => {\r\n          if (el) {\r\n            el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\r\n          }\r\n          if (!swiper.enabled && el) {\r\n            el.classList.add(...params.lockClass.split(' '));\r\n          }\r\n        };\r\n        nextEl.forEach(el => initButton(el, 'next'));\r\n        prevEl.forEach(el => initButton(el, 'prev'));\r\n      }\r\n      function destroy() {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const destroyButton = (el, dir) => {\r\n          el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\r\n          el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\r\n        };\r\n        nextEl.forEach(el => destroyButton(el, 'next'));\r\n        prevEl.forEach(el => destroyButton(el, 'prev'));\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.navigation.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          update();\r\n        }\r\n      });\r\n      on('toEdge fromEdge lock unlock', () => {\r\n        update();\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      on('enable disable', () => {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\r\n      });\r\n      on('click', (_s, e) => {\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        const targetEl = e.target;\r\n        if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\r\n          if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\r\n          let isHidden;\r\n          if (nextEl.length) {\r\n            isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\r\n          } else if (prevEl.length) {\r\n            isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\r\n          }\r\n          if (isHidden === true) {\r\n            emit('navigationShow');\r\n          } else {\r\n            emit('navigationHide');\r\n          }\r\n          [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\r\n        }\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\r\n        init();\r\n        update();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.navigation, {\r\n        enable,\r\n        disable,\r\n        update,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function classesToSelector(classes) {\r\n      if (classes === void 0) {\r\n        classes = '';\r\n      }\r\n      return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\r\n  .replace(/ /g, '.')}`;\r\n    }\r\n\r\n    function Pagination(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const pfx = 'swiper-pagination';\r\n      extendParams({\r\n        pagination: {\r\n          el: null,\r\n          bulletElement: 'span',\r\n          clickable: false,\r\n          hideOnClick: false,\r\n          renderBullet: null,\r\n          renderProgressbar: null,\r\n          renderFraction: null,\r\n          renderCustom: null,\r\n          progressbarOpposite: false,\r\n          type: 'bullets',\r\n          // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n          dynamicBullets: false,\r\n          dynamicMainBullets: 1,\r\n          formatFractionCurrent: number => number,\r\n          formatFractionTotal: number => number,\r\n          bulletClass: `${pfx}-bullet`,\r\n          bulletActiveClass: `${pfx}-bullet-active`,\r\n          modifierClass: `${pfx}-`,\r\n          currentClass: `${pfx}-current`,\r\n          totalClass: `${pfx}-total`,\r\n          hiddenClass: `${pfx}-hidden`,\r\n          progressbarFillClass: `${pfx}-progressbar-fill`,\r\n          progressbarOppositeClass: `${pfx}-progressbar-opposite`,\r\n          clickableClass: `${pfx}-clickable`,\r\n          lockClass: `${pfx}-lock`,\r\n          horizontalClass: `${pfx}-horizontal`,\r\n          verticalClass: `${pfx}-vertical`,\r\n          paginationDisabledClass: `${pfx}-disabled`\r\n        }\r\n      });\r\n      swiper.pagination = {\r\n        el: null,\r\n        bullets: []\r\n      };\r\n      let bulletSize;\r\n      let dynamicBulletIndex = 0;\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function isPaginationDisabled() {\r\n        return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\r\n      }\r\n      function setSideBullets(bulletEl, position) {\r\n        const {\r\n          bulletActiveClass\r\n        } = swiper.params.pagination;\r\n        if (!bulletEl) return;\r\n        bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\r\n        if (bulletEl) {\r\n          bulletEl.classList.add(`${bulletActiveClass}-${position}`);\r\n          bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\r\n          if (bulletEl) {\r\n            bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\r\n          }\r\n        }\r\n      }\r\n      function onBulletClick(e) {\r\n        const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\r\n        if (!bulletEl) {\r\n          return;\r\n        }\r\n        e.preventDefault();\r\n        const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\r\n        if (swiper.params.loop) {\r\n          swiper.slideToLoop(index);\r\n        } else {\r\n          swiper.slideTo(index);\r\n        }\r\n      }\r\n      function update() {\r\n        // Render || Update Pagination bullets/items\r\n        const rtl = swiper.rtl;\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        let el = swiper.pagination.el;\r\n        el = makeElementsArray(el);\r\n        // Current/Total\r\n        let current;\r\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n        if (swiper.params.loop) {\r\n          current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\r\n        } else if (typeof swiper.snapIndex !== 'undefined') {\r\n          current = swiper.snapIndex;\r\n        } else {\r\n          current = swiper.activeIndex || 0;\r\n        }\r\n        // Types\r\n        if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n          const bullets = swiper.pagination.bullets;\r\n          let firstIndex;\r\n          let lastIndex;\r\n          let midIndex;\r\n          if (params.dynamicBullets) {\r\n            bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\r\n            el.forEach(subEl => {\r\n              subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\r\n            });\r\n            if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n              dynamicBulletIndex += current - (swiper.previousIndex || 0);\r\n              if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\r\n                dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n              } else if (dynamicBulletIndex < 0) {\r\n                dynamicBulletIndex = 0;\r\n              }\r\n            }\r\n            firstIndex = Math.max(current - dynamicBulletIndex, 0);\r\n            lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n            midIndex = (lastIndex + firstIndex) / 2;\r\n          }\r\n          bullets.forEach(bulletEl => {\r\n            bulletEl.classList.remove(...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`));\r\n          });\r\n          if (el.length > 1) {\r\n            bullets.forEach(bullet => {\r\n              const bulletIndex = elementIndex(bullet);\r\n              if (bulletIndex === current) {\r\n                bullet.classList.add(params.bulletActiveClass);\r\n              }\r\n              if (params.dynamicBullets) {\r\n                if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n                  bullet.classList.add(`${params.bulletActiveClass}-main`);\r\n                }\r\n                if (bulletIndex === firstIndex) {\r\n                  setSideBullets(bullet, 'prev');\r\n                }\r\n                if (bulletIndex === lastIndex) {\r\n                  setSideBullets(bullet, 'next');\r\n                }\r\n              }\r\n            });\r\n          } else {\r\n            const bullet = bullets[current];\r\n            if (bullet) {\r\n              bullet.classList.add(params.bulletActiveClass);\r\n            }\r\n            if (params.dynamicBullets) {\r\n              const firstDisplayedBullet = bullets[firstIndex];\r\n              const lastDisplayedBullet = bullets[lastIndex];\r\n              for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n                bullets[i].classList.add(`${params.bulletActiveClass}-main`);\r\n              }\r\n              setSideBullets(firstDisplayedBullet, 'prev');\r\n              setSideBullets(lastDisplayedBullet, 'next');\r\n            }\r\n          }\r\n          if (params.dynamicBullets) {\r\n            const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n            const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\r\n            const offsetProp = rtl ? 'right' : 'left';\r\n            bullets.forEach(bullet => {\r\n              bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\r\n            });\r\n          }\r\n        }\r\n        el.forEach((subEl, subElIndex) => {\r\n          if (params.type === 'fraction') {\r\n            subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\r\n              fractionEl.textContent = params.formatFractionCurrent(current + 1);\r\n            });\r\n            subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\r\n              totalEl.textContent = params.formatFractionTotal(total);\r\n            });\r\n          }\r\n          if (params.type === 'progressbar') {\r\n            let progressbarDirection;\r\n            if (params.progressbarOpposite) {\r\n              progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n            } else {\r\n              progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n            }\r\n            const scale = (current + 1) / total;\r\n            let scaleX = 1;\r\n            let scaleY = 1;\r\n            if (progressbarDirection === 'horizontal') {\r\n              scaleX = scale;\r\n            } else {\r\n              scaleY = scale;\r\n            }\r\n            subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\r\n              progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\r\n              progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\r\n            });\r\n          }\r\n          if (params.type === 'custom' && params.renderCustom) {\r\n            subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\r\n            if (subElIndex === 0) emit('paginationRender', subEl);\r\n          } else {\r\n            if (subElIndex === 0) emit('paginationRender', subEl);\r\n            emit('paginationUpdate', subEl);\r\n          }\r\n          if (swiper.params.watchOverflow && swiper.enabled) {\r\n            subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\r\n          }\r\n        });\r\n      }\r\n      function render() {\r\n        // Render Container\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n        let el = swiper.pagination.el;\r\n        el = makeElementsArray(el);\r\n        let paginationHTML = '';\r\n        if (params.type === 'bullets') {\r\n          let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n          if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\r\n            numberOfBullets = slidesLength;\r\n          }\r\n          for (let i = 0; i < numberOfBullets; i += 1) {\r\n            if (params.renderBullet) {\r\n              paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n            } else {\r\n              paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n            }\r\n          }\r\n        }\r\n        if (params.type === 'fraction') {\r\n          if (params.renderFraction) {\r\n            paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n          } else {\r\n            paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\r\n          }\r\n        }\r\n        if (params.type === 'progressbar') {\r\n          if (params.renderProgressbar) {\r\n            paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n          } else {\r\n            paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n          }\r\n        }\r\n        el.forEach(subEl => {\r\n          if (params.type !== 'custom') {\r\n            subEl.innerHTML = paginationHTML || '';\r\n          }\r\n          if (params.type === 'bullets') {\r\n            swiper.pagination.bullets = [...subEl.querySelectorAll(classesToSelector(params.bulletClass))];\r\n          }\r\n        });\r\n        if (params.type !== 'custom') {\r\n          emit('paginationRender', el[0]);\r\n        }\r\n      }\r\n      function init() {\r\n        swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\r\n          el: 'swiper-pagination'\r\n        });\r\n        const params = swiper.params.pagination;\r\n        if (!params.el) return;\r\n        let el;\r\n        if (typeof params.el === 'string' && swiper.isElement) {\r\n          el = swiper.el.shadowRoot.querySelector(params.el);\r\n        }\r\n        if (!el && typeof params.el === 'string') {\r\n          el = [...document.querySelectorAll(params.el)];\r\n        }\r\n        if (!el) {\r\n          el = params.el;\r\n        }\r\n        if (!el || el.length === 0) return;\r\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\r\n          el = [...swiper.el.querySelectorAll(params.el)];\r\n          // check if it belongs to another nested Swiper\r\n          if (el.length > 1) {\r\n            el = el.filter(subEl => {\r\n              if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\r\n              return true;\r\n            })[0];\r\n          }\r\n        }\r\n        if (Array.isArray(el) && el.length === 1) el = el[0];\r\n        Object.assign(swiper.pagination, {\r\n          el\r\n        });\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          if (params.type === 'bullets' && params.clickable) {\r\n            subEl.classList.add(params.clickableClass);\r\n          }\r\n          subEl.classList.add(params.modifierClass + params.type);\r\n          subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n          if (params.type === 'bullets' && params.dynamicBullets) {\r\n            subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\r\n            dynamicBulletIndex = 0;\r\n            if (params.dynamicMainBullets < 1) {\r\n              params.dynamicMainBullets = 1;\r\n            }\r\n          }\r\n          if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n            subEl.classList.add(params.progressbarOppositeClass);\r\n          }\r\n          if (params.clickable) {\r\n            subEl.addEventListener('click', onBulletClick);\r\n          }\r\n          if (!swiper.enabled) {\r\n            subEl.classList.add(params.lockClass);\r\n          }\r\n        });\r\n      }\r\n      function destroy() {\r\n        const params = swiper.params.pagination;\r\n        if (isPaginationDisabled()) return;\r\n        let el = swiper.pagination.el;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => {\r\n            subEl.classList.remove(params.hiddenClass);\r\n            subEl.classList.remove(params.modifierClass + params.type);\r\n            subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n            if (params.clickable) {\r\n              subEl.removeEventListener('click', onBulletClick);\r\n            }\r\n          });\r\n        }\r\n        if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(params.bulletActiveClass));\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.pagination.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          render();\r\n          update();\r\n        }\r\n      });\r\n      on('activeIndexChange', () => {\r\n        if (typeof swiper.snapIndex === 'undefined') {\r\n          update();\r\n        }\r\n      });\r\n      on('snapIndexChange', () => {\r\n        update();\r\n      });\r\n      on('snapGridLengthChange', () => {\r\n        render();\r\n        update();\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      on('enable disable', () => {\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\r\n        }\r\n      });\r\n      on('lock unlock', () => {\r\n        update();\r\n      });\r\n      on('click', (_s, e) => {\r\n        const targetEl = e.target;\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (!Array.isArray(el)) el = [el].filter(element => !!element);\r\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\r\n          if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\r\n          const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\r\n          if (isHidden === true) {\r\n            emit('paginationShow');\r\n          } else {\r\n            emit('paginationHide');\r\n          }\r\n          el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\r\n        }\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\r\n        }\r\n        init();\r\n        render();\r\n        update();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\r\n        let {\r\n          el\r\n        } = swiper.pagination;\r\n        if (el) {\r\n          el = makeElementsArray(el);\r\n          el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\r\n        }\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.pagination, {\r\n        enable,\r\n        disable,\r\n        render,\r\n        update,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function Scrollbar(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const document = getDocument();\r\n      let isTouched = false;\r\n      let timeout = null;\r\n      let dragTimeout = null;\r\n      let dragStartPos;\r\n      let dragSize;\r\n      let trackSize;\r\n      let divider;\r\n      extendParams({\r\n        scrollbar: {\r\n          el: null,\r\n          dragSize: 'auto',\r\n          hide: false,\r\n          draggable: false,\r\n          snapOnRelease: true,\r\n          lockClass: 'swiper-scrollbar-lock',\r\n          dragClass: 'swiper-scrollbar-drag',\r\n          scrollbarDisabledClass: 'swiper-scrollbar-disabled',\r\n          horizontalClass: `swiper-scrollbar-horizontal`,\r\n          verticalClass: `swiper-scrollbar-vertical`\r\n        }\r\n      });\r\n      swiper.scrollbar = {\r\n        el: null,\r\n        dragEl: null\r\n      };\r\n      function setTranslate() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        const {\r\n          scrollbar,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const {\r\n          dragEl,\r\n          el\r\n        } = scrollbar;\r\n        const params = swiper.params.scrollbar;\r\n        const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\r\n        let newSize = dragSize;\r\n        let newPos = (trackSize - dragSize) * progress;\r\n        if (rtl) {\r\n          newPos = -newPos;\r\n          if (newPos > 0) {\r\n            newSize = dragSize - newPos;\r\n            newPos = 0;\r\n          } else if (-newPos + dragSize > trackSize) {\r\n            newSize = trackSize + newPos;\r\n          }\r\n        } else if (newPos < 0) {\r\n          newSize = dragSize + newPos;\r\n          newPos = 0;\r\n        } else if (newPos + dragSize > trackSize) {\r\n          newSize = trackSize - newPos;\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\r\n          dragEl.style.width = `${newSize}px`;\r\n        } else {\r\n          dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\r\n          dragEl.style.height = `${newSize}px`;\r\n        }\r\n        if (params.hide) {\r\n          clearTimeout(timeout);\r\n          el.style.opacity = 1;\r\n          timeout = setTimeout(() => {\r\n            el.style.opacity = 0;\r\n            el.style.transitionDuration = '400ms';\r\n          }, 1000);\r\n        }\r\n      }\r\n      function setTransition(duration) {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\r\n      }\r\n      function updateSize() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        const {\r\n          scrollbar\r\n        } = swiper;\r\n        const {\r\n          dragEl,\r\n          el\r\n        } = scrollbar;\r\n        dragEl.style.width = '';\r\n        dragEl.style.height = '';\r\n        trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\r\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\r\n        if (swiper.params.scrollbar.dragSize === 'auto') {\r\n          dragSize = trackSize * divider;\r\n        } else {\r\n          dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n        }\r\n        if (swiper.isHorizontal()) {\r\n          dragEl.style.width = `${dragSize}px`;\r\n        } else {\r\n          dragEl.style.height = `${dragSize}px`;\r\n        }\r\n        if (divider >= 1) {\r\n          el.style.display = 'none';\r\n        } else {\r\n          el.style.display = '';\r\n        }\r\n        if (swiper.params.scrollbar.hide) {\r\n          el.style.opacity = 0;\r\n        }\r\n        if (swiper.params.watchOverflow && swiper.enabled) {\r\n          scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      }\r\n      function getPointerPosition(e) {\r\n        return swiper.isHorizontal() ? e.clientX : e.clientY;\r\n      }\r\n      function setDragPosition(e) {\r\n        const {\r\n          scrollbar,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const {\r\n          el\r\n        } = scrollbar;\r\n        let positionRatio;\r\n        positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n        if (rtl) {\r\n          positionRatio = 1 - positionRatio;\r\n        }\r\n        const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\r\n        swiper.updateProgress(position);\r\n        swiper.setTranslate(position);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n      function onDragStart(e) {\r\n        const params = swiper.params.scrollbar;\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el,\r\n          dragEl\r\n        } = scrollbar;\r\n        isTouched = true;\r\n        dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        wrapperEl.style.transitionDuration = '100ms';\r\n        dragEl.style.transitionDuration = '100ms';\r\n        setDragPosition(e);\r\n        clearTimeout(dragTimeout);\r\n        el.style.transitionDuration = '0ms';\r\n        if (params.hide) {\r\n          el.style.opacity = 1;\r\n        }\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style['scroll-snap-type'] = 'none';\r\n        }\r\n        emit('scrollbarDragStart', e);\r\n      }\r\n      function onDragMove(e) {\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el,\r\n          dragEl\r\n        } = scrollbar;\r\n        if (!isTouched) return;\r\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\r\n        setDragPosition(e);\r\n        wrapperEl.style.transitionDuration = '0ms';\r\n        el.style.transitionDuration = '0ms';\r\n        dragEl.style.transitionDuration = '0ms';\r\n        emit('scrollbarDragMove', e);\r\n      }\r\n      function onDragEnd(e) {\r\n        const params = swiper.params.scrollbar;\r\n        const {\r\n          scrollbar,\r\n          wrapperEl\r\n        } = swiper;\r\n        const {\r\n          el\r\n        } = scrollbar;\r\n        if (!isTouched) return;\r\n        isTouched = false;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style['scroll-snap-type'] = '';\r\n          wrapperEl.style.transitionDuration = '';\r\n        }\r\n        if (params.hide) {\r\n          clearTimeout(dragTimeout);\r\n          dragTimeout = nextTick(() => {\r\n            el.style.opacity = 0;\r\n            el.style.transitionDuration = '400ms';\r\n          }, 1000);\r\n        }\r\n        emit('scrollbarDragEnd', e);\r\n        if (params.snapOnRelease) {\r\n          swiper.slideToClosest();\r\n        }\r\n      }\r\n      function events(method) {\r\n        const {\r\n          scrollbar,\r\n          params\r\n        } = swiper;\r\n        const el = scrollbar.el;\r\n        if (!el) return;\r\n        const target = el;\r\n        const activeListener = params.passiveListeners ? {\r\n          passive: false,\r\n          capture: false\r\n        } : false;\r\n        const passiveListener = params.passiveListeners ? {\r\n          passive: true,\r\n          capture: false\r\n        } : false;\r\n        if (!target) return;\r\n        const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n        target[eventMethod]('pointerdown', onDragStart, activeListener);\r\n        document[eventMethod]('pointermove', onDragMove, activeListener);\r\n        document[eventMethod]('pointerup', onDragEnd, passiveListener);\r\n      }\r\n      function enableDraggable() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        events('on');\r\n      }\r\n      function disableDraggable() {\r\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n        events('off');\r\n      }\r\n      function init() {\r\n        const {\r\n          scrollbar,\r\n          el: swiperEl\r\n        } = swiper;\r\n        swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\r\n          el: 'swiper-scrollbar'\r\n        });\r\n        const params = swiper.params.scrollbar;\r\n        if (!params.el) return;\r\n        let el;\r\n        if (typeof params.el === 'string' && swiper.isElement) {\r\n          el = swiper.el.shadowRoot.querySelector(params.el);\r\n        }\r\n        if (!el && typeof params.el === 'string') {\r\n          el = document.querySelectorAll(params.el);\r\n        } else if (!el) {\r\n          el = params.el;\r\n        }\r\n        if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\r\n          el = swiperEl.querySelector(params.el);\r\n        }\r\n        if (el.length > 0) el = el[0];\r\n        el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n        let dragEl;\r\n        if (el) {\r\n          dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\r\n          if (!dragEl) {\r\n            dragEl = createElement('div', swiper.params.scrollbar.dragClass);\r\n            el.append(dragEl);\r\n          }\r\n        }\r\n        Object.assign(scrollbar, {\r\n          el,\r\n          dragEl\r\n        });\r\n        if (params.draggable) {\r\n          enableDraggable();\r\n        }\r\n        if (el) {\r\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      }\r\n      function destroy() {\r\n        const params = swiper.params.scrollbar;\r\n        const el = swiper.scrollbar.el;\r\n        if (el) {\r\n          el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n        }\r\n        disableDraggable();\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.scrollbar.enabled === false) {\r\n          // eslint-disable-next-line\r\n          disable();\r\n        } else {\r\n          init();\r\n          updateSize();\r\n          setTranslate();\r\n        }\r\n      });\r\n      on('update resize observerUpdate lock unlock', () => {\r\n        updateSize();\r\n      });\r\n      on('setTranslate', () => {\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        setTransition(duration);\r\n      });\r\n      on('enable disable', () => {\r\n        const {\r\n          el\r\n        } = swiper.scrollbar;\r\n        if (el) {\r\n          el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        destroy();\r\n      });\r\n      const enable = () => {\r\n        swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        if (swiper.scrollbar.el) {\r\n          swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        }\r\n        init();\r\n        updateSize();\r\n        setTranslate();\r\n      };\r\n      const disable = () => {\r\n        swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        if (swiper.scrollbar.el) {\r\n          swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\r\n        }\r\n        destroy();\r\n      };\r\n      Object.assign(swiper.scrollbar, {\r\n        enable,\r\n        disable,\r\n        updateSize,\r\n        setTranslate,\r\n        init,\r\n        destroy\r\n      });\r\n    }\r\n\r\n    function Parallax(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        parallax: {\r\n          enabled: false\r\n        }\r\n      });\r\n      const setTransform = (el, progress) => {\r\n        const {\r\n          rtl\r\n        } = swiper;\r\n        const rtlFactor = rtl ? -1 : 1;\r\n        const p = el.getAttribute('data-swiper-parallax') || '0';\r\n        let x = el.getAttribute('data-swiper-parallax-x');\r\n        let y = el.getAttribute('data-swiper-parallax-y');\r\n        const scale = el.getAttribute('data-swiper-parallax-scale');\r\n        const opacity = el.getAttribute('data-swiper-parallax-opacity');\r\n        const rotate = el.getAttribute('data-swiper-parallax-rotate');\r\n        if (x || y) {\r\n          x = x || '0';\r\n          y = y || '0';\r\n        } else if (swiper.isHorizontal()) {\r\n          x = p;\r\n          y = '0';\r\n        } else {\r\n          y = p;\r\n          x = '0';\r\n        }\r\n        if (x.indexOf('%') >= 0) {\r\n          x = `${parseInt(x, 10) * progress * rtlFactor}%`;\r\n        } else {\r\n          x = `${x * progress * rtlFactor}px`;\r\n        }\r\n        if (y.indexOf('%') >= 0) {\r\n          y = `${parseInt(y, 10) * progress}%`;\r\n        } else {\r\n          y = `${y * progress}px`;\r\n        }\r\n        if (typeof opacity !== 'undefined' && opacity !== null) {\r\n          const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\r\n          el.style.opacity = currentOpacity;\r\n        }\r\n        let transform = `translate3d(${x}, ${y}, 0px)`;\r\n        if (typeof scale !== 'undefined' && scale !== null) {\r\n          const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\r\n          transform += ` scale(${currentScale})`;\r\n        }\r\n        if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\r\n          const currentRotate = rotate * progress * -1;\r\n          transform += ` rotate(${currentRotate}deg)`;\r\n        }\r\n        el.style.transform = transform;\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          el,\r\n          slides,\r\n          progress,\r\n          snapGrid\r\n        } = swiper;\r\n        elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\r\n          setTransform(subEl, progress);\r\n        });\r\n        slides.forEach((slideEl, slideIndex) => {\r\n          let slideProgress = slideEl.progress;\r\n          if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\r\n            slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\r\n          }\r\n          slideProgress = Math.min(Math.max(slideProgress, -1), 1);\r\n          slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\r\n            setTransform(subEl, slideProgress);\r\n          });\r\n        });\r\n      };\r\n      const setTransition = function (duration) {\r\n        if (duration === void 0) {\r\n          duration = swiper.params.speed;\r\n        }\r\n        const {\r\n          el\r\n        } = swiper;\r\n        el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\r\n          let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\r\n          if (duration === 0) parallaxDuration = 0;\r\n          parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\r\n        });\r\n      };\r\n      on('beforeInit', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        swiper.params.watchSlidesProgress = true;\r\n        swiper.originalParams.watchSlidesProgress = true;\r\n      });\r\n      on('init', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTranslate();\r\n      });\r\n      on('setTranslate', () => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_swiper, duration) => {\r\n        if (!swiper.params.parallax.enabled) return;\r\n        setTransition(duration);\r\n      });\r\n    }\r\n\r\n    function Zoom(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit\r\n      } = _ref;\r\n      const window = getWindow();\r\n      extendParams({\r\n        zoom: {\r\n          enabled: false,\r\n          maxRatio: 3,\r\n          minRatio: 1,\r\n          toggle: true,\r\n          containerClass: 'swiper-zoom-container',\r\n          zoomedSlideClass: 'swiper-slide-zoomed'\r\n        }\r\n      });\r\n      swiper.zoom = {\r\n        enabled: false\r\n      };\r\n      let currentScale = 1;\r\n      let isScaling = false;\r\n      let fakeGestureTouched;\r\n      let fakeGestureMoved;\r\n      const evCache = [];\r\n      const gesture = {\r\n        slideEl: undefined,\r\n        slideWidth: undefined,\r\n        slideHeight: undefined,\r\n        imageEl: undefined,\r\n        imageWrapEl: undefined,\r\n        maxRatio: 3\r\n      };\r\n      const image = {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        currentX: undefined,\r\n        currentY: undefined,\r\n        minX: undefined,\r\n        minY: undefined,\r\n        maxX: undefined,\r\n        maxY: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n        startX: undefined,\r\n        startY: undefined,\r\n        touchesStart: {},\r\n        touchesCurrent: {}\r\n      };\r\n      const velocity = {\r\n        x: undefined,\r\n        y: undefined,\r\n        prevPositionX: undefined,\r\n        prevPositionY: undefined,\r\n        prevTime: undefined\r\n      };\r\n      let scale = 1;\r\n      Object.defineProperty(swiper.zoom, 'scale', {\r\n        get() {\r\n          return scale;\r\n        },\r\n        set(value) {\r\n          if (scale !== value) {\r\n            const imageEl = gesture.imageEl;\r\n            const slideEl = gesture.slideEl;\r\n            emit('zoomChange', value, imageEl, slideEl);\r\n          }\r\n          scale = value;\r\n        }\r\n      });\r\n      function getDistanceBetweenTouches() {\r\n        if (evCache.length < 2) return 1;\r\n        const x1 = evCache[0].pageX;\r\n        const y1 = evCache[0].pageY;\r\n        const x2 = evCache[1].pageX;\r\n        const y2 = evCache[1].pageY;\r\n        const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n        return distance;\r\n      }\r\n      function getScaleOrigin() {\r\n        if (evCache.length < 2) return {\r\n          x: null,\r\n          y: null\r\n        };\r\n        const box = gesture.imageEl.getBoundingClientRect();\r\n        return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\r\n      }\r\n      function getSlideSelector() {\r\n        return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\r\n      }\r\n      function eventWithinSlide(e) {\r\n        const slideSelector = getSlideSelector();\r\n        if (e.target.matches(slideSelector)) return true;\r\n        if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\r\n        return false;\r\n      }\r\n      function eventWithinZoomContainer(e) {\r\n        const selector = `.${swiper.params.zoom.containerClass}`;\r\n        if (e.target.matches(selector)) return true;\r\n        if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\r\n        return false;\r\n      }\r\n\r\n      // Events\r\n      function onGestureStart(e) {\r\n        if (!eventWithinSlide(e)) return;\r\n        const params = swiper.params.zoom;\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n        evCache.push(e);\r\n        if (evCache.length < 2) {\r\n          return;\r\n        }\r\n        fakeGestureTouched = true;\r\n        gesture.scaleStart = getDistanceBetweenTouches();\r\n        if (!gesture.slideEl) {\r\n          gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n          if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n          if (!gesture.imageWrapEl) {\r\n            gesture.imageEl = undefined;\r\n            return;\r\n          }\r\n          gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        }\r\n        if (gesture.imageEl) {\r\n          const [originX, originY] = getScaleOrigin();\r\n          gesture.imageEl.style.transformOrigin = `${originX}px ${originY}px`;\r\n          gesture.imageEl.style.transitionDuration = '0ms';\r\n        }\r\n        isScaling = true;\r\n      }\r\n      function onGestureChange(e) {\r\n        if (!eventWithinSlide(e)) return;\r\n        const params = swiper.params.zoom;\r\n        const zoom = swiper.zoom;\r\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n        if (pointerIndex >= 0) evCache[pointerIndex] = e;\r\n        if (evCache.length < 2) {\r\n          return;\r\n        }\r\n        fakeGestureMoved = true;\r\n        gesture.scaleMove = getDistanceBetweenTouches();\r\n        if (!gesture.imageEl) {\r\n          return;\r\n        }\r\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\r\n        if (zoom.scale > gesture.maxRatio) {\r\n          zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\r\n        }\r\n        if (zoom.scale < params.minRatio) {\r\n          zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\r\n        }\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n      }\r\n      function onGestureEnd(e) {\r\n        if (!eventWithinSlide(e)) return;\r\n        const params = swiper.params.zoom;\r\n        const zoom = swiper.zoom;\r\n        const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\r\n        if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\r\n        if (!fakeGestureTouched || !fakeGestureMoved) {\r\n          return;\r\n        }\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n        if (!gesture.imageEl) return;\r\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n        gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n        currentScale = zoom.scale;\r\n        isScaling = false;\r\n        if (zoom.scale === 1) gesture.slideEl = undefined;\r\n      }\r\n      function onTouchStart(e) {\r\n        const device = swiper.device;\r\n        if (!gesture.imageEl) return;\r\n        if (image.isTouched) return;\r\n        if (device.android && e.cancelable) e.preventDefault();\r\n        image.isTouched = true;\r\n        image.touchesStart.x = e.pageX;\r\n        image.touchesStart.y = e.pageY;\r\n      }\r\n      function onTouchMove(e) {\r\n        if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\r\n        const zoom = swiper.zoom;\r\n        if (!gesture.imageEl) return;\r\n        swiper.allowClick = false;\r\n        if (!image.isTouched || !gesture.slideEl) return;\r\n        if (!image.isMoved) {\r\n          image.width = gesture.imageEl.offsetWidth;\r\n          image.height = gesture.imageEl.offsetHeight;\r\n          image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\r\n          image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\r\n          gesture.slideWidth = gesture.slideEl.offsetWidth;\r\n          gesture.slideHeight = gesture.slideEl.offsetHeight;\r\n          gesture.imageWrapEl.style.transitionDuration = '0ms';\r\n        }\r\n        // Define if we need image drag\r\n        const scaledWidth = image.width * zoom.scale;\r\n        const scaledHeight = image.height * zoom.scale;\r\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n        image.maxY = -image.minY;\r\n        image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\r\n        image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\r\n        if (!image.isMoved && !isScaling) {\r\n          if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\r\n            image.isTouched = false;\r\n            return;\r\n          }\r\n          if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\r\n            image.isTouched = false;\r\n            return;\r\n          }\r\n        }\r\n        if (e.cancelable) {\r\n          e.preventDefault();\r\n        }\r\n        e.stopPropagation();\r\n        image.isMoved = true;\r\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\r\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\r\n        if (image.currentX < image.minX) {\r\n          image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\r\n        }\r\n        if (image.currentX > image.maxX) {\r\n          image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\r\n        }\r\n        if (image.currentY < image.minY) {\r\n          image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\r\n        }\r\n        if (image.currentY > image.maxY) {\r\n          image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\r\n        }\r\n\r\n        // Velocity\r\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n        velocity.prevPositionX = image.touchesCurrent.x;\r\n        velocity.prevPositionY = image.touchesCurrent.y;\r\n        velocity.prevTime = Date.now();\r\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\r\n      }\r\n      function onTouchEnd() {\r\n        const zoom = swiper.zoom;\r\n        if (!gesture.imageEl) return;\r\n        if (!image.isTouched || !image.isMoved) {\r\n          image.isTouched = false;\r\n          image.isMoved = false;\r\n          return;\r\n        }\r\n        image.isTouched = false;\r\n        image.isMoved = false;\r\n        let momentumDurationX = 300;\r\n        let momentumDurationY = 300;\r\n        const momentumDistanceX = velocity.x * momentumDurationX;\r\n        const newPositionX = image.currentX + momentumDistanceX;\r\n        const momentumDistanceY = velocity.y * momentumDurationY;\r\n        const newPositionY = image.currentY + momentumDistanceY;\r\n\r\n        // Fix duration\r\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n        const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n        image.currentX = newPositionX;\r\n        image.currentY = newPositionY;\r\n\r\n        // Define if we need image drag\r\n        const scaledWidth = image.width * zoom.scale;\r\n        const scaledHeight = image.height * zoom.scale;\r\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n        image.maxX = -image.minX;\r\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n        image.maxY = -image.minY;\r\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n        gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\r\n        gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\r\n      }\r\n      function onTransitionEnd() {\r\n        const zoom = swiper.zoom;\r\n        if (gesture.slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n          if (gesture.imageEl) {\r\n            gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\r\n          }\r\n          if (gesture.imageWrapEl) {\r\n            gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\r\n          }\r\n          zoom.scale = 1;\r\n          currentScale = 1;\r\n          gesture.slideEl = undefined;\r\n          gesture.imageEl = undefined;\r\n          gesture.imageWrapEl = undefined;\r\n        }\r\n      }\r\n      function zoomIn(e) {\r\n        const zoom = swiper.zoom;\r\n        const params = swiper.params.zoom;\r\n        if (!gesture.slideEl) {\r\n          if (e && e.target) {\r\n            gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n          }\r\n          if (!gesture.slideEl) {\r\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n              gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\r\n            } else {\r\n              gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n            }\r\n          }\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n        }\r\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style.overflow = 'hidden';\r\n          swiper.wrapperEl.style.touchAction = 'none';\r\n        }\r\n        gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\r\n        let touchX;\r\n        let touchY;\r\n        let offsetX;\r\n        let offsetY;\r\n        let diffX;\r\n        let diffY;\r\n        let translateX;\r\n        let translateY;\r\n        let imageWidth;\r\n        let imageHeight;\r\n        let scaledWidth;\r\n        let scaledHeight;\r\n        let translateMinX;\r\n        let translateMinY;\r\n        let translateMaxX;\r\n        let translateMaxY;\r\n        let slideWidth;\r\n        let slideHeight;\r\n        if (typeof image.touchesStart.x === 'undefined' && e) {\r\n          touchX = e.pageX;\r\n          touchY = e.pageY;\r\n        } else {\r\n          touchX = image.touchesStart.x;\r\n          touchY = image.touchesStart.y;\r\n        }\r\n        const forceZoomRatio = typeof e === 'number' ? e : null;\r\n        if (currentScale === 1 && forceZoomRatio) {\r\n          touchX = undefined;\r\n          touchY = undefined;\r\n        }\r\n        zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\r\n        if (e && !(currentScale === 1 && forceZoomRatio)) {\r\n          slideWidth = gesture.slideEl.offsetWidth;\r\n          slideHeight = gesture.slideEl.offsetHeight;\r\n          offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\r\n          offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\r\n          diffX = offsetX + slideWidth / 2 - touchX;\r\n          diffY = offsetY + slideHeight / 2 - touchY;\r\n          imageWidth = gesture.imageEl.offsetWidth;\r\n          imageHeight = gesture.imageEl.offsetHeight;\r\n          scaledWidth = imageWidth * zoom.scale;\r\n          scaledHeight = imageHeight * zoom.scale;\r\n          translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\r\n          translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\r\n          translateMaxX = -translateMinX;\r\n          translateMaxY = -translateMinY;\r\n          translateX = diffX * zoom.scale;\r\n          translateY = diffY * zoom.scale;\r\n          if (translateX < translateMinX) {\r\n            translateX = translateMinX;\r\n          }\r\n          if (translateX > translateMaxX) {\r\n            translateX = translateMaxX;\r\n          }\r\n          if (translateY < translateMinY) {\r\n            translateY = translateMinY;\r\n          }\r\n          if (translateY > translateMaxY) {\r\n            translateY = translateMaxY;\r\n          }\r\n        } else {\r\n          translateX = 0;\r\n          translateY = 0;\r\n        }\r\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\r\n        gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\r\n        gesture.imageEl.style.transitionDuration = '300ms';\r\n        gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\r\n      }\r\n      function zoomOut() {\r\n        const zoom = swiper.zoom;\r\n        const params = swiper.params.zoom;\r\n        if (!gesture.slideEl) {\r\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n            gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\r\n          } else {\r\n            gesture.slideEl = swiper.slides[swiper.activeIndex];\r\n          }\r\n          let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\r\n          if (imageEl) {\r\n            imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\r\n          }\r\n          gesture.imageEl = imageEl;\r\n          if (imageEl) {\r\n            gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\r\n          } else {\r\n            gesture.imageWrapEl = undefined;\r\n          }\r\n        }\r\n        if (!gesture.imageEl || !gesture.imageWrapEl) return;\r\n        if (swiper.params.cssMode) {\r\n          swiper.wrapperEl.style.overflow = '';\r\n          swiper.wrapperEl.style.touchAction = '';\r\n        }\r\n        zoom.scale = 1;\r\n        currentScale = 1;\r\n        gesture.imageWrapEl.style.transitionDuration = '300ms';\r\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\r\n        gesture.imageEl.style.transitionDuration = '300ms';\r\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\r\n        gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\r\n        gesture.slideEl = undefined;\r\n      }\r\n\r\n      // Toggle Zoom\r\n      function zoomToggle(e) {\r\n        const zoom = swiper.zoom;\r\n        if (zoom.scale && zoom.scale !== 1) {\r\n          // Zoom Out\r\n          zoomOut();\r\n        } else {\r\n          // Zoom In\r\n          zoomIn(e);\r\n        }\r\n      }\r\n      function getListeners() {\r\n        const passiveListener = swiper.params.passiveListeners ? {\r\n          passive: true,\r\n          capture: false\r\n        } : false;\r\n        const activeListenerWithCapture = swiper.params.passiveListeners ? {\r\n          passive: false,\r\n          capture: true\r\n        } : true;\r\n        return {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        };\r\n      }\r\n\r\n      // Attach/Detach Events\r\n      function enable() {\r\n        const zoom = swiper.zoom;\r\n        if (zoom.enabled) return;\r\n        zoom.enabled = true;\r\n        const {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        } = getListeners();\r\n\r\n        // Scale image\r\n\r\n        swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\r\n        swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\r\n        ['pointerup', 'pointercancel'].forEach(eventName => {\r\n          swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\r\n        });\r\n\r\n        // Move image\r\n        swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\r\n      }\r\n      function disable() {\r\n        const zoom = swiper.zoom;\r\n        if (!zoom.enabled) return;\r\n        zoom.enabled = false;\r\n        const {\r\n          passiveListener,\r\n          activeListenerWithCapture\r\n        } = getListeners();\r\n\r\n        // Scale image\r\n        swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\r\n        swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\r\n        ['pointerup', 'pointercancel'].forEach(eventName => {\r\n          swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\r\n        });\r\n\r\n        // Move image\r\n        swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\r\n      }\r\n      on('init', () => {\r\n        if (swiper.params.zoom.enabled) {\r\n          enable();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        disable();\r\n      });\r\n      on('touchStart', (_s, e) => {\r\n        if (!swiper.zoom.enabled) return;\r\n        onTouchStart(e);\r\n      });\r\n      on('touchEnd', (_s, e) => {\r\n        if (!swiper.zoom.enabled) return;\r\n        onTouchEnd();\r\n      });\r\n      on('doubleTap', (_s, e) => {\r\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n          zoomToggle(e);\r\n        }\r\n      });\r\n      on('transitionEnd', () => {\r\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n          onTransitionEnd();\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n          onTransitionEnd();\r\n        }\r\n      });\r\n      Object.assign(swiper.zoom, {\r\n        enable,\r\n        disable,\r\n        in: zoomIn,\r\n        out: zoomOut,\r\n        toggle: zoomToggle\r\n      });\r\n    }\r\n\r\n    /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\r\n    function Controller(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        controller: {\r\n          control: undefined,\r\n          inverse: false,\r\n          by: 'slide' // or 'container'\r\n        }\r\n      });\r\n\r\n      swiper.controller = {\r\n        control: undefined\r\n      };\r\n      function LinearSpline(x, y) {\r\n        const binarySearch = function search() {\r\n          let maxIndex;\r\n          let minIndex;\r\n          let guess;\r\n          return (array, val) => {\r\n            minIndex = -1;\r\n            maxIndex = array.length;\r\n            while (maxIndex - minIndex > 1) {\r\n              guess = maxIndex + minIndex >> 1;\r\n              if (array[guess] <= val) {\r\n                minIndex = guess;\r\n              } else {\r\n                maxIndex = guess;\r\n              }\r\n            }\r\n            return maxIndex;\r\n          };\r\n        }();\r\n        this.x = x;\r\n        this.y = y;\r\n        this.lastIndex = x.length - 1;\r\n        // Given an x value (x2), return the expected y2 value:\r\n        // (x1,y1) is the known point before given value,\r\n        // (x3,y3) is the known point after given value.\r\n        let i1;\r\n        let i3;\r\n        this.interpolate = function interpolate(x2) {\r\n          if (!x2) return 0;\r\n\r\n          // Get the indexes of x1 and x3 (the array indexes before and after given x2):\r\n          i3 = binarySearch(this.x, x2);\r\n          i1 = i3 - 1;\r\n\r\n          // We have our indexes i1 & i3, so we can calculate already:\r\n          // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\r\n          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\r\n        };\r\n        return this;\r\n      }\r\n      // xxx: for now i will just save one spline function to to\r\n      function getInterpolateFunction(c) {\r\n        if (!swiper.controller.spline) {\r\n          swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\r\n        }\r\n      }\r\n      function setTranslate(_t, byController) {\r\n        const controlled = swiper.controller.control;\r\n        let multiplier;\r\n        let controlledTranslate;\r\n        const Swiper = swiper.constructor;\r\n        function setControlledTranslate(c) {\r\n          // this will create an Interpolate function based on the snapGrids\r\n          // x is the Grid of the scrolled scroller and y will be the controlled scroller\r\n          // it makes sense to create this only once and recall it for the interpolation\r\n          // the function does a lot of value caching for performance\r\n          const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\r\n          if (swiper.params.controller.by === 'slide') {\r\n            getInterpolateFunction(c);\r\n            // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\r\n            // but it did not work out\r\n            controlledTranslate = -swiper.controller.spline.interpolate(-translate);\r\n          }\r\n          if (!controlledTranslate || swiper.params.controller.by === 'container') {\r\n            multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\r\n            controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\r\n          }\r\n          if (swiper.params.controller.inverse) {\r\n            controlledTranslate = c.maxTranslate() - controlledTranslate;\r\n          }\r\n          c.updateProgress(controlledTranslate);\r\n          c.setTranslate(controlledTranslate, swiper);\r\n          c.updateActiveIndex();\r\n          c.updateSlidesClasses();\r\n        }\r\n        if (Array.isArray(controlled)) {\r\n          for (let i = 0; i < controlled.length; i += 1) {\r\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n              setControlledTranslate(controlled[i]);\r\n            }\r\n          }\r\n        } else if (controlled instanceof Swiper && byController !== controlled) {\r\n          setControlledTranslate(controlled);\r\n        }\r\n      }\r\n      function setTransition(duration, byController) {\r\n        const Swiper = swiper.constructor;\r\n        const controlled = swiper.controller.control;\r\n        let i;\r\n        function setControlledTransition(c) {\r\n          c.setTransition(duration, swiper);\r\n          if (duration !== 0) {\r\n            c.transitionStart();\r\n            if (c.params.autoHeight) {\r\n              nextTick(() => {\r\n                c.updateAutoHeight();\r\n              });\r\n            }\r\n            elementTransitionEnd(c.wrapperEl, () => {\r\n              if (!controlled) return;\r\n              c.transitionEnd();\r\n            });\r\n          }\r\n        }\r\n        if (Array.isArray(controlled)) {\r\n          for (i = 0; i < controlled.length; i += 1) {\r\n            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n              setControlledTransition(controlled[i]);\r\n            }\r\n          }\r\n        } else if (controlled instanceof Swiper && byController !== controlled) {\r\n          setControlledTransition(controlled);\r\n        }\r\n      }\r\n      function removeSpline() {\r\n        if (!swiper.controller.control) return;\r\n        if (swiper.controller.spline) {\r\n          swiper.controller.spline = undefined;\r\n          delete swiper.controller.spline;\r\n        }\r\n      }\r\n      on('beforeInit', () => {\r\n        if (typeof window !== 'undefined' && (\r\n        // eslint-disable-line\r\n        typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\r\n          const controlElement = document.querySelector(swiper.params.controller.control);\r\n          if (controlElement && controlElement.swiper) {\r\n            swiper.controller.control = controlElement.swiper;\r\n          } else if (controlElement) {\r\n            const onControllerSwiper = e => {\r\n              swiper.controller.control = e.detail[0];\r\n              swiper.update();\r\n              controlElement.removeEventListener('init', onControllerSwiper);\r\n            };\r\n            controlElement.addEventListener('init', onControllerSwiper);\r\n          }\r\n          return;\r\n        }\r\n        swiper.controller.control = swiper.params.controller.control;\r\n      });\r\n      on('update', () => {\r\n        removeSpline();\r\n      });\r\n      on('resize', () => {\r\n        removeSpline();\r\n      });\r\n      on('observerUpdate', () => {\r\n        removeSpline();\r\n      });\r\n      on('setTranslate', (_s, translate, byController) => {\r\n        if (!swiper.controller.control) return;\r\n        swiper.controller.setTranslate(translate, byController);\r\n      });\r\n      on('setTransition', (_s, duration, byController) => {\r\n        if (!swiper.controller.control) return;\r\n        swiper.controller.setTransition(duration, byController);\r\n      });\r\n      Object.assign(swiper.controller, {\r\n        setTranslate,\r\n        setTransition\r\n      });\r\n    }\r\n\r\n    function A11y(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        a11y: {\r\n          enabled: true,\r\n          notificationClass: 'swiper-notification',\r\n          prevSlideMessage: 'Previous slide',\r\n          nextSlideMessage: 'Next slide',\r\n          firstSlideMessage: 'This is the first slide',\r\n          lastSlideMessage: 'This is the last slide',\r\n          paginationBulletMessage: 'Go to slide {{index}}',\r\n          slideLabelMessage: '{{index}} / {{slidesLength}}',\r\n          containerMessage: null,\r\n          containerRoleDescriptionMessage: null,\r\n          itemRoleDescriptionMessage: null,\r\n          slideRole: 'group',\r\n          id: null\r\n        }\r\n      });\r\n      swiper.a11y = {\r\n        clicked: false\r\n      };\r\n      let liveRegion = null;\r\n      function notify(message) {\r\n        const notification = liveRegion;\r\n        if (notification.length === 0) return;\r\n        notification.innerHTML = '';\r\n        notification.innerHTML = message;\r\n      }\r\n      const makeElementsArray = el => {\r\n        if (!Array.isArray(el)) el = [el].filter(e => !!e);\r\n        return el;\r\n      };\r\n      function getRandomNumber(size) {\r\n        if (size === void 0) {\r\n          size = 16;\r\n        }\r\n        const randomChar = () => Math.round(16 * Math.random()).toString(16);\r\n        return 'x'.repeat(size).replace(/x/g, randomChar);\r\n      }\r\n      function makeElFocusable(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('tabIndex', '0');\r\n        });\r\n      }\r\n      function makeElNotFocusable(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('tabIndex', '-1');\r\n        });\r\n      }\r\n      function addElRole(el, role) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('role', role);\r\n        });\r\n      }\r\n      function addElRoleDescription(el, description) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-roledescription', description);\r\n        });\r\n      }\r\n      function addElControls(el, controls) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-controls', controls);\r\n        });\r\n      }\r\n      function addElLabel(el, label) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-label', label);\r\n        });\r\n      }\r\n      function addElId(el, id) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('id', id);\r\n        });\r\n      }\r\n      function addElLive(el, live) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-live', live);\r\n        });\r\n      }\r\n      function disableEl(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-disabled', true);\r\n        });\r\n      }\r\n      function enableEl(el) {\r\n        el = makeElementsArray(el);\r\n        el.forEach(subEl => {\r\n          subEl.setAttribute('aria-disabled', false);\r\n        });\r\n      }\r\n      function onEnterOrSpaceKey(e) {\r\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\r\n        const params = swiper.params.a11y;\r\n        const targetEl = e.target;\r\n        if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\r\n          if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\r\n        }\r\n        if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\r\n          if (!(swiper.isEnd && !swiper.params.loop)) {\r\n            swiper.slideNext();\r\n          }\r\n          if (swiper.isEnd) {\r\n            notify(params.lastSlideMessage);\r\n          } else {\r\n            notify(params.nextSlideMessage);\r\n          }\r\n        }\r\n        if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\r\n          if (!(swiper.isBeginning && !swiper.params.loop)) {\r\n            swiper.slidePrev();\r\n          }\r\n          if (swiper.isBeginning) {\r\n            notify(params.firstSlideMessage);\r\n          } else {\r\n            notify(params.prevSlideMessage);\r\n          }\r\n        }\r\n        if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\r\n          targetEl.click();\r\n        }\r\n      }\r\n      function updateNavigation() {\r\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\r\n        const {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation;\r\n        if (prevEl) {\r\n          if (swiper.isBeginning) {\r\n            disableEl(prevEl);\r\n            makeElNotFocusable(prevEl);\r\n          } else {\r\n            enableEl(prevEl);\r\n            makeElFocusable(prevEl);\r\n          }\r\n        }\r\n        if (nextEl) {\r\n          if (swiper.isEnd) {\r\n            disableEl(nextEl);\r\n            makeElNotFocusable(nextEl);\r\n          } else {\r\n            enableEl(nextEl);\r\n            makeElFocusable(nextEl);\r\n          }\r\n        }\r\n      }\r\n      function hasPagination() {\r\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\r\n      }\r\n      function hasClickablePagination() {\r\n        return hasPagination() && swiper.params.pagination.clickable;\r\n      }\r\n      function updatePagination() {\r\n        const params = swiper.params.a11y;\r\n        if (!hasPagination()) return;\r\n        swiper.pagination.bullets.forEach(bulletEl => {\r\n          if (swiper.params.pagination.clickable) {\r\n            makeElFocusable(bulletEl);\r\n            if (!swiper.params.pagination.renderBullet) {\r\n              addElRole(bulletEl, 'button');\r\n              addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\r\n            }\r\n          }\r\n          if (bulletEl.matches(`.${swiper.params.pagination.bulletActiveClass}`)) {\r\n            bulletEl.setAttribute('aria-current', 'true');\r\n          } else {\r\n            bulletEl.removeAttribute('aria-current');\r\n          }\r\n        });\r\n      }\r\n      const initNavEl = (el, wrapperId, message) => {\r\n        makeElFocusable(el);\r\n        if (el.tagName !== 'BUTTON') {\r\n          addElRole(el, 'button');\r\n          el.addEventListener('keydown', onEnterOrSpaceKey);\r\n        }\r\n        addElLabel(el, message);\r\n        addElControls(el, wrapperId);\r\n      };\r\n      const handlePointerDown = () => {\r\n        swiper.a11y.clicked = true;\r\n      };\r\n      const handlePointerUp = () => {\r\n        requestAnimationFrame(() => {\r\n          requestAnimationFrame(() => {\r\n            if (!swiper.destroyed) {\r\n              swiper.a11y.clicked = false;\r\n            }\r\n          });\r\n        });\r\n      };\r\n      const handleFocus = e => {\r\n        if (swiper.a11y.clicked) return;\r\n        const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\r\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\r\n        const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\r\n        const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\r\n        if (isActive || isVisible) return;\r\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\r\n        if (swiper.isHorizontal()) {\r\n          swiper.el.scrollLeft = 0;\r\n        } else {\r\n          swiper.el.scrollTop = 0;\r\n        }\r\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\r\n      };\r\n      const initSlides = () => {\r\n        const params = swiper.params.a11y;\r\n        if (params.itemRoleDescriptionMessage) {\r\n          addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\r\n        }\r\n        if (params.slideRole) {\r\n          addElRole(swiper.slides, params.slideRole);\r\n        }\r\n        const slidesLength = swiper.slides.length;\r\n        if (params.slideLabelMessage) {\r\n          swiper.slides.forEach((slideEl, index) => {\r\n            const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\r\n            const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\r\n            addElLabel(slideEl, ariaLabelMessage);\r\n          });\r\n        }\r\n      };\r\n      const init = () => {\r\n        const params = swiper.params.a11y;\r\n        swiper.el.append(liveRegion);\r\n\r\n        // Container\r\n        const containerEl = swiper.el;\r\n        if (params.containerRoleDescriptionMessage) {\r\n          addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\r\n        }\r\n        if (params.containerMessage) {\r\n          addElLabel(containerEl, params.containerMessage);\r\n        }\r\n\r\n        // Wrapper\r\n        const wrapperEl = swiper.wrapperEl;\r\n        const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\r\n        const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\r\n        addElId(wrapperEl, wrapperId);\r\n        addElLive(wrapperEl, live);\r\n\r\n        // Slide\r\n        initSlides();\r\n\r\n        // Navigation\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation ? swiper.navigation : {};\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        if (nextEl) {\r\n          nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\r\n        }\r\n        if (prevEl) {\r\n          prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\r\n        }\r\n\r\n        // Pagination\r\n        if (hasClickablePagination()) {\r\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\r\n          paginationEl.forEach(el => {\r\n            el.addEventListener('keydown', onEnterOrSpaceKey);\r\n          });\r\n        }\r\n\r\n        // Tab focus\r\n        swiper.el.addEventListener('focus', handleFocus, true);\r\n        swiper.el.addEventListener('pointerdown', handlePointerDown, true);\r\n        swiper.el.addEventListener('pointerup', handlePointerUp, true);\r\n      };\r\n      function destroy() {\r\n        if (liveRegion && liveRegion.length > 0) liveRegion.remove();\r\n        let {\r\n          nextEl,\r\n          prevEl\r\n        } = swiper.navigation ? swiper.navigation : {};\r\n        nextEl = makeElementsArray(nextEl);\r\n        prevEl = makeElementsArray(prevEl);\r\n        if (nextEl) {\r\n          nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\r\n        }\r\n        if (prevEl) {\r\n          prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\r\n        }\r\n\r\n        // Pagination\r\n        if (hasClickablePagination()) {\r\n          const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\r\n          paginationEl.forEach(el => {\r\n            el.removeEventListener('keydown', onEnterOrSpaceKey);\r\n          });\r\n        }\r\n\r\n        // Tab focus\r\n        swiper.el.removeEventListener('focus', handleFocus, true);\r\n        swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\r\n        swiper.el.removeEventListener('pointerup', handlePointerUp, true);\r\n      }\r\n      on('beforeInit', () => {\r\n        liveRegion = createElement('span', swiper.params.a11y.notificationClass);\r\n        liveRegion.setAttribute('aria-live', 'assertive');\r\n        liveRegion.setAttribute('aria-atomic', 'true');\r\n        if (swiper.isElement) {\r\n          liveRegion.setAttribute('slot', 'container-end');\r\n        }\r\n      });\r\n      on('afterInit', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        init();\r\n      });\r\n      on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        initSlides();\r\n      });\r\n      on('fromEdge toEdge afterInit lock unlock', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        updateNavigation();\r\n      });\r\n      on('paginationUpdate', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        updatePagination();\r\n      });\r\n      on('destroy', () => {\r\n        if (!swiper.params.a11y.enabled) return;\r\n        destroy();\r\n      });\r\n    }\r\n\r\n    function History(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        history: {\r\n          enabled: false,\r\n          root: '',\r\n          replaceState: false,\r\n          key: 'slides',\r\n          keepQuery: false\r\n        }\r\n      });\r\n      let initialized = false;\r\n      let paths = {};\r\n      const slugify = text => {\r\n        return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\r\n      };\r\n      const getPathValues = urlOverride => {\r\n        const window = getWindow();\r\n        let location;\r\n        if (urlOverride) {\r\n          location = new URL(urlOverride);\r\n        } else {\r\n          location = window.location;\r\n        }\r\n        const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\r\n        const total = pathArray.length;\r\n        const key = pathArray[total - 2];\r\n        const value = pathArray[total - 1];\r\n        return {\r\n          key,\r\n          value\r\n        };\r\n      };\r\n      const setHistory = (key, index) => {\r\n        const window = getWindow();\r\n        if (!initialized || !swiper.params.history.enabled) return;\r\n        let location;\r\n        if (swiper.params.url) {\r\n          location = new URL(swiper.params.url);\r\n        } else {\r\n          location = window.location;\r\n        }\r\n        const slide = swiper.slides[index];\r\n        let value = slugify(slide.getAttribute('data-history'));\r\n        if (swiper.params.history.root.length > 0) {\r\n          let root = swiper.params.history.root;\r\n          if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\r\n          value = `${root}/${key ? `${key}/` : ''}${value}`;\r\n        } else if (!location.pathname.includes(key)) {\r\n          value = `${key ? `${key}/` : ''}${value}`;\r\n        }\r\n        if (swiper.params.history.keepQuery) {\r\n          value += location.search;\r\n        }\r\n        const currentState = window.history.state;\r\n        if (currentState && currentState.value === value) {\r\n          return;\r\n        }\r\n        if (swiper.params.history.replaceState) {\r\n          window.history.replaceState({\r\n            value\r\n          }, null, value);\r\n        } else {\r\n          window.history.pushState({\r\n            value\r\n          }, null, value);\r\n        }\r\n      };\r\n      const scrollToSlide = (speed, value, runCallbacks) => {\r\n        if (value) {\r\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n            const slide = swiper.slides[i];\r\n            const slideHistory = slugify(slide.getAttribute('data-history'));\r\n            if (slideHistory === value) {\r\n              const index = elementIndex(slide);\r\n              swiper.slideTo(index, speed, runCallbacks);\r\n            }\r\n          }\r\n        } else {\r\n          swiper.slideTo(0, speed, runCallbacks);\r\n        }\r\n      };\r\n      const setHistoryPopState = () => {\r\n        paths = getPathValues(swiper.params.url);\r\n        scrollToSlide(swiper.params.speed, paths.value, false);\r\n      };\r\n      const init = () => {\r\n        const window = getWindow();\r\n        if (!swiper.params.history) return;\r\n        if (!window.history || !window.history.pushState) {\r\n          swiper.params.history.enabled = false;\r\n          swiper.params.hashNavigation.enabled = true;\r\n          return;\r\n        }\r\n        initialized = true;\r\n        paths = getPathValues(swiper.params.url);\r\n        if (!paths.key && !paths.value) {\r\n          if (!swiper.params.history.replaceState) {\r\n            window.addEventListener('popstate', setHistoryPopState);\r\n          }\r\n          return;\r\n        }\r\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\r\n        if (!swiper.params.history.replaceState) {\r\n          window.addEventListener('popstate', setHistoryPopState);\r\n        }\r\n      };\r\n      const destroy = () => {\r\n        const window = getWindow();\r\n        if (!swiper.params.history.replaceState) {\r\n          window.removeEventListener('popstate', setHistoryPopState);\r\n        }\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.history.enabled) {\r\n          init();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.history.enabled) {\r\n          destroy();\r\n        }\r\n      });\r\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n        if (initialized) {\r\n          setHistory(swiper.params.history.key, swiper.activeIndex);\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (initialized && swiper.params.cssMode) {\r\n          setHistory(swiper.params.history.key, swiper.activeIndex);\r\n        }\r\n      });\r\n    }\r\n\r\n    function HashNavigation(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        emit,\r\n        on\r\n      } = _ref;\r\n      let initialized = false;\r\n      const document = getDocument();\r\n      const window = getWindow();\r\n      extendParams({\r\n        hashNavigation: {\r\n          enabled: false,\r\n          replaceState: false,\r\n          watchState: false\r\n        }\r\n      });\r\n      const onHashChange = () => {\r\n        emit('hashChange');\r\n        const newHash = document.location.hash.replace('#', '');\r\n        const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\r\n        if (newHash !== activeSlideHash) {\r\n          const newIndex = elementIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\r\n          if (typeof newIndex === 'undefined') return;\r\n          swiper.slideTo(newIndex);\r\n        }\r\n      };\r\n      const setHash = () => {\r\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\r\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\r\n          window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\r\n          emit('hashSet');\r\n        } else {\r\n          const slide = swiper.slides[swiper.activeIndex];\r\n          const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\r\n          document.location.hash = hash || '';\r\n          emit('hashSet');\r\n        }\r\n      };\r\n      const init = () => {\r\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\r\n        initialized = true;\r\n        const hash = document.location.hash.replace('#', '');\r\n        if (hash) {\r\n          const speed = 0;\r\n          for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n            const slide = swiper.slides[i];\r\n            const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\r\n            if (slideHash === hash) {\r\n              const index = elementIndex(slide);\r\n              swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\r\n            }\r\n          }\r\n        }\r\n        if (swiper.params.hashNavigation.watchState) {\r\n          window.addEventListener('hashchange', onHashChange);\r\n        }\r\n      };\r\n      const destroy = () => {\r\n        if (swiper.params.hashNavigation.watchState) {\r\n          window.removeEventListener('hashchange', onHashChange);\r\n        }\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.hashNavigation.enabled) {\r\n          init();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        if (swiper.params.hashNavigation.enabled) {\r\n          destroy();\r\n        }\r\n      });\r\n      on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n        if (initialized) {\r\n          setHash();\r\n        }\r\n      });\r\n      on('slideChange', () => {\r\n        if (initialized && swiper.params.cssMode) {\r\n          setHash();\r\n        }\r\n      });\r\n    }\r\n\r\n    /* eslint no-underscore-dangle: \"off\" */\r\n    function Autoplay(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on,\r\n        emit,\r\n        params\r\n      } = _ref;\r\n      swiper.autoplay = {\r\n        running: false,\r\n        paused: false,\r\n        timeLeft: 0\r\n      };\r\n      extendParams({\r\n        autoplay: {\r\n          enabled: false,\r\n          delay: 3000,\r\n          waitForTransition: true,\r\n          disableOnInteraction: true,\r\n          stopOnLastSlide: false,\r\n          reverseDirection: false,\r\n          pauseOnMouseEnter: false\r\n        }\r\n      });\r\n      let timeout;\r\n      let raf;\r\n      let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\r\n      let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\r\n      let autoplayTimeLeft;\r\n      let autoplayStartTime = new Date().getTime;\r\n      let wasPaused;\r\n      let isTouched;\r\n      let pausedByTouch;\r\n      let touchStartTimeout;\r\n      let slideChanged;\r\n      let pausedByInteraction;\r\n      function onTransitionEnd(e) {\r\n        if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\r\n        if (e.target !== swiper.wrapperEl) return;\r\n        swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\r\n        resume();\r\n      }\r\n      const calcTimeLeft = () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (swiper.autoplay.paused) {\r\n          wasPaused = true;\r\n        } else if (wasPaused) {\r\n          autoplayDelayCurrent = autoplayTimeLeft;\r\n          wasPaused = false;\r\n        }\r\n        const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\r\n        swiper.autoplay.timeLeft = timeLeft;\r\n        emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\r\n        raf = requestAnimationFrame(() => {\r\n          calcTimeLeft();\r\n        });\r\n      };\r\n      const getSlideDelay = () => {\r\n        let activeSlideEl;\r\n        if (swiper.virtual && swiper.params.virtual.enabled) {\r\n          activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\r\n        } else {\r\n          activeSlideEl = swiper.slides[swiper.activeIndex];\r\n        }\r\n        if (!activeSlideEl) return undefined;\r\n        const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\r\n        return currentSlideDelay;\r\n      };\r\n      const run = delayForce => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        cancelAnimationFrame(raf);\r\n        calcTimeLeft();\r\n        let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\r\n        autoplayDelayTotal = swiper.params.autoplay.delay;\r\n        autoplayDelayCurrent = swiper.params.autoplay.delay;\r\n        const currentSlideDelay = getSlideDelay();\r\n        if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\r\n          delay = currentSlideDelay;\r\n          autoplayDelayTotal = currentSlideDelay;\r\n          autoplayDelayCurrent = currentSlideDelay;\r\n        }\r\n        autoplayTimeLeft = delay;\r\n        const speed = swiper.params.speed;\r\n        const proceed = () => {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (swiper.params.autoplay.reverseDirection) {\r\n            if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\r\n              swiper.slidePrev(speed, true, true);\r\n              emit('autoplay');\r\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n              swiper.slideTo(swiper.slides.length - 1, speed, true, true);\r\n              emit('autoplay');\r\n            }\r\n          } else {\r\n            if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\r\n              swiper.slideNext(speed, true, true);\r\n              emit('autoplay');\r\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n              swiper.slideTo(0, speed, true, true);\r\n              emit('autoplay');\r\n            }\r\n          }\r\n          if (swiper.params.cssMode) {\r\n            autoplayStartTime = new Date().getTime();\r\n            requestAnimationFrame(() => {\r\n              run();\r\n            });\r\n          }\r\n        };\r\n        if (delay > 0) {\r\n          clearTimeout(timeout);\r\n          timeout = setTimeout(() => {\r\n            proceed();\r\n          }, delay);\r\n        } else {\r\n          requestAnimationFrame(() => {\r\n            proceed();\r\n          });\r\n        }\r\n\r\n        // eslint-disable-next-line\r\n        return delay;\r\n      };\r\n      const start = () => {\r\n        swiper.autoplay.running = true;\r\n        run();\r\n        emit('autoplayStart');\r\n      };\r\n      const stop = () => {\r\n        swiper.autoplay.running = false;\r\n        clearTimeout(timeout);\r\n        cancelAnimationFrame(raf);\r\n        emit('autoplayStop');\r\n      };\r\n      const pause = (internal, reset) => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        clearTimeout(timeout);\r\n        if (!internal) {\r\n          pausedByInteraction = true;\r\n        }\r\n        const proceed = () => {\r\n          emit('autoplayPause');\r\n          if (swiper.params.autoplay.waitForTransition) {\r\n            swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\r\n          } else {\r\n            resume();\r\n          }\r\n        };\r\n        swiper.autoplay.paused = true;\r\n        if (reset) {\r\n          if (slideChanged) {\r\n            autoplayTimeLeft = swiper.params.autoplay.delay;\r\n          }\r\n          slideChanged = false;\r\n          proceed();\r\n          return;\r\n        }\r\n        const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\r\n        autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\r\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\r\n        if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\r\n        proceed();\r\n      };\r\n      const resume = () => {\r\n        if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\r\n        autoplayStartTime = new Date().getTime();\r\n        if (pausedByInteraction) {\r\n          pausedByInteraction = false;\r\n          run(autoplayTimeLeft);\r\n        } else {\r\n          run();\r\n        }\r\n        swiper.autoplay.paused = false;\r\n        emit('autoplayResume');\r\n      };\r\n      const onVisibilityChange = () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        const document = getDocument();\r\n        if (document.visibilityState === 'hidden') {\r\n          pausedByInteraction = true;\r\n          pause(true);\r\n        }\r\n        if (document.visibilityState === 'visible') {\r\n          resume();\r\n        }\r\n      };\r\n      const onPointerEnter = e => {\r\n        if (e.pointerType !== 'mouse') return;\r\n        pausedByInteraction = true;\r\n        pause(true);\r\n      };\r\n      const onPointerLeave = e => {\r\n        if (e.pointerType !== 'mouse') return;\r\n        if (swiper.autoplay.paused) {\r\n          resume();\r\n        }\r\n      };\r\n      const attachMouseEvents = () => {\r\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\r\n          swiper.el.addEventListener('pointerenter', onPointerEnter);\r\n          swiper.el.addEventListener('pointerleave', onPointerLeave);\r\n        }\r\n      };\r\n      const detachMouseEvents = () => {\r\n        swiper.el.removeEventListener('pointerenter', onPointerEnter);\r\n        swiper.el.removeEventListener('pointerleave', onPointerLeave);\r\n      };\r\n      const attachDocumentEvents = () => {\r\n        const document = getDocument();\r\n        document.addEventListener('visibilitychange', onVisibilityChange);\r\n      };\r\n      const detachDocumentEvents = () => {\r\n        const document = getDocument();\r\n        document.removeEventListener('visibilitychange', onVisibilityChange);\r\n      };\r\n      on('init', () => {\r\n        if (swiper.params.autoplay.enabled) {\r\n          attachMouseEvents();\r\n          attachDocumentEvents();\r\n          autoplayStartTime = new Date().getTime();\r\n          start();\r\n        }\r\n      });\r\n      on('destroy', () => {\r\n        detachMouseEvents();\r\n        detachDocumentEvents();\r\n        if (swiper.autoplay.running) {\r\n          stop();\r\n        }\r\n      });\r\n      on('beforeTransitionStart', (_s, speed, internal) => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          pause(true, true);\r\n        } else {\r\n          stop();\r\n        }\r\n      });\r\n      on('sliderFirstMove', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          stop();\r\n          return;\r\n        }\r\n        isTouched = true;\r\n        pausedByTouch = false;\r\n        pausedByInteraction = false;\r\n        touchStartTimeout = setTimeout(() => {\r\n          pausedByInteraction = true;\r\n          pausedByTouch = true;\r\n          pause(true);\r\n        }, 200);\r\n      });\r\n      on('touchEnd', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\r\n        clearTimeout(touchStartTimeout);\r\n        clearTimeout(timeout);\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          pausedByTouch = false;\r\n          isTouched = false;\r\n          return;\r\n        }\r\n        if (pausedByTouch && swiper.params.cssMode) resume();\r\n        pausedByTouch = false;\r\n        isTouched = false;\r\n      });\r\n      on('slideChange', () => {\r\n        if (swiper.destroyed || !swiper.autoplay.running) return;\r\n        slideChanged = true;\r\n      });\r\n      Object.assign(swiper.autoplay, {\r\n        start,\r\n        stop,\r\n        pause,\r\n        resume\r\n      });\r\n    }\r\n\r\n    function Thumb(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        thumbs: {\r\n          swiper: null,\r\n          multipleActiveThumbs: true,\r\n          autoScrollOffset: 0,\r\n          slideThumbActiveClass: 'swiper-slide-thumb-active',\r\n          thumbsContainerClass: 'swiper-thumbs'\r\n        }\r\n      });\r\n      let initialized = false;\r\n      let swiperCreated = false;\r\n      swiper.thumbs = {\r\n        swiper: null\r\n      };\r\n      function onThumbClick() {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        const clickedIndex = thumbsSwiper.clickedIndex;\r\n        const clickedSlide = thumbsSwiper.clickedSlide;\r\n        if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\r\n        if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\r\n        let slideToIndex;\r\n        if (thumbsSwiper.params.loop) {\r\n          slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\r\n        } else {\r\n          slideToIndex = clickedIndex;\r\n        }\r\n        if (swiper.params.loop) {\r\n          swiper.slideToLoop(slideToIndex);\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      }\r\n      function init() {\r\n        const {\r\n          thumbs: thumbsParams\r\n        } = swiper.params;\r\n        if (initialized) return false;\r\n        initialized = true;\r\n        const SwiperClass = swiper.constructor;\r\n        if (thumbsParams.swiper instanceof SwiperClass) {\r\n          swiper.thumbs.swiper = thumbsParams.swiper;\r\n          Object.assign(swiper.thumbs.swiper.originalParams, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          Object.assign(swiper.thumbs.swiper.params, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          swiper.thumbs.swiper.update();\r\n        } else if (isObject(thumbsParams.swiper)) {\r\n          const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\r\n          Object.assign(thumbsSwiperParams, {\r\n            watchSlidesProgress: true,\r\n            slideToClickedSlide: false\r\n          });\r\n          swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\r\n          swiperCreated = true;\r\n        }\r\n        swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\r\n        swiper.thumbs.swiper.on('tap', onThumbClick);\r\n        return true;\r\n      }\r\n      function update(initial) {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\r\n\r\n        // Activate thumbs\r\n        let thumbsToActivate = 1;\r\n        const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\r\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\r\n          thumbsToActivate = swiper.params.slidesPerView;\r\n        }\r\n        if (!swiper.params.thumbs.multipleActiveThumbs) {\r\n          thumbsToActivate = 1;\r\n        }\r\n        thumbsToActivate = Math.floor(thumbsToActivate);\r\n        thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\r\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\r\n          for (let i = 0; i < thumbsToActivate; i += 1) {\r\n            elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\r\n              slideEl.classList.add(thumbActiveClass);\r\n            });\r\n          }\r\n        } else {\r\n          for (let i = 0; i < thumbsToActivate; i += 1) {\r\n            if (thumbsSwiper.slides[swiper.realIndex + i]) {\r\n              thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\r\n            }\r\n          }\r\n        }\r\n        const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\r\n        const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\r\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\r\n          const currentThumbsIndex = thumbsSwiper.activeIndex;\r\n          let newThumbsIndex;\r\n          let direction;\r\n          if (thumbsSwiper.params.loop) {\r\n            const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\r\n            newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\r\n            direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\r\n          } else {\r\n            newThumbsIndex = swiper.realIndex;\r\n            direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\r\n          }\r\n          if (useOffset) {\r\n            newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\r\n          }\r\n          if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\r\n            if (thumbsSwiper.params.centeredSlides) {\r\n              if (newThumbsIndex > currentThumbsIndex) {\r\n                newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\r\n              } else {\r\n                newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\r\n              }\r\n            } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) ;\r\n            thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\r\n          }\r\n        }\r\n      }\r\n      on('beforeInit', () => {\r\n        const {\r\n          thumbs\r\n        } = swiper.params;\r\n        if (!thumbs || !thumbs.swiper) return;\r\n        if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\r\n          const document = getDocument();\r\n          const getThumbsElementAndInit = () => {\r\n            const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\r\n            if (thumbsElement && thumbsElement.swiper) {\r\n              thumbs.swiper = thumbsElement.swiper;\r\n              init();\r\n              update(true);\r\n            } else if (thumbsElement) {\r\n              const onThumbsSwiper = e => {\r\n                thumbs.swiper = e.detail[0];\r\n                thumbsElement.removeEventListener('init', onThumbsSwiper);\r\n                init();\r\n                update(true);\r\n                thumbs.swiper.update();\r\n                swiper.update();\r\n              };\r\n              thumbsElement.addEventListener('init', onThumbsSwiper);\r\n            }\r\n            return thumbsElement;\r\n          };\r\n          const watchForThumbsToAppear = () => {\r\n            if (swiper.destroyed) return;\r\n            const thumbsElement = getThumbsElementAndInit();\r\n            if (!thumbsElement) {\r\n              requestAnimationFrame(watchForThumbsToAppear);\r\n            }\r\n          };\r\n          requestAnimationFrame(watchForThumbsToAppear);\r\n        } else {\r\n          init();\r\n          update(true);\r\n        }\r\n      });\r\n      on('slideChange update resize observerUpdate', () => {\r\n        update();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        thumbsSwiper.setTransition(duration);\r\n      });\r\n      on('beforeDestroy', () => {\r\n        const thumbsSwiper = swiper.thumbs.swiper;\r\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n        if (swiperCreated) {\r\n          thumbsSwiper.destroy();\r\n        }\r\n      });\r\n      Object.assign(swiper.thumbs, {\r\n        init,\r\n        update\r\n      });\r\n    }\r\n\r\n    function freeMode(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        emit,\r\n        once\r\n      } = _ref;\r\n      extendParams({\r\n        freeMode: {\r\n          enabled: false,\r\n          momentum: true,\r\n          momentumRatio: 1,\r\n          momentumBounce: true,\r\n          momentumBounceRatio: 1,\r\n          momentumVelocityRatio: 1,\r\n          sticky: false,\r\n          minimumVelocity: 0.02\r\n        }\r\n      });\r\n      function onTouchStart() {\r\n        const translate = swiper.getTranslate();\r\n        swiper.setTranslate(translate);\r\n        swiper.setTransition(0);\r\n        swiper.touchEventsData.velocities.length = 0;\r\n        swiper.freeMode.onTouchEnd({\r\n          currentPos: swiper.rtl ? swiper.translate : -swiper.translate\r\n        });\r\n      }\r\n      function onTouchMove() {\r\n        const {\r\n          touchEventsData: data,\r\n          touches\r\n        } = swiper;\r\n        // Velocity\r\n        if (data.velocities.length === 0) {\r\n          data.velocities.push({\r\n            position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n            time: data.touchStartTime\r\n          });\r\n        }\r\n        data.velocities.push({\r\n          position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n          time: now()\r\n        });\r\n      }\r\n      function onTouchEnd(_ref2) {\r\n        let {\r\n          currentPos\r\n        } = _ref2;\r\n        const {\r\n          params,\r\n          wrapperEl,\r\n          rtlTranslate: rtl,\r\n          snapGrid,\r\n          touchEventsData: data\r\n        } = swiper;\r\n        // Time diff\r\n        const touchEndTime = now();\r\n        const timeDiff = touchEndTime - data.touchStartTime;\r\n        if (currentPos < -swiper.minTranslate()) {\r\n          swiper.slideTo(swiper.activeIndex);\r\n          return;\r\n        }\r\n        if (currentPos > -swiper.maxTranslate()) {\r\n          if (swiper.slides.length < snapGrid.length) {\r\n            swiper.slideTo(snapGrid.length - 1);\r\n          } else {\r\n            swiper.slideTo(swiper.slides.length - 1);\r\n          }\r\n          return;\r\n        }\r\n        if (params.freeMode.momentum) {\r\n          if (data.velocities.length > 1) {\r\n            const lastMoveEvent = data.velocities.pop();\r\n            const velocityEvent = data.velocities.pop();\r\n            const distance = lastMoveEvent.position - velocityEvent.position;\r\n            const time = lastMoveEvent.time - velocityEvent.time;\r\n            swiper.velocity = distance / time;\r\n            swiper.velocity /= 2;\r\n            if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\r\n              swiper.velocity = 0;\r\n            }\r\n            // this implies that the user stopped moving a finger then released.\r\n            // There would be no events with distance zero, so the last event is stale.\r\n            if (time > 150 || now() - lastMoveEvent.time > 300) {\r\n              swiper.velocity = 0;\r\n            }\r\n          } else {\r\n            swiper.velocity = 0;\r\n          }\r\n          swiper.velocity *= params.freeMode.momentumVelocityRatio;\r\n          data.velocities.length = 0;\r\n          let momentumDuration = 1000 * params.freeMode.momentumRatio;\r\n          const momentumDistance = swiper.velocity * momentumDuration;\r\n          let newPosition = swiper.translate + momentumDistance;\r\n          if (rtl) newPosition = -newPosition;\r\n          let doBounce = false;\r\n          let afterBouncePosition;\r\n          const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\r\n          let needsLoopFix;\r\n          if (newPosition < swiper.maxTranslate()) {\r\n            if (params.freeMode.momentumBounce) {\r\n              if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n                newPosition = swiper.maxTranslate() - bounceAmount;\r\n              }\r\n              afterBouncePosition = swiper.maxTranslate();\r\n              doBounce = true;\r\n              data.allowMomentumBounce = true;\r\n            } else {\r\n              newPosition = swiper.maxTranslate();\r\n            }\r\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n          } else if (newPosition > swiper.minTranslate()) {\r\n            if (params.freeMode.momentumBounce) {\r\n              if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n                newPosition = swiper.minTranslate() + bounceAmount;\r\n              }\r\n              afterBouncePosition = swiper.minTranslate();\r\n              doBounce = true;\r\n              data.allowMomentumBounce = true;\r\n            } else {\r\n              newPosition = swiper.minTranslate();\r\n            }\r\n            if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n          } else if (params.freeMode.sticky) {\r\n            let nextSlide;\r\n            for (let j = 0; j < snapGrid.length; j += 1) {\r\n              if (snapGrid[j] > -newPosition) {\r\n                nextSlide = j;\r\n                break;\r\n              }\r\n            }\r\n            if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n              newPosition = snapGrid[nextSlide];\r\n            } else {\r\n              newPosition = snapGrid[nextSlide - 1];\r\n            }\r\n            newPosition = -newPosition;\r\n          }\r\n          if (needsLoopFix) {\r\n            once('transitionEnd', () => {\r\n              swiper.loopFix();\r\n            });\r\n          }\r\n          // Fix duration\r\n          if (swiper.velocity !== 0) {\r\n            if (rtl) {\r\n              momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n            } else {\r\n              momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n            }\r\n            if (params.freeMode.sticky) {\r\n              // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\r\n              // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n              // It's easy to see this when simulating touch with mouse events. To fix this,\r\n              // limit single-slide swipes to the default slide duration. This also has the\r\n              // nice side effect of matching slide speed if the user stopped moving before\r\n              // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n              // For faster swipes, also apply limits (albeit higher ones).\r\n              const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n              const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n              if (moveDistance < currentSlideSize) {\r\n                momentumDuration = params.speed;\r\n              } else if (moveDistance < 2 * currentSlideSize) {\r\n                momentumDuration = params.speed * 1.5;\r\n              } else {\r\n                momentumDuration = params.speed * 2.5;\r\n              }\r\n            }\r\n          } else if (params.freeMode.sticky) {\r\n            swiper.slideToClosest();\r\n            return;\r\n          }\r\n          if (params.freeMode.momentumBounce && doBounce) {\r\n            swiper.updateProgress(afterBouncePosition);\r\n            swiper.setTransition(momentumDuration);\r\n            swiper.setTranslate(newPosition);\r\n            swiper.transitionStart(true, swiper.swipeDirection);\r\n            swiper.animating = true;\r\n            elementTransitionEnd(wrapperEl, () => {\r\n              if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n              emit('momentumBounce');\r\n              swiper.setTransition(params.speed);\r\n              setTimeout(() => {\r\n                swiper.setTranslate(afterBouncePosition);\r\n                elementTransitionEnd(wrapperEl, () => {\r\n                  if (!swiper || swiper.destroyed) return;\r\n                  swiper.transitionEnd();\r\n                });\r\n              }, 0);\r\n            });\r\n          } else if (swiper.velocity) {\r\n            emit('_freeModeNoMomentumRelease');\r\n            swiper.updateProgress(newPosition);\r\n            swiper.setTransition(momentumDuration);\r\n            swiper.setTranslate(newPosition);\r\n            swiper.transitionStart(true, swiper.swipeDirection);\r\n            if (!swiper.animating) {\r\n              swiper.animating = true;\r\n              elementTransitionEnd(wrapperEl, () => {\r\n                if (!swiper || swiper.destroyed) return;\r\n                swiper.transitionEnd();\r\n              });\r\n            }\r\n          } else {\r\n            swiper.updateProgress(newPosition);\r\n          }\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        } else if (params.freeMode.sticky) {\r\n          swiper.slideToClosest();\r\n          return;\r\n        } else if (params.freeMode) {\r\n          emit('_freeModeNoMomentumRelease');\r\n        }\r\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\r\n          swiper.updateProgress();\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n        }\r\n      }\r\n      Object.assign(swiper, {\r\n        freeMode: {\r\n          onTouchStart,\r\n          onTouchMove,\r\n          onTouchEnd\r\n        }\r\n      });\r\n    }\r\n\r\n    function Grid(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams\r\n      } = _ref;\r\n      extendParams({\r\n        grid: {\r\n          rows: 1,\r\n          fill: 'column'\r\n        }\r\n      });\r\n      let slidesNumberEvenToRows;\r\n      let slidesPerRow;\r\n      let numFullColumns;\r\n      const initSlides = slidesLength => {\r\n        const {\r\n          slidesPerView\r\n        } = swiper.params;\r\n        const {\r\n          rows,\r\n          fill\r\n        } = swiper.params.grid;\r\n        slidesPerRow = slidesNumberEvenToRows / rows;\r\n        numFullColumns = Math.floor(slidesLength / rows);\r\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) {\r\n          slidesNumberEvenToRows = slidesLength;\r\n        } else {\r\n          slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\r\n        }\r\n        if (slidesPerView !== 'auto' && fill === 'row') {\r\n          slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\r\n        }\r\n      };\r\n      const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\r\n        const {\r\n          slidesPerGroup,\r\n          spaceBetween\r\n        } = swiper.params;\r\n        const {\r\n          rows,\r\n          fill\r\n        } = swiper.params.grid;\r\n        // Set slides order\r\n        let newSlideOrderIndex;\r\n        let column;\r\n        let row;\r\n        if (fill === 'row' && slidesPerGroup > 1) {\r\n          const groupIndex = Math.floor(i / (slidesPerGroup * rows));\r\n          const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\r\n          const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\r\n          row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n          column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\r\n          newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\r\n          slide.style.order = newSlideOrderIndex;\r\n        } else if (fill === 'column') {\r\n          column = Math.floor(i / rows);\r\n          row = i - column * rows;\r\n          if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\r\n            row += 1;\r\n            if (row >= rows) {\r\n              row = 0;\r\n              column += 1;\r\n            }\r\n          }\r\n        } else {\r\n          row = Math.floor(i / slidesPerRow);\r\n          column = i - row * slidesPerRow;\r\n        }\r\n        slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\r\n      };\r\n      const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\r\n        const {\r\n          spaceBetween,\r\n          centeredSlides,\r\n          roundLengths\r\n        } = swiper.params;\r\n        const {\r\n          rows\r\n        } = swiper.params.grid;\r\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\r\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\r\n        swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\r\n        if (centeredSlides) {\r\n          const newSlidesGrid = [];\r\n          for (let i = 0; i < snapGrid.length; i += 1) {\r\n            let slidesGridItem = snapGrid[i];\r\n            if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n            if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n          }\r\n          snapGrid.splice(0, snapGrid.length);\r\n          snapGrid.push(...newSlidesGrid);\r\n        }\r\n      };\r\n      swiper.grid = {\r\n        initSlides,\r\n        updateSlide,\r\n        updateWrapperSize\r\n      };\r\n    }\r\n\r\n    function appendSlide(slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slidesEl\r\n      } = swiper;\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      }\r\n      const appendElement = slideEl => {\r\n        if (typeof slideEl === 'string') {\r\n          const tempDOM = document.createElement('div');\r\n          tempDOM.innerHTML = slideEl;\r\n          slidesEl.append(tempDOM.children[0]);\r\n          tempDOM.innerHTML = '';\r\n        } else {\r\n          slidesEl.append(slideEl);\r\n        }\r\n      };\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) appendElement(slides[i]);\r\n        }\r\n      } else {\r\n        appendElement(slides);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n    }\r\n\r\n    function prependSlide(slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex,\r\n        slidesEl\r\n      } = swiper;\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      }\r\n      let newActiveIndex = activeIndex + 1;\r\n      const prependElement = slideEl => {\r\n        if (typeof slideEl === 'string') {\r\n          const tempDOM = document.createElement('div');\r\n          tempDOM.innerHTML = slideEl;\r\n          slidesEl.prepend(tempDOM.children[0]);\r\n          tempDOM.innerHTML = '';\r\n        } else {\r\n          slidesEl.prepend(slideEl);\r\n        }\r\n      };\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) prependElement(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndex + slides.length;\r\n      } else {\r\n        prependElement(slides);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n\r\n    function addSlide(index, slides) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex,\r\n        slidesEl\r\n      } = swiper;\r\n      let activeIndexBuffer = activeIndex;\r\n      if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n        swiper.recalcSlides();\r\n      }\r\n      const baseLength = swiper.slides.length;\r\n      if (index <= 0) {\r\n        swiper.prependSlide(slides);\r\n        return;\r\n      }\r\n      if (index >= baseLength) {\r\n        swiper.appendSlide(slides);\r\n        return;\r\n      }\r\n      let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n      const slidesBuffer = [];\r\n      for (let i = baseLength - 1; i >= index; i -= 1) {\r\n        const currentSlide = swiper.slides[i];\r\n        currentSlide.remove();\r\n        slidesBuffer.unshift(currentSlide);\r\n      }\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) slidesEl.append(slides[i]);\r\n        }\r\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n      } else {\r\n        slidesEl.append(slides);\r\n      }\r\n      for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n        slidesEl.append(slidesBuffer[i]);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n      } else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n      }\r\n    }\r\n\r\n    function removeSlide(slidesIndexes) {\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        activeIndex\r\n      } = swiper;\r\n      let activeIndexBuffer = activeIndex;\r\n      if (params.loop) {\r\n        activeIndexBuffer -= swiper.loopedSlides;\r\n        swiper.loopDestroy();\r\n      }\r\n      let newActiveIndex = activeIndexBuffer;\r\n      let indexToRemove;\r\n      if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n        for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n          indexToRemove = slidesIndexes[i];\r\n          if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\r\n          if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n        }\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n      } else {\r\n        indexToRemove = slidesIndexes;\r\n        if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\r\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n        newActiveIndex = Math.max(newActiveIndex, 0);\r\n      }\r\n      swiper.recalcSlides();\r\n      if (params.loop) {\r\n        swiper.loopCreate();\r\n      }\r\n      if (!params.observer || swiper.isElement) {\r\n        swiper.update();\r\n      }\r\n      if (params.loop) {\r\n        swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n      } else {\r\n        swiper.slideTo(newActiveIndex, 0, false);\r\n      }\r\n    }\r\n\r\n    function removeAllSlides() {\r\n      const swiper = this;\r\n      const slidesIndexes = [];\r\n      for (let i = 0; i < swiper.slides.length; i += 1) {\r\n        slidesIndexes.push(i);\r\n      }\r\n      swiper.removeSlide(slidesIndexes);\r\n    }\r\n\r\n    function Manipulation(_ref) {\r\n      let {\r\n        swiper\r\n      } = _ref;\r\n      Object.assign(swiper, {\r\n        appendSlide: appendSlide.bind(swiper),\r\n        prependSlide: prependSlide.bind(swiper),\r\n        addSlide: addSlide.bind(swiper),\r\n        removeSlide: removeSlide.bind(swiper),\r\n        removeAllSlides: removeAllSlides.bind(swiper)\r\n      });\r\n    }\r\n\r\n    function effectInit(params) {\r\n      const {\r\n        effect,\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        overwriteParams,\r\n        perspective,\r\n        recreateShadows,\r\n        getEffectParams\r\n      } = params;\r\n      on('beforeInit', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\r\n        if (perspective && perspective()) {\r\n          swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\r\n        }\r\n        const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\r\n        Object.assign(swiper.params, overwriteParamsResult);\r\n        Object.assign(swiper.originalParams, overwriteParamsResult);\r\n      });\r\n      on('setTranslate', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        setTranslate();\r\n      });\r\n      on('setTransition', (_s, duration) => {\r\n        if (swiper.params.effect !== effect) return;\r\n        setTransition(duration);\r\n      });\r\n      on('transitionEnd', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        if (recreateShadows) {\r\n          if (!getEffectParams || !getEffectParams().slideShadows) return;\r\n          // remove shadows\r\n          swiper.slides.forEach(slideEl => {\r\n            slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\r\n          });\r\n          // create new one\r\n          recreateShadows();\r\n        }\r\n      });\r\n      let requireUpdateOnVirtual;\r\n      on('virtualUpdate', () => {\r\n        if (swiper.params.effect !== effect) return;\r\n        if (!swiper.slides.length) {\r\n          requireUpdateOnVirtual = true;\r\n        }\r\n        requestAnimationFrame(() => {\r\n          if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\r\n            setTranslate();\r\n            requireUpdateOnVirtual = false;\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function effectTarget(effectParams, slideEl) {\r\n      const transformEl = getSlideTransformEl(slideEl);\r\n      if (transformEl !== slideEl) {\r\n        transformEl.style.backfaceVisibility = 'hidden';\r\n        transformEl.style['-webkit-backface-visibility'] = 'hidden';\r\n      }\r\n      return transformEl;\r\n    }\r\n\r\n    function effectVirtualTransitionEnd(_ref) {\r\n      let {\r\n        swiper,\r\n        duration,\r\n        transformElements,\r\n        allSlides\r\n      } = _ref;\r\n      const {\r\n        activeIndex\r\n      } = swiper;\r\n      const getSlide = el => {\r\n        if (!el.parentElement) {\r\n          // assume shadow root\r\n          const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\r\n          return slide;\r\n        }\r\n        return el.parentElement;\r\n      };\r\n      if (swiper.params.virtualTranslate && duration !== 0) {\r\n        let eventTriggered = false;\r\n        let transitionEndTarget;\r\n        if (allSlides) {\r\n          transitionEndTarget = transformElements;\r\n        } else {\r\n          transitionEndTarget = transformElements.filter(transformEl => {\r\n            const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\r\n            return elementIndex(el) === activeIndex;\r\n          });\r\n        }\r\n        transitionEndTarget.forEach(el => {\r\n          elementTransitionEnd(el, () => {\r\n            if (eventTriggered) return;\r\n            if (!swiper || swiper.destroyed) return;\r\n            eventTriggered = true;\r\n            swiper.animating = false;\r\n            const evt = new window.CustomEvent('transitionend', {\r\n              bubbles: true,\r\n              cancelable: true\r\n            });\r\n            swiper.wrapperEl.dispatchEvent(evt);\r\n          });\r\n        });\r\n      }\r\n    }\r\n\r\n    function EffectFade(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        fadeEffect: {\r\n          crossFade: false\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          slides\r\n        } = swiper;\r\n        const params = swiper.params.fadeEffect;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = swiper.slides[i];\r\n          const offset = slideEl.swiperSlideOffset;\r\n          let tx = -offset;\r\n          if (!swiper.params.virtualTranslate) tx -= swiper.translate;\r\n          let ty = 0;\r\n          if (!swiper.isHorizontal()) {\r\n            ty = tx;\r\n            tx = 0;\r\n          }\r\n          const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.opacity = slideOpacity;\r\n          targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements,\r\n          allSlides: true\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'fade',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          spaceBetween: 0,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCube(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        cubeEffect: {\r\n          slideShadows: true,\r\n          shadow: true,\r\n          shadowOffset: 20,\r\n          shadowScale: 0.94\r\n        }\r\n      });\r\n      const createSlideShadows = (slideEl, progress, isHorizontal) => {\r\n        let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n        let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n        if (!shadowBefore) {\r\n          shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\r\n          slideEl.append(shadowBefore);\r\n        }\r\n        if (!shadowAfter) {\r\n          shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\r\n          slideEl.append(shadowAfter);\r\n        }\r\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\r\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\r\n      };\r\n      const recreateShadows = () => {\r\n        // create new ones\r\n        const isHorizontal = swiper.isHorizontal();\r\n        swiper.slides.forEach(slideEl => {\r\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          createSlideShadows(slideEl, progress, isHorizontal);\r\n        });\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          el,\r\n          wrapperEl,\r\n          slides,\r\n          width: swiperWidth,\r\n          height: swiperHeight,\r\n          rtlTranslate: rtl,\r\n          size: swiperSize,\r\n          browser\r\n        } = swiper;\r\n        const params = swiper.params.cubeEffect;\r\n        const isHorizontal = swiper.isHorizontal();\r\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n        let wrapperRotate = 0;\r\n        let cubeShadowEl;\r\n        if (params.shadow) {\r\n          if (isHorizontal) {\r\n            cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\r\n            if (!cubeShadowEl) {\r\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\r\n              swiper.slidesEl.append(cubeShadowEl);\r\n            }\r\n            cubeShadowEl.style.height = `${swiperWidth}px`;\r\n          } else {\r\n            cubeShadowEl = el.querySelector('.swiper-cube-shadow');\r\n            if (!cubeShadowEl) {\r\n              cubeShadowEl = createElement('div', 'swiper-cube-shadow');\r\n              el.append(cubeShadowEl);\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          let slideIndex = i;\r\n          if (isVirtual) {\r\n            slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\r\n          }\r\n          let slideAngle = slideIndex * 90;\r\n          let round = Math.floor(slideAngle / 360);\r\n          if (rtl) {\r\n            slideAngle = -slideAngle;\r\n            round = Math.floor(-slideAngle / 360);\r\n          }\r\n          const progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          let tx = 0;\r\n          let ty = 0;\r\n          let tz = 0;\r\n          if (slideIndex % 4 === 0) {\r\n            tx = -round * 4 * swiperSize;\r\n            tz = 0;\r\n          } else if ((slideIndex - 1) % 4 === 0) {\r\n            tx = 0;\r\n            tz = -round * 4 * swiperSize;\r\n          } else if ((slideIndex - 2) % 4 === 0) {\r\n            tx = swiperSize + round * 4 * swiperSize;\r\n            tz = swiperSize;\r\n          } else if ((slideIndex - 3) % 4 === 0) {\r\n            tx = -swiperSize;\r\n            tz = 3 * swiperSize + swiperSize * 4 * round;\r\n          }\r\n          if (rtl) {\r\n            tx = -tx;\r\n          }\r\n          if (!isHorizontal) {\r\n            ty = tx;\r\n            tx = 0;\r\n          }\r\n          const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\r\n          if (progress <= 1 && progress > -1) {\r\n            wrapperRotate = slideIndex * 90 + progress * 90;\r\n            if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\r\n          }\r\n          slideEl.style.transform = transform;\r\n          if (params.slideShadows) {\r\n            createSlideShadows(slideEl, progress, isHorizontal);\r\n          }\r\n        }\r\n        wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\r\n        wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\r\n        if (params.shadow) {\r\n          if (isHorizontal) {\r\n            cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\r\n          } else {\r\n            const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\r\n            const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\r\n            const scale1 = params.shadowScale;\r\n            const scale2 = params.shadowScale / multiplier;\r\n            const offset = params.shadowOffset;\r\n            cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\r\n          }\r\n        }\r\n        const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\r\n        wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\r\n        wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\r\n      };\r\n      const setTransition = duration => {\r\n        const {\r\n          el,\r\n          slides\r\n        } = swiper;\r\n        slides.forEach(slideEl => {\r\n          slideEl.style.transitionDuration = `${duration}ms`;\r\n          slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\r\n            subEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\r\n          const shadowEl = el.querySelector('.swiper-cube-shadow');\r\n          if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\r\n        }\r\n      };\r\n      effectInit({\r\n        effect: 'cube',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        recreateShadows,\r\n        getEffectParams: () => swiper.params.cubeEffect,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          resistanceRatio: 0,\r\n          spaceBetween: 0,\r\n          centeredSlides: false,\r\n          virtualTranslate: true\r\n        })\r\n      });\r\n    }\r\n\r\n    function createShadow(params, slideEl, side) {\r\n      const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\r\n      const shadowContainer = getSlideTransformEl(slideEl);\r\n      let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\r\n      if (!shadowEl) {\r\n        shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\r\n        shadowContainer.append(shadowEl);\r\n      }\r\n      return shadowEl;\r\n    }\r\n\r\n    function EffectFlip(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        flipEffect: {\r\n          slideShadows: true,\r\n          limitRotation: true\r\n        }\r\n      });\r\n      const createSlideShadows = (slideEl, progress, params) => {\r\n        let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n        let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n        if (!shadowBefore) {\r\n          shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\r\n        }\r\n        if (!shadowAfter) {\r\n          shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\r\n        }\r\n        if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\r\n        if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\r\n      };\r\n      const recreateShadows = () => {\r\n        // Set shadows\r\n        const params = swiper.params.flipEffect;\r\n        swiper.slides.forEach(slideEl => {\r\n          let progress = slideEl.progress;\r\n          if (swiper.params.flipEffect.limitRotation) {\r\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          }\r\n          createSlideShadows(slideEl, progress, params);\r\n        });\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          rtlTranslate: rtl\r\n        } = swiper;\r\n        const params = swiper.params.flipEffect;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          let progress = slideEl.progress;\r\n          if (swiper.params.flipEffect.limitRotation) {\r\n            progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n          }\r\n          const offset = slideEl.swiperSlideOffset;\r\n          const rotate = -180 * progress;\r\n          let rotateY = rotate;\r\n          let rotateX = 0;\r\n          let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n          let ty = 0;\r\n          if (!swiper.isHorizontal()) {\r\n            ty = tx;\r\n            tx = 0;\r\n            rotateX = -rotateY;\r\n            rotateY = 0;\r\n          } else if (rtl) {\r\n            rotateY = -rotateY;\r\n          }\r\n          slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\r\n          if (params.slideShadows) {\r\n            createSlideShadows(slideEl, progress, params);\r\n          }\r\n          const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'flip',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        recreateShadows,\r\n        getEffectParams: () => swiper.params.flipEffect,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          slidesPerView: 1,\r\n          slidesPerGroup: 1,\r\n          watchSlidesProgress: true,\r\n          spaceBetween: 0,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCoverflow(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        coverflowEffect: {\r\n          rotate: 50,\r\n          stretch: 0,\r\n          depth: 100,\r\n          scale: 1,\r\n          modifier: 1,\r\n          slideShadows: true\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          width: swiperWidth,\r\n          height: swiperHeight,\r\n          slides,\r\n          slidesSizesGrid\r\n        } = swiper;\r\n        const params = swiper.params.coverflowEffect;\r\n        const isHorizontal = swiper.isHorizontal();\r\n        const transform = swiper.translate;\r\n        const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\r\n        const rotate = isHorizontal ? params.rotate : -params.rotate;\r\n        const translate = params.depth;\r\n        // Each slide offset from center\r\n        for (let i = 0, length = slides.length; i < length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideSize = slidesSizesGrid[i];\r\n          const slideOffset = slideEl.swiperSlideOffset;\r\n          const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\r\n          const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\r\n          let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\r\n          let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\r\n          // var rotateZ = 0\r\n          let translateZ = -translate * Math.abs(offsetMultiplier);\r\n          let stretch = params.stretch;\r\n          // Allow percentage to make a relative stretch for responsive sliders\r\n          if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\r\n            stretch = parseFloat(params.stretch) / 100 * slideSize;\r\n          }\r\n          let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\r\n          let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\r\n          let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\r\n\r\n          // Fix for ultra small values\r\n          if (Math.abs(translateX) < 0.001) translateX = 0;\r\n          if (Math.abs(translateY) < 0.001) translateY = 0;\r\n          if (Math.abs(translateZ) < 0.001) translateZ = 0;\r\n          if (Math.abs(rotateY) < 0.001) rotateY = 0;\r\n          if (Math.abs(rotateX) < 0.001) rotateX = 0;\r\n          if (Math.abs(scale) < 0.001) scale = 0;\r\n          const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = slideTransform;\r\n          slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\r\n          if (params.slideShadows) {\r\n            // Set shadows\r\n            let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\r\n            let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\r\n            if (!shadowBeforeEl) {\r\n              shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\r\n            }\r\n            if (!shadowAfterEl) {\r\n              shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\r\n            }\r\n            if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\r\n            if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\r\n          }\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'coverflow',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCreative(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        creativeEffect: {\r\n          limitProgress: 1,\r\n          shadowPerProgress: false,\r\n          progressMultiplier: 1,\r\n          perspective: true,\r\n          prev: {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            opacity: 1,\r\n            scale: 1\r\n          },\r\n          next: {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            opacity: 1,\r\n            scale: 1\r\n          }\r\n        }\r\n      });\r\n      const getTranslateValue = value => {\r\n        if (typeof value === 'string') return value;\r\n        return `${value}px`;\r\n      };\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          wrapperEl,\r\n          slidesSizesGrid\r\n        } = swiper;\r\n        const params = swiper.params.creativeEffect;\r\n        const {\r\n          progressMultiplier: multiplier\r\n        } = params;\r\n        const isCenteredSlides = swiper.params.centeredSlides;\r\n        if (isCenteredSlides) {\r\n          const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\r\n          wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\r\n        }\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideProgress = slideEl.progress;\r\n          const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\r\n          let originalProgress = progress;\r\n          if (!isCenteredSlides) {\r\n            originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\r\n          }\r\n          const offset = slideEl.swiperSlideOffset;\r\n          const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\r\n          const r = [0, 0, 0];\r\n          let custom = false;\r\n          if (!swiper.isHorizontal()) {\r\n            t[1] = t[0];\r\n            t[0] = 0;\r\n          }\r\n          let data = {\r\n            translate: [0, 0, 0],\r\n            rotate: [0, 0, 0],\r\n            scale: 1,\r\n            opacity: 1\r\n          };\r\n          if (progress < 0) {\r\n            data = params.next;\r\n            custom = true;\r\n          } else if (progress > 0) {\r\n            data = params.prev;\r\n            custom = true;\r\n          }\r\n          // set translate\r\n          t.forEach((value, index) => {\r\n            t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\r\n          });\r\n          // set rotates\r\n          r.forEach((value, index) => {\r\n            r[index] = data.rotate[index] * Math.abs(progress * multiplier);\r\n          });\r\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n          const translateString = t.join(', ');\r\n          const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\r\n          const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\r\n          const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\r\n          const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\r\n\r\n          // Set shadows\r\n          if (custom && data.shadow || !custom) {\r\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\r\n            if (!shadowEl && data.shadow) {\r\n              shadowEl = createShadow(params, slideEl);\r\n            }\r\n            if (shadowEl) {\r\n              const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\r\n              shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\r\n            }\r\n          }\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n          targetEl.style.opacity = opacityString;\r\n          if (data.origin) {\r\n            targetEl.style.transformOrigin = opacityString;\r\n          }\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements,\r\n          allSlides: true\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'creative',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => swiper.params.creativeEffect.perspective,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    function EffectCards(_ref) {\r\n      let {\r\n        swiper,\r\n        extendParams,\r\n        on\r\n      } = _ref;\r\n      extendParams({\r\n        cardsEffect: {\r\n          slideShadows: true,\r\n          rotate: true,\r\n          perSlideRotate: 2,\r\n          perSlideOffset: 8\r\n        }\r\n      });\r\n      const setTranslate = () => {\r\n        const {\r\n          slides,\r\n          activeIndex\r\n        } = swiper;\r\n        const params = swiper.params.cardsEffect;\r\n        const {\r\n          startTranslate,\r\n          isTouched\r\n        } = swiper.touchEventsData;\r\n        const currentTranslate = swiper.translate;\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          const slideEl = slides[i];\r\n          const slideProgress = slideEl.progress;\r\n          const progress = Math.min(Math.max(slideProgress, -4), 4);\r\n          let offset = slideEl.swiperSlideOffset;\r\n          if (swiper.params.centeredSlides && !swiper.params.cssMode) {\r\n            swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\r\n          }\r\n          if (swiper.params.centeredSlides && swiper.params.cssMode) {\r\n            offset -= slides[0].swiperSlideOffset;\r\n          }\r\n          let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n          let tY = 0;\r\n          const tZ = -100 * Math.abs(progress);\r\n          let scale = 1;\r\n          let rotate = -params.perSlideRotate * progress;\r\n          let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\r\n          const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\r\n          const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\r\n          const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\r\n          if (isSwipeToNext || isSwipeToPrev) {\r\n            const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\r\n            rotate += -28 * progress * subProgress;\r\n            scale += -0.5 * subProgress;\r\n            tXAdd += 96 * subProgress;\r\n            tY = `${-25 * subProgress * Math.abs(progress)}%`;\r\n          }\r\n          if (progress < 0) {\r\n            // next\r\n            tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\r\n          } else if (progress > 0) {\r\n            // prev\r\n            tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\r\n          } else {\r\n            tX = `${tX}px`;\r\n          }\r\n          if (!swiper.isHorizontal()) {\r\n            const prevY = tY;\r\n            tY = tX;\r\n            tX = prevY;\r\n          }\r\n          const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\r\n          const transform = `\r\n        translate3d(${tX}, ${tY}, ${tZ}px)\r\n        rotateZ(${params.rotate ? rotate : 0}deg)\r\n        scale(${scaleString})\r\n      `;\r\n          if (params.slideShadows) {\r\n            // Set shadows\r\n            let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\r\n            if (!shadowEl) {\r\n              shadowEl = createShadow(params, slideEl);\r\n            }\r\n            if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\r\n          }\r\n          slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n          const targetEl = effectTarget(params, slideEl);\r\n          targetEl.style.transform = transform;\r\n        }\r\n      };\r\n      const setTransition = duration => {\r\n        const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\r\n        transformElements.forEach(el => {\r\n          el.style.transitionDuration = `${duration}ms`;\r\n          el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\r\n            shadowEl.style.transitionDuration = `${duration}ms`;\r\n          });\r\n        });\r\n        effectVirtualTransitionEnd({\r\n          swiper,\r\n          duration,\r\n          transformElements\r\n        });\r\n      };\r\n      effectInit({\r\n        effect: 'cards',\r\n        swiper,\r\n        on,\r\n        setTranslate,\r\n        setTransition,\r\n        perspective: () => true,\r\n        overwriteParams: () => ({\r\n          watchSlidesProgress: true,\r\n          virtualTranslate: !swiper.params.cssMode\r\n        })\r\n      });\r\n    }\r\n\r\n    // Swiper Class\r\n    const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\r\n    Swiper.use(modules);\r\n\r\n    return Swiper;\r\n\r\n}));\r\n//# sourceMappingURL=swiper-bundle.js.map\r\n","const SLIDER = new Swiper(\".page\",{\r\nwrapperClass: \"page__wrapper\",\r\nslideClass: \"page__screen\",\r\ndirection: 'vertical',\r\nslidesPerView: 'auto',\r\nmousewheel:{\r\n    sensitivity: 1,\r\n},\r\nkeyboard:{\r\n  enabled: true,\r\n  onlyInViewport: true,\r\n  pageUpDown: true,  \r\n},\r\nspeed: 800,\r\nobserver: true,\r\nobserveParents: true,\r\nobserveSlideChildren : true,\r\npagination: {\r\n    el: '.page__pagination',\r\n    type: 'bullets',\r\n    clickable: false,\r\n    bulletClass: \"page__bullet\",\r\n    bulletActiveClass: \"page__bullet_active\",\r\n},\r\nnavigation:{\r\n    nextEl: \".scroll-indicator-next\",\r\n    prevEl: \".scroll-indicator-prew\",\r\n},\r\n});\r\nconst numOfSliders = document.querySelectorAll('.page__screen').length-1;\r\n// колечко стрелочек\r\nconst pointerCircles = document.querySelectorAll('.cls-3');\r\n//Стрелочка вниз\r\n\r\nfunction addActiveClass(item){\r\nitem.forEach(function (e, i) {\r\n   if(!e.classList.contains('active'))\r\n    e.classList.add(\"active\");            \r\n        });\r\n}\r\n\r\n\r\nwindow.addEventListener('load', windowLoad);\r\nfunction windowLoad(){\r\n  addActiveClass(pointerCircles); \r\n\r\n}\r\n\r\nSLIDER.on('slideChange', function () {\r\n  console.log(SLIDER.activeIndex);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}