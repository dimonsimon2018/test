{"version":3,"sources":["swiper-bundle.js","main.js"],"names":["factory","exports","_typeof","module","define","amd","globalThis","self","Swiper","isObject$1","obj","constructor","Object","target","src","keys","forEach","key","length","extend$1","ssrDocument","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","initEvent","createElement","createEvent","childNodes","setAttribute","getElementsByTagName","children","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","getDocument","doc","document","navigator","userAgent","search","history","replaceState","pushState","back","CustomEvent","getComputedStyle","this","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","Image","callback","ssrWindow","cancelAnimationFrame","id","defineProperty","win","window","proto","Dom7","_inherits","_wrapNativeSuper","Array","_super","_createSuper","items","_this","_classCallCheck","call","apply","concat","_toConsumableArray","arrayFilter","__proto__","get","set","arr","value","_possibleConstructorReturn","_createClass","uniqueArray","res","selector","isArray","el","a","push","arrayFlat","getWindow","prototype","$","context","arrayUnique","addClass","classNames","html","trim","indexOf","toCreate","removeClass","_len2","arguments","classes","_key2","tempParent","split","i","_len3","_key3","className","fn","support","deviceCached","browser","Methods","extend","_len4","_len","_key","_key4","map","c","_el$classList","classList","attr","_el$classList2","remove","hasClass","transform","filter","contains","toggleClass","attrName","attrs","toggle","style","transitionDuration","getAttribute","eventType","args","targetSelector","capture","listener","undefined","removeAttr","unshift","handleEvent","eventData","transition","duration","events","on","_len5","dom7Listeners","event","_key5","dom7LiveListeners","e","dom7EventData","is","parents","k","proxyListener","j","handlers","splice","handleLiveEvent","trigger","handler","off","_len6","_key6","cancelable","evt","transitionEnd$1","dom","fireCallBack","outerWidth","includeMargins","dom7proxy","offsetWidth","_len9","_key9","box","getBoundingClientRect","clientLeft","scrollTop","top","detail","bubbles","styles","dataIndex","dispatchEvent","props","prop","parseFloat","getPropertyValue","result","outerHeight","offsetHeight","offset","compareWith","scrollLeft","textContent","clientTop","scrollY","scrollX","left","matches","css","index","child","each","returnIndex","append","tempDiv","appendChild","innerHTML","firstChild","newChild","text","webkitMatchesSelector","msMatchesSelector","nextElementSibling","nextEls","prev","previousElementSibling","previousSibling","nodeType","prevAll","swiper","parent","parentNode","prepend","closest","find","foundElements","insertBefore","next","nextAll","transition$1","eq","methodName","prevEls","object","nextTick","getComputedStyle$1","getTranslate","matrix","curTransform","transformMatrix","WebKitCSSMatrix","isObject","o","found","nextSource","keysArray","to","nextKey","removeChild","smoothScroll","documentElement","touch","passiveListener","now","getSupport","axis","platform","android","screenWidth","screenHeight","height","gestures","currentStyle","match","curStyle","webkitTransform","windows","replace","join","ipad","macos","MozTransform","OTransform","MsTransform","msTransform","toString","device","m41","m42","getDevice","overrides","slice","getBrowser","toLowerCase","HTMLElement","ua","isSafari","node","emit","noExtend","nextIndex","len","desc","getOwnPropertyDescriptor","resizeHandler","destroyed","initialized","__swiper__","createObserver","ResizeObserver","entries","animationFrame","_ref2","observer","varValue","setProperty","varName","isOutOfBound","current","_ref","targetPosition","side","orientationChangeHandler","translate","startTime","params","speed","wrapperEl","scrollSnapType","resizeObserver","cssModeFrameID","startPosition","animate","removeObserver","getTime","time","max","Math","min","extendParams","cos","progress","PI","currentPosition","easeProgress","observers","options","scrollTo","_defineProperty","overflow","mutations","observerUpdate","init","observeParents","containerParents","DocumentTouch","attach","opts","childList","supportsPassive","attributes","destroy","ipod","eventsListeners","ios","onceHandler","width","__emitterProxy","onAny","eventsAnyListeners","os","iphone","data","isWebView","test","transitionEmit","slideToLoop","slideNext","slideToClickedSlide","slidePrev","slideReset","slideToClosest","activeIndex","previousIndex","dir","direction","$wrapperEl","$selector","loopFillGroupWithBlank","runCallbacks","slidesPerGroup","blankNode","step","slidesPerView","loopedSlides","base","detachEvents","isGridEnabled","grid","setBreakpoint","getRootNode","__closestFrom","onResize","allowSlidePrev","snapGrid","isHorizontal","realIndex","allowSlideNext","velocity","updateSlides","touchEvents","desktop","isEnd","isBeginning","centeredSlides","touchEventsTouch","move","autoplay","running","paused","touchEventsDesktop","touchEventsData","isTouched","writable","dummyEventAttached","dummyEventListener","enabled","nested","start","passiveListeners","passive","domMethod","_emitClasses","onTouchMove","end","onTouchEnd","cancel","slideEl","translateTo","updateActiveIndex","updateSlidesClasses","preventClicks","preventClicksPropagation","onClick","cssMode","onScroll","updates","rows","defaults","Virtual","touchEventsTarget","initialSlide","updateOnWindowResize","cache","createElements","renderExternal","focusableElements","renderExternalUpdate","addSlidesAfter","preventInteractionOnTransition","url","from","edgeSwipeDetection","edgeSwipeThreshold","autoHeight","setWrapperSize","virtualTranslate","virtual","effect","$slideEl","breakpoints","breakpointsBase","spaceBetween","slidesPerGroupSkip","slidesPerGroupAuto","addSlidesBefore","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","previousSlidesGrid","centerInsufficientSlides","watchOverflow","roundLengths","touchRatio","touchAngle","slidesAfter","simulateTouch","slidesBefore","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","slidesGrid","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","watchSlidesProgress","grabCursor","lazy","preloadImages","previousFrom","updateOnImagesReady","loop","loopAdditionalSlides","updateProgress","loopedSlidesLimit","loopPreventsSlide","rewind","swipeHandler","slidesToRender","noSwiping","noSwipingClass","noSwipingSelector","maxBackfaceHiddenSlides","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","prototypes","eventsEmitter","clientWidth","method","slideSize","paddingLeft","priority","currentTransform","slide","once","slides","slidePosition","swiperSlideSize","prevSlideSize","virtualSize","rtl","offAny","gridEnabled","newSlidesGrid","floor","eventHandler","getDirectionLabel","slideIndex","allSlidesSize","slidesSizesGrid","slideSizeValue","maxSnap","snap","offsetBefore","snapIndex","allSlidesOffset","setCSSProperty","update","updateSize","$el","previousSlidesGridLength","hasClassBackfaceClassAdded","parseInt","backFaceHiddenClass","Number","isNaN","assign","size","activeSlides","setTransition","getSlideByIndex","margin-top","margin-bottom ","margin-left","padding-left","padding-right","visibleSlides","marginRight","property","getDirectionPropertyValue","label","swiperSize","rtlTranslate","wrongRTL","isVirtual","newHeight","slidesLength","updateSlidesOffset","offsetAfter","offsetCenter","marginLeft","slideProgress","marginBottom","originalSlideProgress","marginTop","slideBefore","slideAfter","originalProgress","slideFound","minTranslate","translatesDiff","maxTranslate","wasBeginning","currentWebKitTransform","paddingRight","_slide$","activeSlide","wasEnd","updateSlide","shouldResetSlideSize","slideStyles","boxSizing","nextSlide","prevSlide","abs","emitSlidesClasses","previousRealIndex","previousSnapIndex","updateWrapperSize","slidesGridItem","_","clickedSlide","clickedIndex","updateAutoHeight","updateSlidesProgress","updateClickedSlide","v","addToSnapGrid","addToSlidesGrid","previousSlidesLength","currentTranslate","previousSnapGridLength","setTranslate","byController","y","newProgress","ceil","translateBounds","newTranslate","offsetLeft","offsetTop","visibleSlidesIndexes","onTranslateToWrapperTransitionEnd","slideOffset","getSwiperTranslate","multiplier","transitionEnd","indexAsNumber","isValidNumber","isFinite","normalizedTranslate","normalizedGrid","normalizedGridNext","skip","isH","_swiperImmediateVirtual","animateCSSModeScroll","transitionStart","animating","onSlideToWrapperTransitionEnd","newIndex","slideTo","perGroup","x","increment","_clientLeft","internal","normalize","prevSnap","prevIndex","_wrapperEl$scrollTo","currentSnap","nextSnap","slideToIndex","slideChanged","prependSlides","initial","loopFix","loopDestroy","Error","setGrabCursor","unsetGrabCursor","assignedSlot","onTouchStart","touches","originalEvent","$targetEl","isTouchEvent","swipingClassHasValue","isTargetShadow","shadowRoot","startX","allowTouchCallbacks","startMoving","touchStartTime","allowClick","type","preventDefault","shouldPreventDefault","_immediateVirtual","t","_wrapperEl$scrollTo2","preventedByNestedSwiper","pageX","startY","pageY","currentX","currentY","isScrolling","stopPropagation","diff","slidesPerViewDynamic","diffX","diffY","swipeDirection","disableParentSwiper","allowThresholdMove","startTranslate","val","prevSnapIndex","normalizedSnapGrid","freeMode","isMoved","lastIndex","touchEndTime","lastClickTime","currentPos","stopIndex","groupSize","rewindFirstIndex","rewindLastIndex","ratio","timeDiff","isNavButtonTarget","loopCreate","blankSlidesNum","checkOverflow","appendSlides","cloneNode","swiperMethod","moving","isLocked","attachEvents","cursor","breakpoint","currentBreakpoint","breakpointOnlyParams","breakpointParams","emitContainerClasses","wasModuleEnabled","isModuleEnabled","directionChanged","needsReLoop","isEnabled","composedPath","path","wasEnabled","eventPath","enable","closestElement","targetTouches","getBreakpoint","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","innerWidth","currentHeight","point","points","b","prepareClasses","prefix","isContentEditable","bind","targetTouch","onReady","isPicture","imageEl","image","onerror","srcset","imagesToLoad","sqrt","pow","imagesLoaded","isVertical","currentSrc","loadImage","atan2","lastSlideIndex","wasLocked","checkOverflow$1","allowMomentumBounce","addClasses","exact","allModulesParams","moduleParamName","auto","pathTree","moduleParams","events$1","images","extendedDefaults","swipers","modules","passedParams","navigation","nextEl","prevEl","clickTimeout","stopImmediatePropagation","slideInView","_swiper$loopedSlides","originalParams","wasMultiRow","isMultiRow","fill","translateValue","disable","translated","needUpdate","currentDirection","newDirection","containerEl","innerHeight","clientHeight","minRatio","substr","_points$i","protoMethod","lastSlideRightEdge","mod","__modules__","installModule","resultClasses","pointer-events","free-mode","autoheight","mounted","mount","centered","watch-progress","item","getWrapperSelector","removeClasses","sizes","checkForComplete","deleteInstance","onload","cleanStyles","deleteProps","slidesIndexes","removeAllSlides","newParams","cssModeTimeout","_swiper$modules","appendIndexes","onRendered","numberOfNewSlides","newActiveIndex","appendSlide","removeSlide","Keyboard","eventName","onlyInViewport","pageUpDown","isPageUp","isArrowRight","isArrowUp","previousTranslate","swiperWidth","swiperHeight","windowWidth","windowHeight","swiperOffset","swiperCoord","velocities","kc","keyboard","Mousewheel","sensitivity","eventsTarget","thresholdDelta","lastEventBeforeSnap","recentWheelEvents","PIXEL_STEP","PAGE_HEIGHT","cls","sY","wheelDeltaY","sX","wheelDeltaX","pY","getSlideClasses","deltaY","pX","view","deltaMode","LINE_HEIGHT","spv","spinX","spinY","pixelX","breakLoop","handleMouseEnter","mouseEntered","animateSlider","newEvent","delta","releaseOnEdges","lastScrollTime","releaseScroll","mousewheel","rtlFactor","pixelY","positions","prevEvent","ignoreWheelEvents","wrapper","position","timeout","shift","createElementIfNotDefined","element","hideOnClick","disabledClass","newDefaults","disabled","m","$nextEl","opacity","checkProps","currentOpacity","scale","gesture","$imageWrapEl","slideWidth","effectInit","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","effectTarget","effectParams","transformEl","backface-visibility","-webkit-backface-visibility","effectVirtualTransitionEnd","eventTriggered","allSlides","triggerEvents","createShadow","shadowClass","$shadowContainer","$shadowEl","onPrevClick","prototypeGroup","use","eventsArray","newWidth","contentBoxSize","contentRect","inlineSize","blockSize","unobserve","MutationObserver","WebkitMutationObserver","characterData","initSlides","observeSlideChildren","disconnect","renderSlide","onNextClick","$prevEl","force","_swiper$params","_swiper$params$virtua","_swiper$virtual","previousTo","previousOffset","offsetProp","isHidden","hiddenClass","load","pagination","bulletElement","renderCustom","progressbarOpposite","dynamicBullets","formatFractionCurrent","number","bulletActiveClass","modifierClass","totalClass","pfx","progressbarFillClass","progressbarOppositeClass","prependIndexes","paginationDisabledClass","sort","bullets","getEl","setSideBullets","$lastDisplayedBullet","$firstDisplayedBullet","bulletsOffset","progressbarDirection","isPaginationDisabled","$bulletEl","prependSlide","total","firstIndex","cachedIndex","$cachedEl","bulletSize","cachedElIndex","newCache","dynamicBulletIndex","bulletIndex","$bullet","handle","paginationHTML","keyCode","charCode","renderFraction","isArrowLeft","isArrowDown","isPageDown","altKey","ctrlKey","metaKey","clickable","dynamicMainBullets","classesToSelector","bulletClass","returnValue","lockClass","numberOfBullets","render","invert","forceToAxis","thresholdTime","targetEl","newPos","newSize","dragSize","trackSize","divider","scrollbar","raw","$dragEl","positionRatio","onDragStart","dragStartPos","wheelDelta","HORIZONTAL_AXIS","draggable","snapOnRelease","scrollbarDisabledClass","horizontalClass","dragEl","setDragPosition","dragTimeout","activeListener","eventMethod","enableDraggable","disableDraggable","sticky","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","onDragEnd","handleMouseLeave","Parallax","_swiper","tagName","maxRatio","_swiper$navigation","currentScale","gesturesEnabled","toggleEl","isScaling","fakeGestureTouched","fakeGestureMoved","slideHeight","$imageEl","minX","touchesStart","touchesCurrent","prevPositionX","_swiper$navigation2","distance","onGestureStart","$parallaxEl","parallaxDuration","navigationDisabledClass","getDistanceBetweenTouches","scaleStart","_swiper$navigation3","onGestureChange","_swiper$navigation4","scaleMove","zoom","onGestureEnd","renderBullet","renderProgressbar","currentClass","maxX","clickableClass","minY","verticalClass","maxY","prevPositionY","momentumDurationX","momentumDistanceY","momentumDurationY","momentumDistanceX","newPositionY","scaledHeight","scaledWidth","onTransitionEnd","zoomIn","midIndex","suffix","bullet","zoomedSlideClass","offsetY","translateX","translateY","translateMinX","translateMinY","translateMaxX","touchY","changedTouches","offsetX","imageWidth","imageHeight","dynamicBulletsLength","formatFractionTotal","scaleX","scaleY","touchAction","zoomOut","activeListenerWithCapture","getSlideSelector","toggleGestures","slideSelector","zoomToggle","loadPrevNextAmount","loadOnTransitionStart","loadedClass","preloaderClass","initialImageLoaded","loadInSlide","loadInDuplicate","$images","background","originalSlide","$source","slideExist","loadPrevNext","$scrollElement","isWindow","scrollElementWidth","hide","checkInViewOnLoad","display","checkInView","clientX","clientY","getPointerPosition","control","controller","by","LinearSpline","binarySearch","minIndex","maxIndex","array","guess","onDragMove","i1","i3","interpolate","controlled","controlledTranslate","setControlledTranslate","getInterpolateFunction","setControlledTransition","$swiperEl","removeSpline","spline","dragClass","notificationClass","prevSlideMessage","containerMessage","containerRoleDescriptionMessage","slideRole","notify","notification","getRandomNumber","scrollHandlerAttached","makeElNotFocusable","addElLive","live","addElRole","addElRoleDescription","description","addElLabel","setTransform","click","p","updateNavigation","disableEl","makeElFocusable","hasPagination","hasClickablePagination","onEnterOrSpaceKey","handlePointerDown","clicked","parallax","a11y","itemRoleDescriptionMessage","handleFocus","parallaxEl","includes","isActive","isVisible","addElId","$containerEl","containerClass","wrapperId","initNavEl","liveRegion","prevTime","x1","x2","y2","y1","History","root","keepQuery","pathArray","setHistory","currentState","paths","getPathValues","hashNavigation","watchState","onHashChange","newHash","activeSlideHash","setHash","autoplayResult","waitForTransition","disableOnInteraction","reverseDirection","pauseOnMouseEnter","delay","$activeSlideEl","touchX","translateMaxY","pause","run","detachMouseEvents","attachMouseEvents","enableGestures","autoScrollOffset","slideThumbActiveClass","thumbs","_getListeners2","thumbsContainerClass","swiperCreated","disableGestures","onThumbClick","thumbsSwiper","currentIndex","_getListeners3","getListeners","thumbsParams","SwiperClass","scrollToSlide","slideHash","newPositionX","momentumDuration","thumbActiveClass","thumbsToActivate","in","out","useOffset","currentThumbsIndex","scrollingElement","nextThumbsIndex","elementClass","prevThumbsIndex","loadingClass","newThumbsIndex","$pictureEl","slideOriginalIndex","sourceEl","momentum","momentumVelocityRatio","swiperParams","lastMoveEvent","momentumDistance","newPosition","amount","doBounce","afterBouncePosition","bounceAmount","momentumBounce","needsLoopFix","scrollElementHeight","inView","moveDistance","_swiper$params2","slidesPerRow","slidesNumberEvenToRows","numFullColumns","newSlideOrderIndex","groupIndex","slideIndexInGroup","columnsInGroup","row","column","activeIndexBuffer","slidesBuffer","baseLength","inverse","_t","indexToRemove","nextSlideMessage","firstSlideMessage","paginationBulletMessage","slideLabelMessage","message","addSlide","role","enableEl","lastSlideMessage","fadeEffect","crossFade","$transitionElements","handlePointerUp","cubeEffect","shadow","sourceCapabilities","firesTouchEvents","shadowScale","createSlideShadows","shadowBefore","shadowAfter","$cubeShadowEl","round","random","slideAngle","tz","_swiper$navigation5","$transitionEndTarget","swiperSlideOffset","tx","ty","wrapperRotate","shadowAngle","scale1","scale2","URL","slugify","flipEffect","limitRotation","rotateX","rotateY","setHistoryPopState","urlOverride","part","depth","EffectCoverflow","center","rotate","translateZ","slideTransform","zIndex","$shadowAfterEl","$shadowBeforeEl","offsetMultiplier","stretch","EffectCreative","limitProgress","r","translateString","rotateString","scaleString","opacityString","stopOnLastSlide","shadowOpacity","EffectCards","cardsEffect","perSlideRotate","perSlideOffset","tZ","subProgress","tXAdd","onMouseLeave","onVisibilityChange","onMouseEnter","multipleActiveThumbs","thumbsSwiperParams","momentumRatio","momentumBounceRatio","minimumVelocity","pop","velocityEvent","currentSlideSize","_swiper$params$grid","_swiper$params3","_swiper$params$grid2","-webkit-order","order","_swiper$params4","currentSlide","slideOpacity","shadowOffset","-webkit-transform-origin","transform-origin","sin","zFactor","coverflowEffect","modifier","centerOffset","creativeEffect","shadowPerProgress","progressMultiplier","isCenteredSlides","margin","_loop","custom","_swiper$touchEventsDa","tX","tY","isSwipeToNext","isSwipeToPrev","prevY","SLIDER","checkSliderOrientation","numOfSliders","pointerCircles","pointerLine","addActiveClass","pointerHead","add","windowLoad","changeDirection","orientation"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * Swiper 8.4.7\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * https://swiperjs.com\r\n *\r\n * Copyright 2014-2023 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: January 30, 2023\r\n */\r\n\r\n(function (global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n      (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Swiper = factory());\r\n})(this, (function () {\r\n  'use strict';\r\n\r\n  /**\r\n   * SSR Window 4.0.2\r\n   * Better handling for window object in SSR environment\r\n   * https://github.com/nolimits4web/ssr-window\r\n   *\r\n   * Copyright 2021, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: December 13, 2021\r\n   */\r\n\r\n  /* eslint-disable no-param-reassign */\r\n  function isObject$1(obj) {\r\n    return obj !== null && typeof obj === 'object' && 'constructor' in obj && obj.constructor === Object;\r\n  }\r\n\r\n  function extend$1(target, src) {\r\n    if (target === void 0) {\r\n      target = {};\r\n    }\r\n\r\n    if (src === void 0) {\r\n      src = {};\r\n    }\r\n\r\n    Object.keys(src).forEach(key => {\r\n      if (typeof target[key] === 'undefined') target[key] = src[key]; else if (isObject$1(src[key]) && isObject$1(target[key]) && Object.keys(src[key]).length > 0) {\r\n        extend$1(target[key], src[key]);\r\n      }\r\n    });\r\n  }\r\n\r\n  const ssrDocument = {\r\n    body: {},\r\n\r\n    addEventListener() { },\r\n\r\n    removeEventListener() { },\r\n\r\n    activeElement: {\r\n      blur() { },\r\n\r\n      nodeName: ''\r\n    },\r\n\r\n    querySelector() {\r\n      return null;\r\n    },\r\n\r\n    querySelectorAll() {\r\n      return [];\r\n    },\r\n\r\n    getElementById() {\r\n      return null;\r\n    },\r\n\r\n    createEvent() {\r\n      return {\r\n        initEvent() { }\r\n\r\n      };\r\n    },\r\n\r\n    createElement() {\r\n      return {\r\n        children: [],\r\n        childNodes: [],\r\n        style: {},\r\n\r\n        setAttribute() { },\r\n\r\n        getElementsByTagName() {\r\n          return [];\r\n        }\r\n\r\n      };\r\n    },\r\n\r\n    createElementNS() {\r\n      return {};\r\n    },\r\n\r\n    importNode() {\r\n      return null;\r\n    },\r\n\r\n    location: {\r\n      hash: '',\r\n      host: '',\r\n      hostname: '',\r\n      href: '',\r\n      origin: '',\r\n      pathname: '',\r\n      protocol: '',\r\n      search: ''\r\n    }\r\n  };\r\n\r\n  function getDocument() {\r\n    const doc = typeof document !== 'undefined' ? document : {};\r\n    extend$1(doc, ssrDocument);\r\n    return doc;\r\n  }\r\n\r\n  const ssrWindow = {\r\n    document: ssrDocument,\r\n    navigator: {\r\n      userAgent: ''\r\n    },\r\n    location: {\r\n      hash: '',\r\n      host: '',\r\n      hostname: '',\r\n      href: '',\r\n      origin: '',\r\n      pathname: '',\r\n      protocol: '',\r\n      search: ''\r\n    },\r\n    history: {\r\n      replaceState() { },\r\n\r\n      pushState() { },\r\n\r\n      go() { },\r\n\r\n      back() { }\r\n\r\n    },\r\n    CustomEvent: function CustomEvent() {\r\n      return this;\r\n    },\r\n\r\n    addEventListener() { },\r\n\r\n    removeEventListener() { },\r\n\r\n    getComputedStyle() {\r\n      return {\r\n        getPropertyValue() {\r\n          return '';\r\n        }\r\n\r\n      };\r\n    },\r\n\r\n    Image() { },\r\n\r\n    Date() { },\r\n\r\n    screen: {},\r\n\r\n    setTimeout() { },\r\n\r\n    clearTimeout() { },\r\n\r\n    matchMedia() {\r\n      return {};\r\n    },\r\n\r\n    requestAnimationFrame(callback) {\r\n      if (typeof setTimeout === 'undefined') {\r\n        callback();\r\n        return null;\r\n      }\r\n\r\n      return setTimeout(callback, 0);\r\n    },\r\n\r\n    cancelAnimationFrame(id) {\r\n      if (typeof setTimeout === 'undefined') {\r\n        return;\r\n      }\r\n\r\n      clearTimeout(id);\r\n    }\r\n\r\n  };\r\n\r\n  function getWindow() {\r\n    const win = typeof window !== 'undefined' ? window : {};\r\n    extend$1(win, ssrWindow);\r\n    return win;\r\n  }\r\n\r\n  /**\r\n   * Dom7 4.0.4\r\n   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n   * https://framework7.io/docs/dom7.html\r\n   *\r\n   * Copyright 2022, Vladimir Kharlampidi\r\n   *\r\n   * Licensed under MIT\r\n   *\r\n   * Released on: January 11, 2022\r\n   */\r\n  /* eslint-disable no-proto */\r\n\r\n  function makeReactive(obj) {\r\n    const proto = obj.__proto__;\r\n    Object.defineProperty(obj, '__proto__', {\r\n      get() {\r\n        return proto;\r\n      },\r\n\r\n      set(value) {\r\n        proto.__proto__ = value;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  class Dom7 extends Array {\r\n    constructor(items) {\r\n      if (typeof items === 'number') {\r\n        super(items);\r\n      } else {\r\n        super(...(items || []));\r\n        makeReactive(this);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  function arrayFlat(arr) {\r\n    if (arr === void 0) {\r\n      arr = [];\r\n    }\r\n\r\n    const res = [];\r\n    arr.forEach(el => {\r\n      if (Array.isArray(el)) {\r\n        res.push(...arrayFlat(el));\r\n      } else {\r\n        res.push(el);\r\n      }\r\n    });\r\n    return res;\r\n  }\r\n\r\n  function arrayFilter(arr, callback) {\r\n    return Array.prototype.filter.call(arr, callback);\r\n  }\r\n\r\n  function arrayUnique(arr) {\r\n    const uniqueArray = [];\r\n\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\r\n    }\r\n\r\n    return uniqueArray;\r\n  }\r\n\r\n\r\n  function qsa(selector, context) {\r\n    if (typeof selector !== 'string') {\r\n      return [selector];\r\n    }\r\n\r\n    const a = [];\r\n    const res = context.querySelectorAll(selector);\r\n\r\n    for (let i = 0; i < res.length; i += 1) {\r\n      a.push(res[i]);\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  function $(selector, context) {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    let arr = [];\r\n\r\n    if (!context && selector instanceof Dom7) {\r\n      return selector;\r\n    }\r\n\r\n    if (!selector) {\r\n      return new Dom7(arr);\r\n    }\r\n\r\n    if (typeof selector === 'string') {\r\n      const html = selector.trim();\r\n\r\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n        let toCreate = 'div';\r\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\r\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\r\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\r\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\r\n        if (html.indexOf('<option') === 0) toCreate = 'select';\r\n        const tempParent = document.createElement(toCreate);\r\n        tempParent.innerHTML = html;\r\n\r\n        for (let i = 0; i < tempParent.childNodes.length; i += 1) {\r\n          arr.push(tempParent.childNodes[i]);\r\n        }\r\n      } else {\r\n        arr = qsa(selector.trim(), context || document);\r\n      } // arr = qsa(selector, document);\r\n\r\n    } else if (selector.nodeType || selector === window || selector === document) {\r\n      arr.push(selector);\r\n    } else if (Array.isArray(selector)) {\r\n      if (selector instanceof Dom7) return selector;\r\n      arr = selector;\r\n    }\r\n\r\n    return new Dom7(arrayUnique(arr));\r\n  }\r\n\r\n  $.fn = Dom7.prototype; // eslint-disable-next-line\r\n\r\n  function addClass() {\r\n    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      classes[_key] = arguments[_key];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      el.classList.add(...classNames);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function removeClass() {\r\n    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      classes[_key2] = arguments[_key2];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      el.classList.remove(...classNames);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function toggleClass() {\r\n    for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n      classes[_key3] = arguments[_key3];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    this.forEach(el => {\r\n      classNames.forEach(className => {\r\n        el.classList.toggle(className);\r\n      });\r\n    });\r\n  }\r\n\r\n  function hasClass() {\r\n    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n      classes[_key4] = arguments[_key4];\r\n    }\r\n\r\n    const classNames = arrayFlat(classes.map(c => c.split(' ')));\r\n    return arrayFilter(this, el => {\r\n      return classNames.filter(className => el.classList.contains(className)).length > 0;\r\n    }).length > 0;\r\n  }\r\n\r\n  function attr(attrs, value) {\r\n    if (arguments.length === 1 && typeof attrs === 'string') {\r\n      // Get attr\r\n      if (this[0]) return this[0].getAttribute(attrs);\r\n      return undefined;\r\n    } // Set attrs\r\n\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (arguments.length === 2) {\r\n        // String\r\n        this[i].setAttribute(attrs, value);\r\n      } else {\r\n        // Object\r\n        for (const attrName in attrs) {\r\n          this[i][attrName] = attrs[attrName];\r\n          this[i].setAttribute(attrName, attrs[attrName]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function removeAttr(attr) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].removeAttribute(attr);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transform(transform) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].style.transform = transform;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transition$1(duration) {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function on() {\r\n    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\r\n      args[_key5] = arguments[_key5];\r\n    }\r\n\r\n    let [eventType, targetSelector, listener, capture] = args;\r\n\r\n    if (typeof args[1] === 'function') {\r\n      [eventType, listener, capture] = args;\r\n      targetSelector = undefined;\r\n    }\r\n\r\n    if (!capture) capture = false;\r\n\r\n    function handleLiveEvent(e) {\r\n      const target = e.target;\r\n      if (!target) return;\r\n      const eventData = e.target.dom7EventData || [];\r\n\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n\r\n      if ($(target).is(targetSelector)) listener.apply(target, eventData); else {\r\n        const parents = $(target).parents(); // eslint-disable-line\r\n\r\n        for (let k = 0; k < parents.length; k += 1) {\r\n          if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\r\n        }\r\n      }\r\n    }\r\n\r\n    function handleEvent(e) {\r\n      const eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n\r\n      if (eventData.indexOf(e) < 0) {\r\n        eventData.unshift(e);\r\n      }\r\n\r\n      listener.apply(this, eventData);\r\n    }\r\n\r\n    const events = eventType.split(' ');\r\n    let j;\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const el = this[i];\r\n\r\n      if (!targetSelector) {\r\n        for (j = 0; j < events.length; j += 1) {\r\n          const event = events[j];\r\n          if (!el.dom7Listeners) el.dom7Listeners = {};\r\n          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\r\n          el.dom7Listeners[event].push({\r\n            listener,\r\n            proxyListener: handleEvent\r\n          });\r\n          el.addEventListener(event, handleEvent, capture);\r\n        }\r\n      } else {\r\n        // Live events\r\n        for (j = 0; j < events.length; j += 1) {\r\n          const event = events[j];\r\n          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\r\n          if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\r\n          el.dom7LiveListeners[event].push({\r\n            listener,\r\n            proxyListener: handleLiveEvent\r\n          });\r\n          el.addEventListener(event, handleLiveEvent, capture);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function off() {\r\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\r\n      args[_key6] = arguments[_key6];\r\n    }\r\n\r\n    let [eventType, targetSelector, listener, capture] = args;\r\n\r\n    if (typeof args[1] === 'function') {\r\n      [eventType, listener, capture] = args;\r\n      targetSelector = undefined;\r\n    }\r\n\r\n    if (!capture) capture = false;\r\n    const events = eventType.split(' ');\r\n\r\n    for (let i = 0; i < events.length; i += 1) {\r\n      const event = events[i];\r\n\r\n      for (let j = 0; j < this.length; j += 1) {\r\n        const el = this[j];\r\n        let handlers;\r\n\r\n        if (!targetSelector && el.dom7Listeners) {\r\n          handlers = el.dom7Listeners[event];\r\n        } else if (targetSelector && el.dom7LiveListeners) {\r\n          handlers = el.dom7LiveListeners[event];\r\n        }\r\n\r\n        if (handlers && handlers.length) {\r\n          for (let k = handlers.length - 1; k >= 0; k -= 1) {\r\n            const handler = handlers[k];\r\n\r\n            if (listener && handler.listener === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            } else if (!listener) {\r\n              el.removeEventListener(event, handler.proxyListener, capture);\r\n              handlers.splice(k, 1);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function trigger() {\r\n    const window = getWindow();\r\n\r\n    for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\r\n      args[_key9] = arguments[_key9];\r\n    }\r\n\r\n    const events = args[0].split(' ');\r\n    const eventData = args[1];\r\n\r\n    for (let i = 0; i < events.length; i += 1) {\r\n      const event = events[i];\r\n\r\n      for (let j = 0; j < this.length; j += 1) {\r\n        const el = this[j];\r\n\r\n        if (window.CustomEvent) {\r\n          const evt = new window.CustomEvent(event, {\r\n            detail: eventData,\r\n            bubbles: true,\r\n            cancelable: true\r\n          });\r\n          el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\r\n          el.dispatchEvent(evt);\r\n          el.dom7EventData = [];\r\n          delete el.dom7EventData;\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function transitionEnd$1(callback) {\r\n    const dom = this;\r\n\r\n    function fireCallBack(e) {\r\n      if (e.target !== this) return;\r\n      callback.call(this, e);\r\n      dom.off('transitionend', fireCallBack);\r\n    }\r\n\r\n    if (callback) {\r\n      dom.on('transitionend', fireCallBack);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function outerWidth(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        const styles = this.styles();\r\n        return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\r\n      }\r\n\r\n      return this[0].offsetWidth;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function outerHeight(includeMargins) {\r\n    if (this.length > 0) {\r\n      if (includeMargins) {\r\n        const styles = this.styles();\r\n        return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\r\n      }\r\n\r\n      return this[0].offsetHeight;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function offset() {\r\n    if (this.length > 0) {\r\n      const window = getWindow();\r\n      const document = getDocument();\r\n      const el = this[0];\r\n      const box = el.getBoundingClientRect();\r\n      const body = document.body;\r\n      const clientTop = el.clientTop || body.clientTop || 0;\r\n      const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n      const scrollTop = el === window ? window.scrollY : el.scrollTop;\r\n      const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\r\n      return {\r\n        top: box.top + scrollTop - clientTop,\r\n        left: box.left + scrollLeft - clientLeft\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  function styles() {\r\n    const window = getWindow();\r\n    if (this[0]) return window.getComputedStyle(this[0], null);\r\n    return {};\r\n  }\r\n\r\n  function css(props, value) {\r\n    const window = getWindow();\r\n    let i;\r\n\r\n    if (arguments.length === 1) {\r\n      if (typeof props === 'string') {\r\n        // .css('width')\r\n        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\r\n      } else {\r\n        // .css({ width: '100px' })\r\n        for (i = 0; i < this.length; i += 1) {\r\n          for (const prop in props) {\r\n            this[i].style[prop] = props[prop];\r\n          }\r\n        }\r\n\r\n        return this;\r\n      }\r\n    }\r\n\r\n    if (arguments.length === 2 && typeof props === 'string') {\r\n      // .css('width', '100px')\r\n      for (i = 0; i < this.length; i += 1) {\r\n        this[i].style[props] = value;\r\n      }\r\n\r\n      return this;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function each(callback) {\r\n    if (!callback) return this;\r\n    this.forEach((el, index) => {\r\n      callback.apply(el, [el, index]);\r\n    });\r\n    return this;\r\n  }\r\n\r\n  function filter(callback) {\r\n    const result = arrayFilter(this, callback);\r\n    return $(result);\r\n  }\r\n\r\n  function html(html) {\r\n    if (typeof html === 'undefined') {\r\n      return this[0] ? this[0].innerHTML : null;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].innerHTML = html;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function text(text) {\r\n    if (typeof text === 'undefined') {\r\n      return this[0] ? this[0].textContent.trim() : null;\r\n    }\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      this[i].textContent = text;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function is(selector) {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    const el = this[0];\r\n    let compareWith;\r\n    let i;\r\n    if (!el || typeof selector === 'undefined') return false;\r\n\r\n    if (typeof selector === 'string') {\r\n      if (el.matches) return el.matches(selector);\r\n      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\r\n      if (el.msMatchesSelector) return el.msMatchesSelector(selector);\r\n      compareWith = $(selector);\r\n\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (selector === document) {\r\n      return el === document;\r\n    }\r\n\r\n    if (selector === window) {\r\n      return el === window;\r\n    }\r\n\r\n    if (selector.nodeType || selector instanceof Dom7) {\r\n      compareWith = selector.nodeType ? [selector] : selector;\r\n\r\n      for (i = 0; i < compareWith.length; i += 1) {\r\n        if (compareWith[i] === el) return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  function index() {\r\n    let child = this[0];\r\n    let i;\r\n\r\n    if (child) {\r\n      i = 0; // eslint-disable-next-line\r\n\r\n      while ((child = child.previousSibling) !== null) {\r\n        if (child.nodeType === 1) i += 1;\r\n      }\r\n\r\n      return i;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  function eq(index) {\r\n    if (typeof index === 'undefined') return this;\r\n    const length = this.length;\r\n\r\n    if (index > length - 1) {\r\n      return $([]);\r\n    }\r\n\r\n    if (index < 0) {\r\n      const returnIndex = length + index;\r\n      if (returnIndex < 0) return $([]);\r\n      return $([this[returnIndex]]);\r\n    }\r\n\r\n    return $([this[index]]);\r\n  }\r\n\r\n  function append() {\r\n    let newChild;\r\n    const document = getDocument();\r\n\r\n    for (let k = 0; k < arguments.length; k += 1) {\r\n      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];\r\n\r\n      for (let i = 0; i < this.length; i += 1) {\r\n        if (typeof newChild === 'string') {\r\n          const tempDiv = document.createElement('div');\r\n          tempDiv.innerHTML = newChild;\r\n\r\n          while (tempDiv.firstChild) {\r\n            this[i].appendChild(tempDiv.firstChild);\r\n          }\r\n        } else if (newChild instanceof Dom7) {\r\n          for (let j = 0; j < newChild.length; j += 1) {\r\n            this[i].appendChild(newChild[j]);\r\n          }\r\n        } else {\r\n          this[i].appendChild(newChild);\r\n        }\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function prepend(newChild) {\r\n    const document = getDocument();\r\n    let i;\r\n    let j;\r\n\r\n    for (i = 0; i < this.length; i += 1) {\r\n      if (typeof newChild === 'string') {\r\n        const tempDiv = document.createElement('div');\r\n        tempDiv.innerHTML = newChild;\r\n\r\n        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n        }\r\n      } else if (newChild instanceof Dom7) {\r\n        for (j = 0; j < newChild.length; j += 1) {\r\n          this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n        }\r\n      } else {\r\n        this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  function next(selector) {\r\n    if (this.length > 0) {\r\n      if (selector) {\r\n        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n          return $([this[0].nextElementSibling]);\r\n        }\r\n\r\n        return $([]);\r\n      }\r\n\r\n      if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\r\n      return $([]);\r\n    }\r\n\r\n    return $([]);\r\n  }\r\n\r\n  function nextAll(selector) {\r\n    const nextEls = [];\r\n    let el = this[0];\r\n    if (!el) return $([]);\r\n\r\n    while (el.nextElementSibling) {\r\n      const next = el.nextElementSibling; // eslint-disable-line\r\n\r\n      if (selector) {\r\n        if ($(next).is(selector)) nextEls.push(next);\r\n      } else nextEls.push(next);\r\n\r\n      el = next;\r\n    }\r\n\r\n    return $(nextEls);\r\n  }\r\n\r\n  function prev(selector) {\r\n    if (this.length > 0) {\r\n      const el = this[0];\r\n\r\n      if (selector) {\r\n        if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n          return $([el.previousElementSibling]);\r\n        }\r\n\r\n        return $([]);\r\n      }\r\n\r\n      if (el.previousElementSibling) return $([el.previousElementSibling]);\r\n      return $([]);\r\n    }\r\n\r\n    return $([]);\r\n  }\r\n\r\n  function prevAll(selector) {\r\n    const prevEls = [];\r\n    let el = this[0];\r\n    if (!el) return $([]);\r\n\r\n    while (el.previousElementSibling) {\r\n      const prev = el.previousElementSibling; // eslint-disable-line\r\n\r\n      if (selector) {\r\n        if ($(prev).is(selector)) prevEls.push(prev);\r\n      } else prevEls.push(prev);\r\n\r\n      el = prev;\r\n    }\r\n\r\n    return $(prevEls);\r\n  }\r\n\r\n  function parent(selector) {\r\n    const parents = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode !== null) {\r\n        if (selector) {\r\n          if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\r\n        } else {\r\n          parents.push(this[i].parentNode);\r\n        }\r\n      }\r\n    }\r\n\r\n    return $(parents);\r\n  }\r\n\r\n  function parents(selector) {\r\n    const parents = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      let parent = this[i].parentNode; // eslint-disable-line\r\n\r\n      while (parent) {\r\n        if (selector) {\r\n          if ($(parent).is(selector)) parents.push(parent);\r\n        } else {\r\n          parents.push(parent);\r\n        }\r\n\r\n        parent = parent.parentNode;\r\n      }\r\n    }\r\n\r\n    return $(parents);\r\n  }\r\n\r\n  function closest(selector) {\r\n    let closest = this; // eslint-disable-line\r\n\r\n    if (typeof selector === 'undefined') {\r\n      return $([]);\r\n    }\r\n\r\n    if (!closest.is(selector)) {\r\n      closest = closest.parents(selector).eq(0);\r\n    }\r\n\r\n    return closest;\r\n  }\r\n\r\n  function find(selector) {\r\n    const foundElements = [];\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const found = this[i].querySelectorAll(selector);\r\n\r\n      for (let j = 0; j < found.length; j += 1) {\r\n        foundElements.push(found[j]);\r\n      }\r\n    }\r\n\r\n    return $(foundElements);\r\n  }\r\n\r\n  function children(selector) {\r\n    const children = []; // eslint-disable-line\r\n\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      const childNodes = this[i].children;\r\n\r\n      for (let j = 0; j < childNodes.length; j += 1) {\r\n        if (!selector || $(childNodes[j]).is(selector)) {\r\n          children.push(childNodes[j]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return $(children);\r\n  }\r\n\r\n  function remove() {\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  const Methods = {\r\n    addClass,\r\n    removeClass,\r\n    hasClass,\r\n    toggleClass,\r\n    attr,\r\n    removeAttr,\r\n    transform,\r\n    transition: transition$1,\r\n    on,\r\n    off,\r\n    trigger,\r\n    transitionEnd: transitionEnd$1,\r\n    outerWidth,\r\n    outerHeight,\r\n    styles,\r\n    offset,\r\n    css,\r\n    each,\r\n    html,\r\n    text,\r\n    is,\r\n    index,\r\n    eq,\r\n    append,\r\n    prepend,\r\n    next,\r\n    nextAll,\r\n    prev,\r\n    prevAll,\r\n    parent,\r\n    parents,\r\n    closest,\r\n    find,\r\n    children,\r\n    filter,\r\n    remove\r\n  };\r\n  Object.keys(Methods).forEach(methodName => {\r\n    Object.defineProperty($.fn, methodName, {\r\n      value: Methods[methodName],\r\n      writable: true\r\n    });\r\n  });\r\n\r\n  function deleteProps(obj) {\r\n    const object = obj;\r\n    Object.keys(object).forEach(key => {\r\n      try {\r\n        object[key] = null;\r\n      } catch (e) {// no getter for object\r\n      }\r\n\r\n      try {\r\n        delete object[key];\r\n      } catch (e) {// something got wrong\r\n      }\r\n    });\r\n  }\r\n\r\n  function nextTick(callback, delay) {\r\n    if (delay === void 0) {\r\n      delay = 0;\r\n    }\r\n\r\n    return setTimeout(callback, delay);\r\n  }\r\n\r\n  function now() {\r\n    return Date.now();\r\n  }\r\n\r\n  function getComputedStyle$1(el) {\r\n    const window = getWindow();\r\n    let style;\r\n\r\n    if (window.getComputedStyle) {\r\n      style = window.getComputedStyle(el, null);\r\n    }\r\n\r\n    if (!style && el.currentStyle) {\r\n      style = el.currentStyle;\r\n    }\r\n\r\n    if (!style) {\r\n      style = el.style;\r\n    }\r\n\r\n    return style;\r\n  }\r\n\r\n  function getTranslate(el, axis) {\r\n    if (axis === void 0) {\r\n      axis = 'x';\r\n    }\r\n\r\n    const window = getWindow();\r\n    let matrix;\r\n    let curTransform;\r\n    let transformMatrix;\r\n    const curStyle = getComputedStyle$1(el);\r\n\r\n    if (window.WebKitCSSMatrix) {\r\n      curTransform = curStyle.transform || curStyle.webkitTransform;\r\n\r\n      if (curTransform.split(',').length > 6) {\r\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\r\n      } // Some old versions of Webkit choke when 'none' is passed; pass\r\n      // empty string instead in this case\r\n\r\n\r\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n    } else {\r\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n      matrix = transformMatrix.toString().split(',');\r\n    }\r\n\r\n    if (axis === 'x') {\r\n      // Latest Chrome and webkits Fix\r\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\r\n      else curTransform = parseFloat(matrix[4]);\r\n    }\r\n\r\n    if (axis === 'y') {\r\n      // Latest Chrome and webkits Fix\r\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\r\n      else curTransform = parseFloat(matrix[5]);\r\n    }\r\n\r\n    return curTransform || 0;\r\n  }\r\n\r\n  function isObject(o) {\r\n    return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\r\n  }\r\n\r\n  function isNode(node) {\r\n    // eslint-disable-next-line\r\n    if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\r\n      return node instanceof HTMLElement;\r\n    }\r\n\r\n    return node && (node.nodeType === 1 || node.nodeType === 11);\r\n  }\r\n\r\n  function extend() {\r\n    const to = Object(arguments.length <= 0 ? undefined : arguments[0]);\r\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\r\n\r\n    for (let i = 1; i < arguments.length; i += 1) {\r\n      const nextSource = i < 0 || arguments.length <= i ? undefined : arguments[i];\r\n\r\n      if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\r\n        const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\r\n\r\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n          const nextKey = keysArray[nextIndex];\r\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n\r\n          if (desc !== undefined && desc.enumerable) {\r\n            if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n              if (nextSource[nextKey].__swiper__) {\r\n                to[nextKey] = nextSource[nextKey];\r\n              } else {\r\n                extend(to[nextKey], nextSource[nextKey]);\r\n              }\r\n            } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\r\n              to[nextKey] = {};\r\n\r\n              if (nextSource[nextKey].__swiper__) {\r\n                to[nextKey] = nextSource[nextKey];\r\n              } else {\r\n                extend(to[nextKey], nextSource[nextKey]);\r\n              }\r\n            } else {\r\n              to[nextKey] = nextSource[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return to;\r\n  }\r\n\r\n  function setCSSProperty(el, varName, varValue) {\r\n    el.style.setProperty(varName, varValue);\r\n  }\r\n\r\n  function animateCSSModeScroll(_ref) {\r\n    let {\r\n      swiper,\r\n      targetPosition,\r\n      side\r\n    } = _ref;\r\n    const window = getWindow();\r\n    const startPosition = -swiper.translate;\r\n    let startTime = null;\r\n    let time;\r\n    const duration = swiper.params.speed;\r\n    swiper.wrapperEl.style.scrollSnapType = 'none';\r\n    window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n    const dir = targetPosition > startPosition ? 'next' : 'prev';\r\n\r\n    const isOutOfBound = (current, target) => {\r\n      return dir === 'next' && current >= target || dir === 'prev' && current <= target;\r\n    };\r\n\r\n    const animate = () => {\r\n      time = new Date().getTime();\r\n\r\n      if (startTime === null) {\r\n        startTime = time;\r\n      }\r\n\r\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\r\n      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\r\n      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\r\n\r\n      if (isOutOfBound(currentPosition, targetPosition)) {\r\n        currentPosition = targetPosition;\r\n      }\r\n\r\n      swiper.wrapperEl.scrollTo({\r\n        [side]: currentPosition\r\n      });\r\n\r\n      if (isOutOfBound(currentPosition, targetPosition)) {\r\n        swiper.wrapperEl.style.overflow = 'hidden';\r\n        swiper.wrapperEl.style.scrollSnapType = '';\r\n        setTimeout(() => {\r\n          swiper.wrapperEl.style.overflow = '';\r\n          swiper.wrapperEl.scrollTo({\r\n            [side]: currentPosition\r\n          });\r\n        });\r\n        window.cancelAnimationFrame(swiper.cssModeFrameID);\r\n        return;\r\n      }\r\n\r\n      swiper.cssModeFrameID = window.requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n  }\r\n\r\n  let support;\r\n\r\n  function calcSupport() {\r\n    const window = getWindow();\r\n    const document = getDocument();\r\n    return {\r\n      smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\r\n      touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\r\n      passiveListener: function checkPassiveListener() {\r\n        let supportsPassive = false;\r\n\r\n        try {\r\n          const opts = Object.defineProperty({}, 'passive', {\r\n            // eslint-disable-next-line\r\n            get() {\r\n              supportsPassive = true;\r\n            }\r\n\r\n          });\r\n          window.addEventListener('testPassiveListener', null, opts);\r\n        } catch (e) {// No support\r\n        }\r\n\r\n        return supportsPassive;\r\n      }(),\r\n      gestures: function checkGestures() {\r\n        return 'ongesturestart' in window;\r\n      }()\r\n    };\r\n  }\r\n\r\n  function getSupport() {\r\n    if (!support) {\r\n      support = calcSupport();\r\n    }\r\n\r\n    return support;\r\n  }\r\n\r\n  let deviceCached;\r\n\r\n  function calcDevice(_temp) {\r\n    let {\r\n      userAgent\r\n    } = _temp === void 0 ? {} : _temp;\r\n    const support = getSupport();\r\n    const window = getWindow();\r\n    const platform = window.navigator.platform;\r\n    const ua = userAgent || window.navigator.userAgent;\r\n    const device = {\r\n      ios: false,\r\n      android: false\r\n    };\r\n    const screenWidth = window.screen.width;\r\n    const screenHeight = window.screen.height;\r\n    const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n\r\n    let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n    const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n    const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n    const windows = platform === 'Win32';\r\n    let macos = platform === 'MacIntel'; // iPadOs 13 fix\r\n\r\n    const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\r\n\r\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\r\n      ipad = ua.match(/(Version)\\/([\\d.]+)/);\r\n      if (!ipad) ipad = [0, 1, '13_0_0'];\r\n      macos = false;\r\n    } // Android\r\n\r\n\r\n    if (android && !windows) {\r\n      device.os = 'android';\r\n      device.android = true;\r\n    }\r\n\r\n    if (ipad || iphone || ipod) {\r\n      device.os = 'ios';\r\n      device.ios = true;\r\n    } // Export object\r\n\r\n\r\n    return device;\r\n  }\r\n\r\n  function getDevice(overrides) {\r\n    if (overrides === void 0) {\r\n      overrides = {};\r\n    }\r\n\r\n    if (!deviceCached) {\r\n      deviceCached = calcDevice(overrides);\r\n    }\r\n\r\n    return deviceCached;\r\n  }\r\n\r\n  let browser;\r\n\r\n  function calcBrowser() {\r\n    const window = getWindow();\r\n\r\n    function isSafari() {\r\n      const ua = window.navigator.userAgent.toLowerCase();\r\n      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\r\n    }\r\n\r\n    return {\r\n      isSafari: isSafari(),\r\n      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\r\n    };\r\n  }\r\n\r\n  function getBrowser() {\r\n    if (!browser) {\r\n      browser = calcBrowser();\r\n    }\r\n\r\n    return browser;\r\n  }\r\n\r\n  function Resize(_ref) {\r\n    let {\r\n      swiper,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    let observer = null;\r\n    let animationFrame = null;\r\n\r\n    const resizeHandler = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      emit('beforeResize');\r\n      emit('resize');\r\n    };\r\n\r\n    const createObserver = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      observer = new ResizeObserver(entries => {\r\n        animationFrame = window.requestAnimationFrame(() => {\r\n          const {\r\n            width,\r\n            height\r\n          } = swiper;\r\n          let newWidth = width;\r\n          let newHeight = height;\r\n          entries.forEach(_ref2 => {\r\n            let {\r\n              contentBoxSize,\r\n              contentRect,\r\n              target\r\n            } = _ref2;\r\n            if (target && target !== swiper.el) return;\r\n            newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\r\n            newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\r\n          });\r\n\r\n          if (newWidth !== width || newHeight !== height) {\r\n            resizeHandler();\r\n          }\r\n        });\r\n      });\r\n      observer.observe(swiper.el);\r\n    };\r\n\r\n    const removeObserver = () => {\r\n      if (animationFrame) {\r\n        window.cancelAnimationFrame(animationFrame);\r\n      }\r\n\r\n      if (observer && observer.unobserve && swiper.el) {\r\n        observer.unobserve(swiper.el);\r\n        observer = null;\r\n      }\r\n    };\r\n\r\n    const orientationChangeHandler = () => {\r\n      if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n      emit('orientationchange');\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\r\n        createObserver();\r\n        return;\r\n      }\r\n\r\n      window.addEventListener('resize', resizeHandler);\r\n      window.addEventListener('orientationchange', orientationChangeHandler);\r\n    });\r\n    on('destroy', () => {\r\n      removeObserver();\r\n      window.removeEventListener('resize', resizeHandler);\r\n      window.removeEventListener('orientationchange', orientationChangeHandler);\r\n    });\r\n  }\r\n\r\n  function Observer(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const observers = [];\r\n    const window = getWindow();\r\n\r\n    const attach = function (target, options) {\r\n      if (options === void 0) {\r\n        options = {};\r\n      }\r\n\r\n      const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\r\n      const observer = new ObserverFunc(mutations => {\r\n        // The observerUpdate event should only be triggered\r\n        // once despite the number of mutations.  Additional\r\n        // triggers are redundant and are very costly\r\n        if (mutations.length === 1) {\r\n          emit('observerUpdate', mutations[0]);\r\n          return;\r\n        }\r\n\r\n        const observerUpdate = function observerUpdate() {\r\n          emit('observerUpdate', mutations[0]);\r\n        };\r\n\r\n        if (window.requestAnimationFrame) {\r\n          window.requestAnimationFrame(observerUpdate);\r\n        } else {\r\n          window.setTimeout(observerUpdate, 0);\r\n        }\r\n      });\r\n      observer.observe(target, {\r\n        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n        childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n        characterData: typeof options.characterData === 'undefined' ? true : options.characterData\r\n      });\r\n      observers.push(observer);\r\n    };\r\n\r\n    const init = () => {\r\n      if (!swiper.params.observer) return;\r\n\r\n      if (swiper.params.observeParents) {\r\n        const containerParents = swiper.$el.parents();\r\n\r\n        for (let i = 0; i < containerParents.length; i += 1) {\r\n          attach(containerParents[i]);\r\n        }\r\n      } // Observe container\r\n\r\n\r\n      attach(swiper.$el[0], {\r\n        childList: swiper.params.observeSlideChildren\r\n      }); // Observe wrapper\r\n\r\n      attach(swiper.$wrapperEl[0], {\r\n        attributes: false\r\n      });\r\n    };\r\n\r\n    const destroy = () => {\r\n      observers.forEach(observer => {\r\n        observer.disconnect();\r\n      });\r\n      observers.splice(0, observers.length);\r\n    };\r\n\r\n    extendParams({\r\n      observer: false,\r\n      observeParents: false,\r\n      observeSlideChildren: false\r\n    });\r\n    on('init', init);\r\n    on('destroy', destroy);\r\n  }\r\n\r\n  /* eslint-disable no-underscore-dangle */\r\n  var eventsEmitter = {\r\n    on(events, handler, priority) {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (typeof handler !== 'function') return self;\r\n      const method = priority ? 'unshift' : 'push';\r\n      events.split(' ').forEach(event => {\r\n        if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n        self.eventsListeners[event][method](handler);\r\n      });\r\n      return self;\r\n    },\r\n\r\n    once(events, handler, priority) {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (typeof handler !== 'function') return self;\r\n\r\n      function onceHandler() {\r\n        self.off(events, onceHandler);\r\n\r\n        if (onceHandler.__emitterProxy) {\r\n          delete onceHandler.__emitterProxy;\r\n        }\r\n\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n          args[_key] = arguments[_key];\r\n        }\r\n\r\n        handler.apply(self, args);\r\n      }\r\n\r\n      onceHandler.__emitterProxy = handler;\r\n      return self.on(events, onceHandler, priority);\r\n    },\r\n\r\n    onAny(handler, priority) {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (typeof handler !== 'function') return self;\r\n      const method = priority ? 'unshift' : 'push';\r\n\r\n      if (self.eventsAnyListeners.indexOf(handler) < 0) {\r\n        self.eventsAnyListeners[method](handler);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    offAny(handler) {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (!self.eventsAnyListeners) return self;\r\n      const index = self.eventsAnyListeners.indexOf(handler);\r\n\r\n      if (index >= 0) {\r\n        self.eventsAnyListeners.splice(index, 1);\r\n      }\r\n\r\n      return self;\r\n    },\r\n\r\n    off(events, handler) {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (!self.eventsListeners) return self;\r\n      events.split(' ').forEach(event => {\r\n        if (typeof handler === 'undefined') {\r\n          self.eventsListeners[event] = [];\r\n        } else if (self.eventsListeners[event]) {\r\n          self.eventsListeners[event].forEach((eventHandler, index) => {\r\n            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\r\n              self.eventsListeners[event].splice(index, 1);\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return self;\r\n    },\r\n\r\n    emit() {\r\n      const self = this;\r\n      if (!self.eventsListeners || self.destroyed) return self;\r\n      if (!self.eventsListeners) return self;\r\n      let events;\r\n      let data;\r\n      let context;\r\n\r\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n        events = args[0];\r\n        data = args.slice(1, args.length);\r\n        context = self;\r\n      } else {\r\n        events = args[0].events;\r\n        data = args[0].data;\r\n        context = args[0].context || self;\r\n      }\r\n\r\n      data.unshift(context);\r\n      const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n      eventsArray.forEach(event => {\r\n        if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\r\n          self.eventsAnyListeners.forEach(eventHandler => {\r\n            eventHandler.apply(context, [event, ...data]);\r\n          });\r\n        }\r\n\r\n        if (self.eventsListeners && self.eventsListeners[event]) {\r\n          self.eventsListeners[event].forEach(eventHandler => {\r\n            eventHandler.apply(context, data);\r\n          });\r\n        }\r\n      });\r\n      return self;\r\n    }\r\n\r\n  };\r\n\r\n  function updateSize() {\r\n    const swiper = this;\r\n    let width;\r\n    let height;\r\n    const $el = swiper.$el;\r\n\r\n    if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\r\n      width = swiper.params.width;\r\n    } else {\r\n      width = $el[0].clientWidth;\r\n    }\r\n\r\n    if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\r\n      height = swiper.params.height;\r\n    } else {\r\n      height = $el[0].clientHeight;\r\n    }\r\n\r\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\r\n      return;\r\n    } // Subtract paddings\r\n\r\n\r\n    width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\r\n    height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\r\n    if (Number.isNaN(width)) width = 0;\r\n    if (Number.isNaN(height)) height = 0;\r\n    Object.assign(swiper, {\r\n      width,\r\n      height,\r\n      size: swiper.isHorizontal() ? width : height\r\n    });\r\n  }\r\n\r\n  function updateSlides() {\r\n    const swiper = this;\r\n\r\n    function getDirectionLabel(property) {\r\n      if (swiper.isHorizontal()) {\r\n        return property;\r\n      } // prettier-ignore\r\n\r\n\r\n      return {\r\n        'width': 'height',\r\n        'margin-top': 'margin-left',\r\n        'margin-bottom ': 'margin-right',\r\n        'margin-left': 'margin-top',\r\n        'margin-right': 'margin-bottom',\r\n        'padding-left': 'padding-top',\r\n        'padding-right': 'padding-bottom',\r\n        'marginRight': 'marginBottom'\r\n      }[property];\r\n    }\r\n\r\n    function getDirectionPropertyValue(node, label) {\r\n      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\r\n    }\r\n\r\n    const params = swiper.params;\r\n    const {\r\n      $wrapperEl,\r\n      size: swiperSize,\r\n      rtlTranslate: rtl,\r\n      wrongRTL\r\n    } = swiper;\r\n    const isVirtual = swiper.virtual && params.virtual.enabled;\r\n    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n    const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\r\n    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n    let snapGrid = [];\r\n    const slidesGrid = [];\r\n    const slidesSizesGrid = [];\r\n    let offsetBefore = params.slidesOffsetBefore;\r\n\r\n    if (typeof offsetBefore === 'function') {\r\n      offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n    }\r\n\r\n    let offsetAfter = params.slidesOffsetAfter;\r\n\r\n    if (typeof offsetAfter === 'function') {\r\n      offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n    }\r\n\r\n    const previousSnapGridLength = swiper.snapGrid.length;\r\n    const previousSlidesGridLength = swiper.slidesGrid.length;\r\n    let spaceBetween = params.spaceBetween;\r\n    let slidePosition = -offsetBefore;\r\n    let prevSlideSize = 0;\r\n    let index = 0;\r\n\r\n    if (typeof swiperSize === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n      spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\r\n    }\r\n\r\n    swiper.virtualSize = -spaceBetween; // reset margins\r\n\r\n    if (rtl) slides.css({\r\n      marginLeft: '',\r\n      marginBottom: '',\r\n      marginTop: ''\r\n    }); else slides.css({\r\n      marginRight: '',\r\n      marginBottom: '',\r\n      marginTop: ''\r\n    }); // reset cssMode offsets\r\n\r\n    if (params.centeredSlides && params.cssMode) {\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\r\n    }\r\n\r\n    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\r\n\r\n    if (gridEnabled) {\r\n      swiper.grid.initSlides(slidesLength);\r\n    } // Calc slides\r\n\r\n\r\n    let slideSize;\r\n    const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\r\n      return typeof params.breakpoints[key].slidesPerView !== 'undefined';\r\n    }).length > 0;\r\n\r\n    for (let i = 0; i < slidesLength; i += 1) {\r\n      slideSize = 0;\r\n      const slide = slides.eq(i);\r\n\r\n      if (gridEnabled) {\r\n        swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\r\n      }\r\n\r\n      if (slide.css('display') === 'none') continue; // eslint-disable-line\r\n\r\n      if (params.slidesPerView === 'auto') {\r\n        if (shouldResetSlideSize) {\r\n          slides[i].style[getDirectionLabel('width')] = ``;\r\n        }\r\n\r\n        const slideStyles = getComputedStyle(slide[0]);\r\n        const currentTransform = slide[0].style.transform;\r\n        const currentWebKitTransform = slide[0].style.webkitTransform;\r\n\r\n        if (currentTransform) {\r\n          slide[0].style.transform = 'none';\r\n        }\r\n\r\n        if (currentWebKitTransform) {\r\n          slide[0].style.webkitTransform = 'none';\r\n        }\r\n\r\n        if (params.roundLengths) {\r\n          slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\r\n        } else {\r\n          // eslint-disable-next-line\r\n          const width = getDirectionPropertyValue(slideStyles, 'width');\r\n          const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\r\n          const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\r\n          const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\r\n          const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n\r\n          if (boxSizing && boxSizing === 'border-box') {\r\n            slideSize = width + marginLeft + marginRight;\r\n          } else {\r\n            const {\r\n              clientWidth,\r\n              offsetWidth\r\n            } = slide[0];\r\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\r\n          }\r\n        }\r\n\r\n        if (currentTransform) {\r\n          slide[0].style.transform = currentTransform;\r\n        }\r\n\r\n        if (currentWebKitTransform) {\r\n          slide[0].style.webkitTransform = currentWebKitTransform;\r\n        }\r\n\r\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n      } else {\r\n        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\r\n        if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n\r\n        if (slides[i]) {\r\n          slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\r\n        }\r\n      }\r\n\r\n      if (slides[i]) {\r\n        slides[i].swiperSlideSize = slideSize;\r\n      }\r\n\r\n      slidesSizesGrid.push(slideSize);\r\n\r\n      if (params.centeredSlides) {\r\n        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\r\n        if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n        if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\r\n        if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n        if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n        slidesGrid.push(slidePosition);\r\n      } else {\r\n        if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n        slidesGrid.push(slidePosition);\r\n        slidePosition = slidePosition + slideSize + spaceBetween;\r\n      }\r\n\r\n      swiper.virtualSize += slideSize + spaceBetween;\r\n      prevSlideSize = slideSize;\r\n      index += 1;\r\n    }\r\n\r\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n\r\n    if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n      $wrapperEl.css({\r\n        width: `${swiper.virtualSize + params.spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (params.setWrapperSize) {\r\n      $wrapperEl.css({\r\n        [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (gridEnabled) {\r\n      swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\r\n    } // Remove last grid elements depending on width\r\n\r\n\r\n    if (!params.centeredSlides) {\r\n      const newSlidesGrid = [];\r\n\r\n      for (let i = 0; i < snapGrid.length; i += 1) {\r\n        let slidesGridItem = snapGrid[i];\r\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n\r\n        if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n          newSlidesGrid.push(slidesGridItem);\r\n        }\r\n      }\r\n\r\n      snapGrid = newSlidesGrid;\r\n\r\n      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n        snapGrid.push(swiper.virtualSize - swiperSize);\r\n      }\r\n    }\r\n\r\n    if (snapGrid.length === 0) snapGrid = [0];\r\n\r\n    if (params.spaceBetween !== 0) {\r\n      const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\r\n      slides.filter((_, slideIndex) => {\r\n        if (!params.cssMode) return true;\r\n\r\n        if (slideIndex === slides.length - 1) {\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      }).css({\r\n        [key]: `${spaceBetween}px`\r\n      });\r\n    }\r\n\r\n    if (params.centeredSlides && params.centeredSlidesBounds) {\r\n      let allSlidesSize = 0;\r\n      slidesSizesGrid.forEach(slideSizeValue => {\r\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n      });\r\n      allSlidesSize -= params.spaceBetween;\r\n      const maxSnap = allSlidesSize - swiperSize;\r\n      snapGrid = snapGrid.map(snap => {\r\n        if (snap < 0) return -offsetBefore;\r\n        if (snap > maxSnap) return maxSnap + offsetAfter;\r\n        return snap;\r\n      });\r\n    }\r\n\r\n    if (params.centerInsufficientSlides) {\r\n      let allSlidesSize = 0;\r\n      slidesSizesGrid.forEach(slideSizeValue => {\r\n        allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n      });\r\n      allSlidesSize -= params.spaceBetween;\r\n\r\n      if (allSlidesSize < swiperSize) {\r\n        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n        snapGrid.forEach((snap, snapIndex) => {\r\n          snapGrid[snapIndex] = snap - allSlidesOffset;\r\n        });\r\n        slidesGrid.forEach((snap, snapIndex) => {\r\n          slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n        });\r\n      }\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      slides,\r\n      snapGrid,\r\n      slidesGrid,\r\n      slidesSizesGrid\r\n    });\r\n\r\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\r\n      setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\r\n      const addToSnapGrid = -swiper.snapGrid[0];\r\n      const addToSlidesGrid = -swiper.slidesGrid[0];\r\n      swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\r\n      swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\r\n    }\r\n\r\n    if (slidesLength !== previousSlidesLength) {\r\n      swiper.emit('slidesLengthChange');\r\n    }\r\n\r\n    if (snapGrid.length !== previousSnapGridLength) {\r\n      if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n      swiper.emit('snapGridLengthChange');\r\n    }\r\n\r\n    if (slidesGrid.length !== previousSlidesGridLength) {\r\n      swiper.emit('slidesGridLengthChange');\r\n    }\r\n\r\n    if (params.watchSlidesProgress) {\r\n      swiper.updateSlidesOffset();\r\n    }\r\n\r\n    if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\r\n      const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\r\n      const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\r\n\r\n      if (slidesLength <= params.maxBackfaceHiddenSlides) {\r\n        if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\r\n      } else if (hasClassBackfaceClassAdded) {\r\n        swiper.$el.removeClass(backFaceHiddenClass);\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateAutoHeight(speed) {\r\n    const swiper = this;\r\n    const activeSlides = [];\r\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n    let newHeight = 0;\r\n    let i;\r\n\r\n    if (typeof speed === 'number') {\r\n      swiper.setTransition(speed);\r\n    } else if (speed === true) {\r\n      swiper.setTransition(swiper.params.speed);\r\n    }\r\n\r\n    const getSlideByIndex = index => {\r\n      if (isVirtual) {\r\n        return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\r\n      }\r\n\r\n      return swiper.slides.eq(index)[0];\r\n    }; // Find slides currently in view\r\n\r\n\r\n    if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n      if (swiper.params.centeredSlides) {\r\n        (swiper.visibleSlides || $([])).each(slide => {\r\n          activeSlides.push(slide);\r\n        });\r\n      } else {\r\n        for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n          const index = swiper.activeIndex + i;\r\n          if (index > swiper.slides.length && !isVirtual) break;\r\n          activeSlides.push(getSlideByIndex(index));\r\n        }\r\n      }\r\n    } else {\r\n      activeSlides.push(getSlideByIndex(swiper.activeIndex));\r\n    } // Find new height from highest slide in view\r\n\r\n\r\n    for (i = 0; i < activeSlides.length; i += 1) {\r\n      if (typeof activeSlides[i] !== 'undefined') {\r\n        const height = activeSlides[i].offsetHeight;\r\n        newHeight = height > newHeight ? height : newHeight;\r\n      }\r\n    } // Update Height\r\n\r\n\r\n    if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\r\n  }\r\n\r\n  function updateSlidesOffset() {\r\n    const swiper = this;\r\n    const slides = swiper.slides;\r\n\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n    }\r\n  }\r\n\r\n  function updateSlidesProgress(translate) {\r\n    if (translate === void 0) {\r\n      translate = this && this.translate || 0;\r\n    }\r\n\r\n    const swiper = this;\r\n    const params = swiper.params;\r\n    const {\r\n      slides,\r\n      rtlTranslate: rtl,\r\n      snapGrid\r\n    } = swiper;\r\n    if (slides.length === 0) return;\r\n    if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n    let offsetCenter = -translate;\r\n    if (rtl) offsetCenter = translate; // Visible Slides\r\n\r\n    slides.removeClass(params.slideVisibleClass);\r\n    swiper.visibleSlidesIndexes = [];\r\n    swiper.visibleSlides = [];\r\n\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      const slide = slides[i];\r\n      let slideOffset = slide.swiperSlideOffset;\r\n\r\n      if (params.cssMode && params.centeredSlides) {\r\n        slideOffset -= slides[0].swiperSlideOffset;\r\n      }\r\n\r\n      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n      const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\r\n      const slideBefore = -(offsetCenter - slideOffset);\r\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\r\n\r\n      if (isVisible) {\r\n        swiper.visibleSlides.push(slide);\r\n        swiper.visibleSlidesIndexes.push(i);\r\n        slides.eq(i).addClass(params.slideVisibleClass);\r\n      }\r\n\r\n      slide.progress = rtl ? -slideProgress : slideProgress;\r\n      slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\r\n    }\r\n\r\n    swiper.visibleSlides = $(swiper.visibleSlides);\r\n  }\r\n\r\n  function updateProgress(translate) {\r\n    const swiper = this;\r\n\r\n    if (typeof translate === 'undefined') {\r\n      const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\r\n\r\n      translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\r\n    }\r\n\r\n    const params = swiper.params;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n    let {\r\n      progress,\r\n      isBeginning,\r\n      isEnd\r\n    } = swiper;\r\n    const wasBeginning = isBeginning;\r\n    const wasEnd = isEnd;\r\n\r\n    if (translatesDiff === 0) {\r\n      progress = 0;\r\n      isBeginning = true;\r\n      isEnd = true;\r\n    } else {\r\n      progress = (translate - swiper.minTranslate()) / translatesDiff;\r\n      isBeginning = progress <= 0;\r\n      isEnd = progress >= 1;\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      progress,\r\n      isBeginning,\r\n      isEnd\r\n    });\r\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\r\n\r\n    if (isBeginning && !wasBeginning) {\r\n      swiper.emit('reachBeginning toEdge');\r\n    }\r\n\r\n    if (isEnd && !wasEnd) {\r\n      swiper.emit('reachEnd toEdge');\r\n    }\r\n\r\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\r\n      swiper.emit('fromEdge');\r\n    }\r\n\r\n    swiper.emit('progress', progress);\r\n  }\r\n\r\n  function updateSlidesClasses() {\r\n    const swiper = this;\r\n    const {\r\n      slides,\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex,\r\n      realIndex\r\n    } = swiper;\r\n    const isVirtual = swiper.virtual && params.virtual.enabled;\r\n    slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\r\n    let activeSlide;\r\n\r\n    if (isVirtual) {\r\n      activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n    } else {\r\n      activeSlide = slides.eq(activeIndex);\r\n    } // Active classes\r\n\r\n\r\n    activeSlide.addClass(params.slideActiveClass);\r\n\r\n    if (params.loop) {\r\n      // Duplicate to all looped slides\r\n      if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\r\n      }\r\n    } // Next Slide\r\n\r\n\r\n    let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\r\n\r\n    if (params.loop && nextSlide.length === 0) {\r\n      nextSlide = slides.eq(0);\r\n      nextSlide.addClass(params.slideNextClass);\r\n    } // Prev Slide\r\n\r\n\r\n    let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\r\n\r\n    if (params.loop && prevSlide.length === 0) {\r\n      prevSlide = slides.eq(-1);\r\n      prevSlide.addClass(params.slidePrevClass);\r\n    }\r\n\r\n    if (params.loop) {\r\n      // Duplicate to all looped slides\r\n      if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\r\n      }\r\n\r\n      if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n        $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\r\n      } else {\r\n        $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\r\n      }\r\n    }\r\n\r\n    swiper.emitSlidesClasses();\r\n  }\r\n\r\n  function updateActiveIndex(newActiveIndex) {\r\n    const swiper = this;\r\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n    const {\r\n      slidesGrid,\r\n      snapGrid,\r\n      params,\r\n      activeIndex: previousIndex,\r\n      realIndex: previousRealIndex,\r\n      snapIndex: previousSnapIndex\r\n    } = swiper;\r\n    let activeIndex = newActiveIndex;\r\n    let snapIndex;\r\n\r\n    if (typeof activeIndex === 'undefined') {\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\r\n            activeIndex = i;\r\n          } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n            activeIndex = i + 1;\r\n          }\r\n        } else if (translate >= slidesGrid[i]) {\r\n          activeIndex = i;\r\n        }\r\n      } // Normalize slideIndex\r\n\r\n\r\n      if (params.normalizeSlideIndex) {\r\n        if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n      }\r\n    }\r\n\r\n    if (snapGrid.indexOf(translate) >= 0) {\r\n      snapIndex = snapGrid.indexOf(translate);\r\n    } else {\r\n      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\r\n      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\r\n    }\r\n\r\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n    if (activeIndex === previousIndex) {\r\n      if (snapIndex !== previousSnapIndex) {\r\n        swiper.snapIndex = snapIndex;\r\n        swiper.emit('snapIndexChange');\r\n      }\r\n\r\n      return;\r\n    } // Get real index\r\n\r\n\r\n    const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n    Object.assign(swiper, {\r\n      snapIndex,\r\n      realIndex,\r\n      previousIndex,\r\n      activeIndex\r\n    });\r\n    swiper.emit('activeIndexChange');\r\n    swiper.emit('snapIndexChange');\r\n\r\n    if (previousRealIndex !== realIndex) {\r\n      swiper.emit('realIndexChange');\r\n    }\r\n\r\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) {\r\n      swiper.emit('slideChange');\r\n    }\r\n  }\r\n\r\n  function updateClickedSlide(e) {\r\n    const swiper = this;\r\n    const params = swiper.params;\r\n    const slide = $(e).closest(`.${params.slideClass}`)[0];\r\n    let slideFound = false;\r\n    let slideIndex;\r\n\r\n    if (slide) {\r\n      for (let i = 0; i < swiper.slides.length; i += 1) {\r\n        if (swiper.slides[i] === slide) {\r\n          slideFound = true;\r\n          slideIndex = i;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (slide && slideFound) {\r\n      swiper.clickedSlide = slide;\r\n\r\n      if (swiper.virtual && swiper.params.virtual.enabled) {\r\n        swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n      } else {\r\n        swiper.clickedIndex = slideIndex;\r\n      }\r\n    } else {\r\n      swiper.clickedSlide = undefined;\r\n      swiper.clickedIndex = undefined;\r\n      return;\r\n    }\r\n\r\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n      swiper.slideToClickedSlide();\r\n    }\r\n  }\r\n\r\n  var update = {\r\n    updateSize,\r\n    updateSlides,\r\n    updateAutoHeight,\r\n    updateSlidesOffset,\r\n    updateSlidesProgress,\r\n    updateProgress,\r\n    updateSlidesClasses,\r\n    updateActiveIndex,\r\n    updateClickedSlide\r\n  };\r\n\r\n  function getSwiperTranslate(axis) {\r\n    if (axis === void 0) {\r\n      axis = this.isHorizontal() ? 'x' : 'y';\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      rtlTranslate: rtl,\r\n      translate,\r\n      $wrapperEl\r\n    } = swiper;\r\n\r\n    if (params.virtualTranslate) {\r\n      return rtl ? -translate : translate;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      return translate;\r\n    }\r\n\r\n    let currentTranslate = getTranslate($wrapperEl[0], axis);\r\n    if (rtl) currentTranslate = -currentTranslate;\r\n    return currentTranslate || 0;\r\n  }\r\n\r\n  function setTranslate(translate, byController) {\r\n    const swiper = this;\r\n    const {\r\n      rtlTranslate: rtl,\r\n      params,\r\n      $wrapperEl,\r\n      wrapperEl,\r\n      progress\r\n    } = swiper;\r\n    let x = 0;\r\n    let y = 0;\r\n    const z = 0;\r\n\r\n    if (swiper.isHorizontal()) {\r\n      x = rtl ? -translate : translate;\r\n    } else {\r\n      y = translate;\r\n    }\r\n\r\n    if (params.roundLengths) {\r\n      x = Math.floor(x);\r\n      y = Math.floor(y);\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\r\n    } else if (!params.virtualTranslate) {\r\n      $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\r\n    }\r\n\r\n    swiper.previousTranslate = swiper.translate;\r\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\r\n\r\n    let newProgress;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n    if (translatesDiff === 0) {\r\n      newProgress = 0;\r\n    } else {\r\n      newProgress = (translate - swiper.minTranslate()) / translatesDiff;\r\n    }\r\n\r\n    if (newProgress !== progress) {\r\n      swiper.updateProgress(translate);\r\n    }\r\n\r\n    swiper.emit('setTranslate', swiper.translate, byController);\r\n  }\r\n\r\n  function minTranslate() {\r\n    return -this.snapGrid[0];\r\n  }\r\n\r\n  function maxTranslate() {\r\n    return -this.snapGrid[this.snapGrid.length - 1];\r\n  }\r\n\r\n  function translateTo(translate, speed, runCallbacks, translateBounds, internal) {\r\n    if (translate === void 0) {\r\n      translate = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (translateBounds === void 0) {\r\n      translateBounds = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      wrapperEl\r\n    } = swiper;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n      return false;\r\n    }\r\n\r\n    const minTranslate = swiper.minTranslate();\r\n    const maxTranslate = swiper.maxTranslate();\r\n    let newTranslate;\r\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate; else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate; else newTranslate = translate; // Update progress\r\n\r\n    swiper.updateProgress(newTranslate);\r\n\r\n    if (params.cssMode) {\r\n      const isH = swiper.isHorizontal();\r\n\r\n      if (speed === 0) {\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\r\n      } else {\r\n        if (!swiper.support.smoothScroll) {\r\n          animateCSSModeScroll({\r\n            swiper,\r\n            targetPosition: -newTranslate,\r\n            side: isH ? 'left' : 'top'\r\n          });\r\n          return true;\r\n        }\r\n\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: -newTranslate,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    if (speed === 0) {\r\n      swiper.setTransition(0);\r\n      swiper.setTranslate(newTranslate);\r\n\r\n      if (runCallbacks) {\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.emit('transitionEnd');\r\n      }\r\n    } else {\r\n      swiper.setTransition(speed);\r\n      swiper.setTranslate(newTranslate);\r\n\r\n      if (runCallbacks) {\r\n        swiper.emit('beforeTransitionStart', speed, internal);\r\n        swiper.emit('transitionStart');\r\n      }\r\n\r\n      if (!swiper.animating) {\r\n        swiper.animating = true;\r\n\r\n        if (!swiper.onTranslateToWrapperTransitionEnd) {\r\n          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\r\n            if (!swiper || swiper.destroyed) return;\r\n            if (e.target !== this) return;\r\n            swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n            swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n            swiper.onTranslateToWrapperTransitionEnd = null;\r\n            delete swiper.onTranslateToWrapperTransitionEnd;\r\n\r\n            if (runCallbacks) {\r\n              swiper.emit('transitionEnd');\r\n            }\r\n          };\r\n        }\r\n\r\n        swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\r\n        swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  var translate = {\r\n    getTranslate: getSwiperTranslate,\r\n    setTranslate,\r\n    minTranslate,\r\n    maxTranslate,\r\n    translateTo\r\n  };\r\n\r\n  function setTransition(duration, byController) {\r\n    const swiper = this;\r\n\r\n    if (!swiper.params.cssMode) {\r\n      swiper.$wrapperEl.transition(duration);\r\n    }\r\n\r\n    swiper.emit('setTransition', duration, byController);\r\n  }\r\n\r\n  function transitionEmit(_ref) {\r\n    let {\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step\r\n    } = _ref;\r\n    const {\r\n      activeIndex,\r\n      previousIndex\r\n    } = swiper;\r\n    let dir = direction;\r\n\r\n    if (!dir) {\r\n      if (activeIndex > previousIndex) dir = 'next'; else if (activeIndex < previousIndex) dir = 'prev'; else dir = 'reset';\r\n    }\r\n\r\n    swiper.emit(`transition${step}`);\r\n\r\n    if (runCallbacks && activeIndex !== previousIndex) {\r\n      if (dir === 'reset') {\r\n        swiper.emit(`slideResetTransition${step}`);\r\n        return;\r\n      }\r\n\r\n      swiper.emit(`slideChangeTransition${step}`);\r\n\r\n      if (dir === 'next') {\r\n        swiper.emit(`slideNextTransition${step}`);\r\n      } else {\r\n        swiper.emit(`slidePrevTransition${step}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  function transitionStart(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params\r\n    } = swiper;\r\n    if (params.cssMode) return;\r\n\r\n    if (params.autoHeight) {\r\n      swiper.updateAutoHeight();\r\n    }\r\n\r\n    transitionEmit({\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step: 'Start'\r\n    });\r\n  }\r\n\r\n  function transitionEnd(runCallbacks, direction) {\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params\r\n    } = swiper;\r\n    swiper.animating = false;\r\n    if (params.cssMode) return;\r\n    swiper.setTransition(0);\r\n    transitionEmit({\r\n      swiper,\r\n      runCallbacks,\r\n      direction,\r\n      step: 'End'\r\n    });\r\n  }\r\n\r\n  var transition = {\r\n    setTransition,\r\n    transitionStart,\r\n    transitionEnd\r\n  };\r\n\r\n  function slideTo(index, speed, runCallbacks, internal, initial) {\r\n    if (index === void 0) {\r\n      index = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (typeof index !== 'number' && typeof index !== 'string') {\r\n      throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\r\n    }\r\n\r\n    if (typeof index === 'string') {\r\n      /**\r\n       * The `index` argument converted from `string` to `number`.\r\n       * @type {number}\r\n       */\r\n      const indexAsNumber = parseInt(index, 10);\r\n      /**\r\n       * Determines whether the `index` argument is a valid `number`\r\n       * after being converted from the `string` type.\r\n       * @type {boolean}\r\n       */\r\n\r\n      const isValidNumber = isFinite(indexAsNumber);\r\n\r\n      if (!isValidNumber) {\r\n        throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\r\n      } // Knowing that the converted `index` is a valid number,\r\n      // we can update the original argument's value.\r\n\r\n\r\n      index = indexAsNumber;\r\n    }\r\n\r\n    const swiper = this;\r\n    let slideIndex = index;\r\n    if (slideIndex < 0) slideIndex = 0;\r\n    const {\r\n      params,\r\n      snapGrid,\r\n      slidesGrid,\r\n      previousIndex,\r\n      activeIndex,\r\n      rtlTranslate: rtl,\r\n      wrapperEl,\r\n      enabled\r\n    } = swiper;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\r\n      return false;\r\n    }\r\n\r\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\r\n    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\r\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n    const translate = -snapGrid[snapIndex]; // Normalize slideIndex\r\n\r\n    if (params.normalizeSlideIndex) {\r\n      for (let i = 0; i < slidesGrid.length; i += 1) {\r\n        const normalizedTranslate = -Math.floor(translate * 100);\r\n        const normalizedGrid = Math.floor(slidesGrid[i] * 100);\r\n        const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\r\n\r\n        if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\r\n            slideIndex = i;\r\n          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\r\n            slideIndex = i + 1;\r\n          }\r\n        } else if (normalizedTranslate >= normalizedGrid) {\r\n          slideIndex = i;\r\n        }\r\n      }\r\n    } // Directions locks\r\n\r\n\r\n    if (swiper.initialized && slideIndex !== activeIndex) {\r\n      if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n        return false;\r\n      }\r\n\r\n      if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n        if ((activeIndex || 0) !== slideIndex) return false;\r\n      }\r\n    }\r\n\r\n    if (slideIndex !== (previousIndex || 0) && runCallbacks) {\r\n      swiper.emit('beforeSlideChangeStart');\r\n    } // Update progress\r\n\r\n\r\n    swiper.updateProgress(translate);\r\n    let direction;\r\n    if (slideIndex > activeIndex) direction = 'next'; else if (slideIndex < activeIndex) direction = 'prev'; else direction = 'reset'; // Update Index\r\n\r\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\r\n      swiper.updateActiveIndex(slideIndex); // Update Height\r\n\r\n      if (params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n\r\n      swiper.updateSlidesClasses();\r\n\r\n      if (params.effect !== 'slide') {\r\n        swiper.setTranslate(translate);\r\n      }\r\n\r\n      if (direction !== 'reset') {\r\n        swiper.transitionStart(runCallbacks, direction);\r\n        swiper.transitionEnd(runCallbacks, direction);\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      const isH = swiper.isHorizontal();\r\n      const t = rtl ? translate : -translate;\r\n\r\n      if (speed === 0) {\r\n        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n\r\n        if (isVirtual) {\r\n          swiper.wrapperEl.style.scrollSnapType = 'none';\r\n          swiper._immediateVirtual = true;\r\n        }\r\n\r\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\r\n\r\n        if (isVirtual) {\r\n          requestAnimationFrame(() => {\r\n            swiper.wrapperEl.style.scrollSnapType = '';\r\n            swiper._swiperImmediateVirtual = false;\r\n          });\r\n        }\r\n      } else {\r\n        if (!swiper.support.smoothScroll) {\r\n          animateCSSModeScroll({\r\n            swiper,\r\n            targetPosition: t,\r\n            side: isH ? 'left' : 'top'\r\n          });\r\n          return true;\r\n        }\r\n\r\n        wrapperEl.scrollTo({\r\n          [isH ? 'left' : 'top']: t,\r\n          behavior: 'smooth'\r\n        });\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    swiper.setTransition(speed);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n\r\n    if (speed === 0) {\r\n      swiper.transitionEnd(runCallbacks, direction);\r\n    } else if (!swiper.animating) {\r\n      swiper.animating = true;\r\n\r\n      if (!swiper.onSlideToWrapperTransitionEnd) {\r\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.onSlideToWrapperTransitionEnd = null;\r\n          delete swiper.onSlideToWrapperTransitionEnd;\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        };\r\n      }\r\n\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  function slideToLoop(index, speed, runCallbacks, internal) {\r\n    if (index === void 0) {\r\n      index = 0;\r\n    }\r\n\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (typeof index === 'string') {\r\n      /**\r\n       * The `index` argument converted from `string` to `number`.\r\n       * @type {number}\r\n       */\r\n      const indexAsNumber = parseInt(index, 10);\r\n      /**\r\n       * Determines whether the `index` argument is a valid `number`\r\n       * after being converted from the `string` type.\r\n       * @type {boolean}\r\n       */\r\n\r\n      const isValidNumber = isFinite(indexAsNumber);\r\n\r\n      if (!isValidNumber) {\r\n        throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\r\n      } // Knowing that the converted `index` is a valid number,\r\n      // we can update the original argument's value.\r\n\r\n\r\n      index = indexAsNumber;\r\n    }\r\n\r\n    const swiper = this;\r\n    let newIndex = index;\r\n\r\n    if (swiper.params.loop) {\r\n      newIndex += swiper.loopedSlides;\r\n    }\r\n\r\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideNext(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      animating,\r\n      enabled,\r\n      params\r\n    } = swiper;\r\n    if (!enabled) return swiper;\r\n    let perGroup = params.slidesPerGroup;\r\n\r\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n      perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\r\n    }\r\n\r\n    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\r\n\r\n    if (params.loop) {\r\n      if (animating && params.loopPreventsSlide) return false;\r\n      swiper.loopFix(); // eslint-disable-next-line\r\n\r\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    }\r\n\r\n    if (params.rewind && swiper.isEnd) {\r\n      return swiper.slideTo(0, speed, runCallbacks, internal);\r\n    }\r\n\r\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slidePrev(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      animating,\r\n      snapGrid,\r\n      slidesGrid,\r\n      rtlTranslate,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return swiper;\r\n\r\n    if (params.loop) {\r\n      if (animating && params.loopPreventsSlide) return false;\r\n      swiper.loopFix(); // eslint-disable-next-line\r\n\r\n      swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    }\r\n\r\n    const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n    function normalize(val) {\r\n      if (val < 0) return -Math.floor(Math.abs(val));\r\n      return Math.floor(val);\r\n    }\r\n\r\n    const normalizedTranslate = normalize(translate);\r\n    const normalizedSnapGrid = snapGrid.map(val => normalize(val));\r\n    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n\r\n    if (typeof prevSnap === 'undefined' && params.cssMode) {\r\n      let prevSnapIndex;\r\n      snapGrid.forEach((snap, snapIndex) => {\r\n        if (normalizedTranslate >= snap) {\r\n          // prevSnap = snap;\r\n          prevSnapIndex = snapIndex;\r\n        }\r\n      });\r\n\r\n      if (typeof prevSnapIndex !== 'undefined') {\r\n        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\r\n      }\r\n    }\r\n\r\n    let prevIndex = 0;\r\n\r\n    if (typeof prevSnap !== 'undefined') {\r\n      prevIndex = slidesGrid.indexOf(prevSnap);\r\n      if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n\r\n      if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\r\n        prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\r\n        prevIndex = Math.max(prevIndex, 0);\r\n      }\r\n    }\r\n\r\n    if (params.rewind && swiper.isBeginning) {\r\n      const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n      return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\r\n    }\r\n\r\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideReset(speed, runCallbacks, internal) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    const swiper = this;\r\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n  }\r\n\r\n  /* eslint no-unused-vars: \"off\" */\r\n  function slideToClosest(speed, runCallbacks, internal, threshold) {\r\n    if (speed === void 0) {\r\n      speed = this.params.speed;\r\n    }\r\n\r\n    if (runCallbacks === void 0) {\r\n      runCallbacks = true;\r\n    }\r\n\r\n    if (threshold === void 0) {\r\n      threshold = 0.5;\r\n    }\r\n\r\n    const swiper = this;\r\n    let index = swiper.activeIndex;\r\n    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\r\n    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\r\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n    if (translate >= swiper.snapGrid[snapIndex]) {\r\n      // The current translate is on or after the current snap index, so the choice\r\n      // is between the current index and the one after it.\r\n      const currentSnap = swiper.snapGrid[snapIndex];\r\n      const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n\r\n      if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\r\n        index += swiper.params.slidesPerGroup;\r\n      }\r\n    } else {\r\n      // The current translate is before the current snap index, so the choice\r\n      // is between the current index and the one before it.\r\n      const prevSnap = swiper.snapGrid[snapIndex - 1];\r\n      const currentSnap = swiper.snapGrid[snapIndex];\r\n\r\n      if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\r\n        index -= swiper.params.slidesPerGroup;\r\n      }\r\n    }\r\n\r\n    index = Math.max(index, 0);\r\n    index = Math.min(index, swiper.slidesGrid.length - 1);\r\n    return swiper.slideTo(index, speed, runCallbacks, internal);\r\n  }\r\n\r\n  function slideToClickedSlide() {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl\r\n    } = swiper;\r\n    const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n    let slideToIndex = swiper.clickedIndex;\r\n    let realIndex;\r\n\r\n    if (params.loop) {\r\n      if (swiper.animating) return;\r\n      realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n\r\n      if (params.centeredSlides) {\r\n        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\r\n          swiper.loopFix();\r\n          slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\r\n          nextTick(() => {\r\n            swiper.slideTo(slideToIndex);\r\n          });\r\n        } else {\r\n          swiper.slideTo(slideToIndex);\r\n        }\r\n      } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n        swiper.loopFix();\r\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\r\n        nextTick(() => {\r\n          swiper.slideTo(slideToIndex);\r\n        });\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    } else {\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n  }\r\n\r\n  var slide = {\r\n    slideTo,\r\n    slideToLoop,\r\n    slideNext,\r\n    slidePrev,\r\n    slideReset,\r\n    slideToClosest,\r\n    slideToClickedSlide\r\n  };\r\n\r\n  function loopCreate() {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      $wrapperEl\r\n    } = swiper; // Remove duplicated slides\r\n\r\n    const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\r\n    $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\r\n    let slides = $selector.children(`.${params.slideClass}`);\r\n\r\n    if (params.loopFillGroupWithBlank) {\r\n      const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\r\n\r\n      if (blankSlidesNum !== params.slidesPerGroup) {\r\n        for (let i = 0; i < blankSlidesNum; i += 1) {\r\n          const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\r\n          $selector.append(blankNode);\r\n        }\r\n\r\n        slides = $selector.children(`.${params.slideClass}`);\r\n      }\r\n    }\r\n\r\n    if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\r\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\r\n    swiper.loopedSlides += params.loopAdditionalSlides;\r\n\r\n    if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\r\n      swiper.loopedSlides = slides.length;\r\n    }\r\n\r\n    const prependSlides = [];\r\n    const appendSlides = [];\r\n    slides.each((el, index) => {\r\n      const slide = $(el);\r\n      slide.attr('data-swiper-slide-index', index);\r\n    });\r\n\r\n    for (let i = 0; i < swiper.loopedSlides; i += 1) {\r\n      const index = i - Math.floor(i / slides.length) * slides.length;\r\n      appendSlides.push(slides.eq(index)[0]);\r\n      prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\r\n    }\r\n\r\n    for (let i = 0; i < appendSlides.length; i += 1) {\r\n      $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n\r\n    for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\r\n      $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n    }\r\n  }\r\n\r\n  function loopFix() {\r\n    const swiper = this;\r\n    swiper.emit('beforeLoopFix');\r\n    const {\r\n      activeIndex,\r\n      slides,\r\n      loopedSlides,\r\n      allowSlidePrev,\r\n      allowSlideNext,\r\n      snapGrid,\r\n      rtlTranslate: rtl\r\n    } = swiper;\r\n    let newIndex;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.allowSlideNext = true;\r\n    const snapTranslate = -snapGrid[activeIndex];\r\n    const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\r\n\r\n    if (activeIndex < loopedSlides) {\r\n      newIndex = slides.length - loopedSlides * 3 + activeIndex;\r\n      newIndex += loopedSlides;\r\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n      if (slideChanged && diff !== 0) {\r\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n      }\r\n    } else if (activeIndex >= slides.length - loopedSlides) {\r\n      // Fix For Positive Oversliding\r\n      newIndex = -slides.length + activeIndex + loopedSlides;\r\n      newIndex += loopedSlides;\r\n      const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n\r\n      if (slideChanged && diff !== 0) {\r\n        swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n      }\r\n    }\r\n\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n    swiper.emit('loopFix');\r\n  }\r\n\r\n  function loopDestroy() {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params,\r\n      slides\r\n    } = swiper;\r\n    $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\r\n    slides.removeAttr('data-swiper-slide-index');\r\n  }\r\n\r\n  var loop = {\r\n    loopCreate,\r\n    loopFix,\r\n    loopDestroy\r\n  };\r\n\r\n  function setGrabCursor(moving) {\r\n    const swiper = this;\r\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\r\n    const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\r\n    el.style.cursor = 'move';\r\n    el.style.cursor = moving ? 'grabbing' : 'grab';\r\n  }\r\n\r\n  function unsetGrabCursor() {\r\n    const swiper = this;\r\n\r\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\r\n      return;\r\n    }\r\n\r\n    swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\r\n  }\r\n\r\n  var grabCursor = {\r\n    setGrabCursor,\r\n    unsetGrabCursor\r\n  };\r\n\r\n  function closestElement(selector, base) {\r\n    if (base === void 0) {\r\n      base = this;\r\n    }\r\n\r\n    function __closestFrom(el) {\r\n      if (!el || el === getDocument() || el === getWindow()) return null;\r\n      if (el.assignedSlot) el = el.assignedSlot;\r\n      const found = el.closest(selector);\r\n\r\n      if (!found && !el.getRootNode) {\r\n        return null;\r\n      }\r\n\r\n      return found || __closestFrom(el.getRootNode().host);\r\n    }\r\n\r\n    return __closestFrom(base);\r\n  }\r\n\r\n  function onTouchStart(event) {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n\r\n    if (swiper.animating && params.preventInteractionOnTransition) {\r\n      return;\r\n    }\r\n\r\n    if (!swiper.animating && params.cssMode && params.loop) {\r\n      swiper.loopFix();\r\n    }\r\n\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n    let $targetEl = $(e.target);\r\n\r\n    if (params.touchEventsTarget === 'wrapper') {\r\n      if (!$targetEl.closest(swiper.wrapperEl).length) return;\r\n    }\r\n\r\n    data.isTouchEvent = e.type === 'touchstart';\r\n    if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\r\n    if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\r\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\r\n\r\n    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\r\n\r\n    const eventPath = event.composedPath ? event.composedPath() : event.path;\r\n\r\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\r\n      $targetEl = $(eventPath[0]);\r\n    }\r\n\r\n    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\r\n    const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\r\n\r\n    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\r\n      swiper.allowClick = true;\r\n      return;\r\n    }\r\n\r\n    if (params.swipeHandler) {\r\n      if (!$targetEl.closest(params.swipeHandler)[0]) return;\r\n    }\r\n\r\n    touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n    touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    const startX = touches.currentX;\r\n    const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\r\n\r\n    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n\r\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\r\n      if (edgeSwipeDetection === 'prevent') {\r\n        event.preventDefault();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    Object.assign(data, {\r\n      isTouched: true,\r\n      isMoved: false,\r\n      allowTouchCallbacks: true,\r\n      isScrolling: undefined,\r\n      startMoving: undefined\r\n    });\r\n    touches.startX = startX;\r\n    touches.startY = startY;\r\n    data.touchStartTime = now();\r\n    swiper.allowClick = true;\r\n    swiper.updateSize();\r\n    swiper.swipeDirection = undefined;\r\n    if (params.threshold > 0) data.allowThresholdMove = false;\r\n\r\n    if (e.type !== 'touchstart') {\r\n      let preventDefault = true;\r\n\r\n      if ($targetEl.is(data.focusableElements)) {\r\n        preventDefault = false;\r\n\r\n        if ($targetEl[0].nodeName === 'SELECT') {\r\n          data.isTouched = false;\r\n        }\r\n      }\r\n\r\n      if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\r\n        document.activeElement.blur();\r\n      }\r\n\r\n      const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n\r\n      if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\r\n      swiper.freeMode.onTouchStart();\r\n    }\r\n\r\n    swiper.emit('touchStart', e);\r\n  }\r\n\r\n  function onTouchMove(event) {\r\n    const document = getDocument();\r\n    const swiper = this;\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      rtlTranslate: rtl,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n\r\n    if (!data.isTouched) {\r\n      if (data.startMoving && data.isScrolling) {\r\n        swiper.emit('touchMoveOpposite', e);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (data.isTouchEvent && e.type !== 'touchmove') return;\r\n    const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\r\n    const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\r\n    const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\r\n\r\n    if (e.preventedByNestedSwiper) {\r\n      touches.startX = pageX;\r\n      touches.startY = pageY;\r\n      return;\r\n    }\r\n\r\n    if (!swiper.allowTouchMove) {\r\n      if (!$(e.target).is(data.focusableElements)) {\r\n        swiper.allowClick = false;\r\n      }\r\n\r\n      if (data.isTouched) {\r\n        Object.assign(touches, {\r\n          startX: pageX,\r\n          startY: pageY,\r\n          currentX: pageX,\r\n          currentY: pageY\r\n        });\r\n        data.touchStartTime = now();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n      if (swiper.isVertical()) {\r\n        // Vertical\r\n        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\r\n          data.isTouched = false;\r\n          data.isMoved = false;\r\n          return;\r\n        }\r\n      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (data.isTouchEvent && document.activeElement) {\r\n      if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\r\n        data.isMoved = true;\r\n        swiper.allowClick = false;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (data.allowTouchCallbacks) {\r\n      swiper.emit('touchMove', e);\r\n    }\r\n\r\n    if (e.targetTouches && e.targetTouches.length > 1) return;\r\n    touches.currentX = pageX;\r\n    touches.currentY = pageY;\r\n    const diffX = touches.currentX - touches.startX;\r\n    const diffY = touches.currentY - touches.startY;\r\n    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\r\n\r\n    if (typeof data.isScrolling === 'undefined') {\r\n      let touchAngle;\r\n\r\n      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\r\n        data.isScrolling = false;\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (diffX * diffX + diffY * diffY >= 25) {\r\n          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\r\n          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (data.isScrolling) {\r\n      swiper.emit('touchMoveOpposite', e);\r\n    }\r\n\r\n    if (typeof data.startMoving === 'undefined') {\r\n      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n        data.startMoving = true;\r\n      }\r\n    }\r\n\r\n    if (data.isScrolling) {\r\n      data.isTouched = false;\r\n      return;\r\n    }\r\n\r\n    if (!data.startMoving) {\r\n      return;\r\n    }\r\n\r\n    swiper.allowClick = false;\r\n\r\n    if (!params.cssMode && e.cancelable) {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (params.touchMoveStopPropagation && !params.nested) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    if (!data.isMoved) {\r\n      if (params.loop && !params.cssMode) {\r\n        swiper.loopFix();\r\n      }\r\n\r\n      data.startTranslate = swiper.getTranslate();\r\n      swiper.setTransition(0);\r\n\r\n      if (swiper.animating) {\r\n        swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n      }\r\n\r\n      data.allowMomentumBounce = false; // Grab Cursor\r\n\r\n      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n        swiper.setGrabCursor(true);\r\n      }\r\n\r\n      swiper.emit('sliderFirstMove', e);\r\n    }\r\n\r\n    swiper.emit('sliderMove', e);\r\n    data.isMoved = true;\r\n    let diff = swiper.isHorizontal() ? diffX : diffY;\r\n    touches.diff = diff;\r\n    diff *= params.touchRatio;\r\n    if (rtl) diff = -diff;\r\n    swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n    data.currentTranslate = diff + data.startTranslate;\r\n    let disableParentSwiper = true;\r\n    let resistanceRatio = params.resistanceRatio;\r\n\r\n    if (params.touchReleaseOnEdges) {\r\n      resistanceRatio = 0;\r\n    }\r\n\r\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\r\n      disableParentSwiper = false;\r\n      if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\r\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n      disableParentSwiper = false;\r\n      if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\r\n    }\r\n\r\n    if (disableParentSwiper) {\r\n      e.preventedByNestedSwiper = true;\r\n    } // Directions locks\r\n\r\n\r\n    if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n      data.currentTranslate = data.startTranslate;\r\n    }\r\n\r\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n      data.currentTranslate = data.startTranslate;\r\n    }\r\n\r\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\r\n      data.currentTranslate = data.startTranslate;\r\n    } // Threshold\r\n\r\n\r\n    if (params.threshold > 0) {\r\n      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n        if (!data.allowThresholdMove) {\r\n          data.allowThresholdMove = true;\r\n          touches.startX = touches.currentX;\r\n          touches.startY = touches.currentY;\r\n          data.currentTranslate = data.startTranslate;\r\n          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n          return;\r\n        }\r\n      } else {\r\n        data.currentTranslate = data.startTranslate;\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\r\n\r\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\r\n      swiper.freeMode.onTouchMove();\r\n    } // Update progress\r\n\r\n\r\n    swiper.updateProgress(data.currentTranslate); // Update translate\r\n\r\n    swiper.setTranslate(data.currentTranslate);\r\n  }\r\n\r\n  function onTouchEnd(event) {\r\n    const swiper = this;\r\n    const data = swiper.touchEventsData;\r\n    const {\r\n      params,\r\n      touches,\r\n      rtlTranslate: rtl,\r\n      slidesGrid,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    let e = event;\r\n    if (e.originalEvent) e = e.originalEvent;\r\n\r\n    if (data.allowTouchCallbacks) {\r\n      swiper.emit('touchEnd', e);\r\n    }\r\n\r\n    data.allowTouchCallbacks = false;\r\n\r\n    if (!data.isTouched) {\r\n      if (data.isMoved && params.grabCursor) {\r\n        swiper.setGrabCursor(false);\r\n      }\r\n\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      return;\r\n    } // Return Grab Cursor\r\n\r\n\r\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n      swiper.setGrabCursor(false);\r\n    } // Time diff\r\n\r\n\r\n    const touchEndTime = now();\r\n    const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\r\n\r\n    if (swiper.allowClick) {\r\n      const pathTree = e.path || e.composedPath && e.composedPath();\r\n      swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\r\n      swiper.emit('tap click', e);\r\n\r\n      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\r\n        swiper.emit('doubleTap doubleClick', e);\r\n      }\r\n    }\r\n\r\n    data.lastClickTime = now();\r\n    nextTick(() => {\r\n      if (!swiper.destroyed) swiper.allowClick = true;\r\n    });\r\n\r\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n      data.isTouched = false;\r\n      data.isMoved = false;\r\n      data.startMoving = false;\r\n      return;\r\n    }\r\n\r\n    data.isTouched = false;\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    let currentPos;\r\n\r\n    if (params.followFinger) {\r\n      currentPos = rtl ? swiper.translate : -swiper.translate;\r\n    } else {\r\n      currentPos = -data.currentTranslate;\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      return;\r\n    }\r\n\r\n    if (swiper.params.freeMode && params.freeMode.enabled) {\r\n      swiper.freeMode.onTouchEnd({\r\n        currentPos\r\n      });\r\n      return;\r\n    } // Find current slide\r\n\r\n\r\n    let stopIndex = 0;\r\n    let groupSize = swiper.slidesSizesGrid[0];\r\n\r\n    for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\r\n      const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n      if (typeof slidesGrid[i + increment] !== 'undefined') {\r\n        if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\r\n          stopIndex = i;\r\n          groupSize = slidesGrid[i + increment] - slidesGrid[i];\r\n        }\r\n      } else if (currentPos >= slidesGrid[i]) {\r\n        stopIndex = i;\r\n        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n      }\r\n    }\r\n\r\n    let rewindFirstIndex = null;\r\n    let rewindLastIndex = null;\r\n\r\n    if (params.rewind) {\r\n      if (swiper.isBeginning) {\r\n        rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\r\n      } else if (swiper.isEnd) {\r\n        rewindFirstIndex = 0;\r\n      }\r\n    } // Find current slide size\r\n\r\n\r\n    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\r\n\r\n    if (timeDiff > params.longSwipesMs) {\r\n      // Long touches\r\n      if (!params.longSwipes) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      if (swiper.swipeDirection === 'next') {\r\n        if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment); else swiper.slideTo(stopIndex);\r\n      }\r\n\r\n      if (swiper.swipeDirection === 'prev') {\r\n        if (ratio > 1 - params.longSwipesRatio) {\r\n          swiper.slideTo(stopIndex + increment);\r\n        } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\r\n          swiper.slideTo(rewindLastIndex);\r\n        } else {\r\n          swiper.slideTo(stopIndex);\r\n        }\r\n      }\r\n    } else {\r\n      // Short swipes\r\n      if (!params.shortSwipes) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\r\n\r\n      if (!isNavButtonTarget) {\r\n        if (swiper.swipeDirection === 'next') {\r\n          swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\r\n        }\r\n\r\n        if (swiper.swipeDirection === 'prev') {\r\n          swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\r\n        }\r\n      } else if (e.target === swiper.navigation.nextEl) {\r\n        swiper.slideTo(stopIndex + increment);\r\n      } else {\r\n        swiper.slideTo(stopIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  function onResize() {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      el\r\n    } = swiper;\r\n    if (el && el.offsetWidth === 0) return; // Breakpoints\r\n\r\n    if (params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    } // Save locks\r\n\r\n\r\n    const {\r\n      allowSlideNext,\r\n      allowSlidePrev,\r\n      snapGrid\r\n    } = swiper; // Disable locks on resize\r\n\r\n    swiper.allowSlideNext = true;\r\n    swiper.allowSlidePrev = true;\r\n    swiper.updateSize();\r\n    swiper.updateSlides();\r\n    swiper.updateSlidesClasses();\r\n\r\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\r\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n    } else {\r\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n    }\r\n\r\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n      swiper.autoplay.run();\r\n    } // Return locks after resize\r\n\r\n\r\n    swiper.allowSlidePrev = allowSlidePrev;\r\n    swiper.allowSlideNext = allowSlideNext;\r\n\r\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n      swiper.checkOverflow();\r\n    }\r\n  }\r\n\r\n  function onClick(e) {\r\n    const swiper = this;\r\n    if (!swiper.enabled) return;\r\n\r\n    if (!swiper.allowClick) {\r\n      if (swiper.params.preventClicks) e.preventDefault();\r\n\r\n      if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n        e.stopPropagation();\r\n        e.stopImmediatePropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  function onScroll() {\r\n    const swiper = this;\r\n    const {\r\n      wrapperEl,\r\n      rtlTranslate,\r\n      enabled\r\n    } = swiper;\r\n    if (!enabled) return;\r\n    swiper.previousTranslate = swiper.translate;\r\n\r\n    if (swiper.isHorizontal()) {\r\n      swiper.translate = -wrapperEl.scrollLeft;\r\n    } else {\r\n      swiper.translate = -wrapperEl.scrollTop;\r\n    } // eslint-disable-next-line\r\n\r\n\r\n    if (swiper.translate === 0) swiper.translate = 0;\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n    let newProgress;\r\n    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n\r\n    if (translatesDiff === 0) {\r\n      newProgress = 0;\r\n    } else {\r\n      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\r\n    }\r\n\r\n    if (newProgress !== swiper.progress) {\r\n      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\r\n    }\r\n\r\n    swiper.emit('setTranslate', swiper.translate, false);\r\n  }\r\n\r\n  let dummyEventAttached = false;\r\n\r\n  function dummyEventListener() { }\r\n\r\n  const events = (swiper, method) => {\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      touchEvents,\r\n      el,\r\n      wrapperEl,\r\n      device,\r\n      support\r\n    } = swiper;\r\n    const capture = !!params.nested;\r\n    const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n    const swiperMethod = method; // Touch Events\r\n\r\n    if (!support.touch) {\r\n      el[domMethod](touchEvents.start, swiper.onTouchStart, false);\r\n      document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\r\n      document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\r\n    } else {\r\n      const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\r\n      el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\r\n        passive: false,\r\n        capture\r\n      } : capture);\r\n      el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n\r\n      if (touchEvents.cancel) {\r\n        el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\r\n      }\r\n    } // Prevent Links Clicks\r\n\r\n\r\n    if (params.preventClicks || params.preventClicksPropagation) {\r\n      el[domMethod]('click', swiper.onClick, true);\r\n    }\r\n\r\n    if (params.cssMode) {\r\n      wrapperEl[domMethod]('scroll', swiper.onScroll);\r\n    } // Resize handler\r\n\r\n\r\n    if (params.updateOnWindowResize) {\r\n      swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\r\n    } else {\r\n      swiper[swiperMethod]('observerUpdate', onResize, true);\r\n    }\r\n  };\r\n\r\n  function attachEvents() {\r\n    const swiper = this;\r\n    const document = getDocument();\r\n    const {\r\n      params,\r\n      support\r\n    } = swiper;\r\n    swiper.onTouchStart = onTouchStart.bind(swiper);\r\n    swiper.onTouchMove = onTouchMove.bind(swiper);\r\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n\r\n    if (params.cssMode) {\r\n      swiper.onScroll = onScroll.bind(swiper);\r\n    }\r\n\r\n    swiper.onClick = onClick.bind(swiper);\r\n\r\n    if (support.touch && !dummyEventAttached) {\r\n      document.addEventListener('touchstart', dummyEventListener);\r\n      dummyEventAttached = true;\r\n    }\r\n\r\n    events(swiper, 'on');\r\n  }\r\n\r\n  function detachEvents() {\r\n    const swiper = this;\r\n    events(swiper, 'off');\r\n  }\r\n\r\n  var events$1 = {\r\n    attachEvents,\r\n    detachEvents\r\n  };\r\n\r\n  const isGridEnabled = (swiper, params) => {\r\n    return swiper.grid && params.grid && params.grid.rows > 1;\r\n  };\r\n\r\n  function setBreakpoint() {\r\n    const swiper = this;\r\n    const {\r\n      activeIndex,\r\n      initialized,\r\n      loopedSlides = 0,\r\n      params,\r\n      $el\r\n    } = swiper;\r\n    const breakpoints = params.breakpoints;\r\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\r\n\r\n    const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\r\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\r\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n    const wasMultiRow = isGridEnabled(swiper, params);\r\n    const isMultiRow = isGridEnabled(swiper, breakpointParams);\r\n    const wasEnabled = params.enabled;\r\n\r\n    if (wasMultiRow && !isMultiRow) {\r\n      $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\r\n      swiper.emitContainerClasses();\r\n    } else if (!wasMultiRow && isMultiRow) {\r\n      $el.addClass(`${params.containerModifierClass}grid`);\r\n\r\n      if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\r\n        $el.addClass(`${params.containerModifierClass}grid-column`);\r\n      }\r\n\r\n      swiper.emitContainerClasses();\r\n    } // Toggle navigation, pagination, scrollbar\r\n\r\n\r\n    ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\r\n      const wasModuleEnabled = params[prop] && params[prop].enabled;\r\n      const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\r\n\r\n      if (wasModuleEnabled && !isModuleEnabled) {\r\n        swiper[prop].disable();\r\n      }\r\n\r\n      if (!wasModuleEnabled && isModuleEnabled) {\r\n        swiper[prop].enable();\r\n      }\r\n    });\r\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n\r\n    if (directionChanged && initialized) {\r\n      swiper.changeDirection();\r\n    }\r\n\r\n    extend(swiper.params, breakpointParams);\r\n    const isEnabled = swiper.params.enabled;\r\n    Object.assign(swiper, {\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev\r\n    });\r\n\r\n    if (wasEnabled && !isEnabled) {\r\n      swiper.disable();\r\n    } else if (!wasEnabled && isEnabled) {\r\n      swiper.enable();\r\n    }\r\n\r\n    swiper.currentBreakpoint = breakpoint;\r\n    swiper.emit('_beforeBreakpoint', breakpointParams);\r\n\r\n    if (needsReLoop && initialized) {\r\n      swiper.loopDestroy();\r\n      swiper.loopCreate();\r\n      swiper.updateSlides();\r\n      swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\r\n    }\r\n\r\n    swiper.emit('breakpoint', breakpointParams);\r\n  }\r\n\r\n  function getBreakpoint(breakpoints, base, containerEl) {\r\n    if (base === void 0) {\r\n      base = 'window';\r\n    }\r\n\r\n    if (!breakpoints || base === 'container' && !containerEl) return undefined;\r\n    let breakpoint = false;\r\n    const window = getWindow();\r\n    const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\r\n    const points = Object.keys(breakpoints).map(point => {\r\n      if (typeof point === 'string' && point.indexOf('@') === 0) {\r\n        const minRatio = parseFloat(point.substr(1));\r\n        const value = currentHeight * minRatio;\r\n        return {\r\n          value,\r\n          point\r\n        };\r\n      }\r\n\r\n      return {\r\n        value: point,\r\n        point\r\n      };\r\n    });\r\n    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\r\n\r\n    for (let i = 0; i < points.length; i += 1) {\r\n      const {\r\n        point,\r\n        value\r\n      } = points[i];\r\n\r\n      if (base === 'window') {\r\n        if (window.matchMedia(`(min-width: ${value}px)`).matches) {\r\n          breakpoint = point;\r\n        }\r\n      } else if (value <= containerEl.clientWidth) {\r\n        breakpoint = point;\r\n      }\r\n    }\r\n\r\n    return breakpoint || 'max';\r\n  }\r\n\r\n  var breakpoints = {\r\n    setBreakpoint,\r\n    getBreakpoint\r\n  };\r\n\r\n  function prepareClasses(entries, prefix) {\r\n    const resultClasses = [];\r\n    entries.forEach(item => {\r\n      if (typeof item === 'object') {\r\n        Object.keys(item).forEach(classNames => {\r\n          if (item[classNames]) {\r\n            resultClasses.push(prefix + classNames);\r\n          }\r\n        });\r\n      } else if (typeof item === 'string') {\r\n        resultClasses.push(prefix + item);\r\n      }\r\n    });\r\n    return resultClasses;\r\n  }\r\n\r\n  function addClasses() {\r\n    const swiper = this;\r\n    const {\r\n      classNames,\r\n      params,\r\n      rtl,\r\n      $el,\r\n      device,\r\n      support\r\n    } = swiper; // prettier-ignore\r\n\r\n    const suffixes = prepareClasses(['initialized', params.direction, {\r\n      'pointer-events': !support.touch\r\n    }, {\r\n        'free-mode': swiper.params.freeMode && params.freeMode.enabled\r\n      }, {\r\n        'autoheight': params.autoHeight\r\n      }, {\r\n        'rtl': rtl\r\n      }, {\r\n        'grid': params.grid && params.grid.rows > 1\r\n      }, {\r\n        'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\r\n      }, {\r\n        'android': device.android\r\n      }, {\r\n        'ios': device.ios\r\n      }, {\r\n        'css-mode': params.cssMode\r\n      }, {\r\n        'centered': params.cssMode && params.centeredSlides\r\n      }, {\r\n        'watch-progress': params.watchSlidesProgress\r\n      }], params.containerModifierClass);\r\n    classNames.push(...suffixes);\r\n    $el.addClass([...classNames].join(' '));\r\n    swiper.emitContainerClasses();\r\n  }\r\n\r\n  function removeClasses() {\r\n    const swiper = this;\r\n    const {\r\n      $el,\r\n      classNames\r\n    } = swiper;\r\n    $el.removeClass(classNames.join(' '));\r\n    swiper.emitContainerClasses();\r\n  }\r\n\r\n  var classes = {\r\n    addClasses,\r\n    removeClasses\r\n  };\r\n\r\n  function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n    const window = getWindow();\r\n    let image;\r\n\r\n    function onReady() {\r\n      if (callback) callback();\r\n    }\r\n\r\n    const isPicture = $(imageEl).parent('picture')[0];\r\n\r\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\r\n      if (src) {\r\n        image = new window.Image();\r\n        image.onload = onReady;\r\n        image.onerror = onReady;\r\n\r\n        if (sizes) {\r\n          image.sizes = sizes;\r\n        }\r\n\r\n        if (srcset) {\r\n          image.srcset = srcset;\r\n        }\r\n\r\n        if (src) {\r\n          image.src = src;\r\n        }\r\n      } else {\r\n        onReady();\r\n      }\r\n    } else {\r\n      // image already loaded...\r\n      onReady();\r\n    }\r\n  }\r\n\r\n  function preloadImages() {\r\n    const swiper = this;\r\n    swiper.imagesToLoad = swiper.$el.find('img');\r\n\r\n    function onReady() {\r\n      if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\r\n      if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\r\n\r\n      if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n        if (swiper.params.updateOnImagesReady) swiper.update();\r\n        swiper.emit('imagesReady');\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n      const imageEl = swiper.imagesToLoad[i];\r\n      swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\r\n    }\r\n  }\r\n\r\n  var images = {\r\n    loadImage,\r\n    preloadImages\r\n  };\r\n\r\n  function checkOverflow() {\r\n    const swiper = this;\r\n    const {\r\n      isLocked: wasLocked,\r\n      params\r\n    } = swiper;\r\n    const {\r\n      slidesOffsetBefore\r\n    } = params;\r\n\r\n    if (slidesOffsetBefore) {\r\n      const lastSlideIndex = swiper.slides.length - 1;\r\n      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\r\n      swiper.isLocked = swiper.size > lastSlideRightEdge;\r\n    } else {\r\n      swiper.isLocked = swiper.snapGrid.length === 1;\r\n    }\r\n\r\n    if (params.allowSlideNext === true) {\r\n      swiper.allowSlideNext = !swiper.isLocked;\r\n    }\r\n\r\n    if (params.allowSlidePrev === true) {\r\n      swiper.allowSlidePrev = !swiper.isLocked;\r\n    }\r\n\r\n    if (wasLocked && wasLocked !== swiper.isLocked) {\r\n      swiper.isEnd = false;\r\n    }\r\n\r\n    if (wasLocked !== swiper.isLocked) {\r\n      swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n    }\r\n  }\r\n\r\n  var checkOverflow$1 = {\r\n    checkOverflow\r\n  };\r\n\r\n  var defaults = {\r\n    init: true,\r\n    direction: 'horizontal',\r\n    touchEventsTarget: 'wrapper',\r\n    initialSlide: 0,\r\n    speed: 300,\r\n    cssMode: false,\r\n    updateOnWindowResize: true,\r\n    resizeObserver: true,\r\n    nested: false,\r\n    createElements: false,\r\n    enabled: true,\r\n    focusableElements: 'input, select, option, textarea, button, video, label',\r\n    // Overrides\r\n    width: null,\r\n    height: null,\r\n    //\r\n    preventInteractionOnTransition: false,\r\n    // ssr\r\n    userAgent: null,\r\n    url: null,\r\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\r\n    edgeSwipeDetection: false,\r\n    edgeSwipeThreshold: 20,\r\n    // Autoheight\r\n    autoHeight: false,\r\n    // Set wrapper width\r\n    setWrapperSize: false,\r\n    // Virtual Translate\r\n    virtualTranslate: false,\r\n    // Effects\r\n    effect: 'slide',\r\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n    // Breakpoints\r\n    breakpoints: undefined,\r\n    breakpointsBase: 'window',\r\n    // Slides grid\r\n    spaceBetween: 0,\r\n    slidesPerView: 1,\r\n    slidesPerGroup: 1,\r\n    slidesPerGroupSkip: 0,\r\n    slidesPerGroupAuto: false,\r\n    centeredSlides: false,\r\n    centeredSlidesBounds: false,\r\n    slidesOffsetBefore: 0,\r\n    // in px\r\n    slidesOffsetAfter: 0,\r\n    // in px\r\n    normalizeSlideIndex: true,\r\n    centerInsufficientSlides: false,\r\n    // Disable swiper and hide navigation when container not overflow\r\n    watchOverflow: true,\r\n    // Round length\r\n    roundLengths: false,\r\n    // Touches\r\n    touchRatio: 1,\r\n    touchAngle: 45,\r\n    simulateTouch: true,\r\n    shortSwipes: true,\r\n    longSwipes: true,\r\n    longSwipesRatio: 0.5,\r\n    longSwipesMs: 300,\r\n    followFinger: true,\r\n    allowTouchMove: true,\r\n    threshold: 0,\r\n    touchMoveStopPropagation: false,\r\n    touchStartPreventDefault: true,\r\n    touchStartForcePreventDefault: false,\r\n    touchReleaseOnEdges: false,\r\n    // Unique Navigation Elements\r\n    uniqueNavElements: true,\r\n    // Resistance\r\n    resistance: true,\r\n    resistanceRatio: 0.85,\r\n    // Progress\r\n    watchSlidesProgress: false,\r\n    // Cursor\r\n    grabCursor: false,\r\n    // Clicks\r\n    preventClicks: true,\r\n    preventClicksPropagation: true,\r\n    slideToClickedSlide: false,\r\n    // Images\r\n    preloadImages: true,\r\n    updateOnImagesReady: true,\r\n    // loop\r\n    loop: false,\r\n    loopAdditionalSlides: 0,\r\n    loopedSlides: null,\r\n    loopedSlidesLimit: true,\r\n    loopFillGroupWithBlank: false,\r\n    loopPreventsSlide: true,\r\n    // rewind\r\n    rewind: false,\r\n    // Swiping/no swiping\r\n    allowSlidePrev: true,\r\n    allowSlideNext: true,\r\n    swipeHandler: null,\r\n    // '.swipe-handler',\r\n    noSwiping: true,\r\n    noSwipingClass: 'swiper-no-swiping',\r\n    noSwipingSelector: null,\r\n    // Passive Listeners\r\n    passiveListeners: true,\r\n    maxBackfaceHiddenSlides: 10,\r\n    // NS\r\n    containerModifierClass: 'swiper-',\r\n    // NEW\r\n    slideClass: 'swiper-slide',\r\n    slideBlankClass: 'swiper-slide-invisible-blank',\r\n    slideActiveClass: 'swiper-slide-active',\r\n    slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n    slideVisibleClass: 'swiper-slide-visible',\r\n    slideDuplicateClass: 'swiper-slide-duplicate',\r\n    slideNextClass: 'swiper-slide-next',\r\n    slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n    slidePrevClass: 'swiper-slide-prev',\r\n    slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n    wrapperClass: 'swiper-wrapper',\r\n    // Callbacks\r\n    runCallbacksOnInit: true,\r\n    // Internals\r\n    _emitClasses: false\r\n  };\r\n\r\n  function moduleExtendParams(params, allModulesParams) {\r\n    return function extendParams(obj) {\r\n      if (obj === void 0) {\r\n        obj = {};\r\n      }\r\n\r\n      const moduleParamName = Object.keys(obj)[0];\r\n      const moduleParams = obj[moduleParamName];\r\n\r\n      if (typeof moduleParams !== 'object' || moduleParams === null) {\r\n        extend(allModulesParams, obj);\r\n        return;\r\n      }\r\n\r\n      if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\r\n        params[moduleParamName] = {\r\n          auto: true\r\n        };\r\n      }\r\n\r\n      if (!(moduleParamName in params && 'enabled' in moduleParams)) {\r\n        extend(allModulesParams, obj);\r\n        return;\r\n      }\r\n\r\n      if (params[moduleParamName] === true) {\r\n        params[moduleParamName] = {\r\n          enabled: true\r\n        };\r\n      }\r\n\r\n      if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\r\n        params[moduleParamName].enabled = true;\r\n      }\r\n\r\n      if (!params[moduleParamName]) params[moduleParamName] = {\r\n        enabled: false\r\n      };\r\n      extend(allModulesParams, obj);\r\n    };\r\n  }\r\n\r\n  /* eslint no-param-reassign: \"off\" */\r\n  const prototypes = {\r\n    eventsEmitter,\r\n    update,\r\n    translate,\r\n    transition,\r\n    slide,\r\n    loop,\r\n    grabCursor,\r\n    events: events$1,\r\n    breakpoints,\r\n    checkOverflow: checkOverflow$1,\r\n    classes,\r\n    images\r\n  };\r\n  const extendedDefaults = {};\r\n\r\n  class Swiper {\r\n    constructor() {\r\n      let el;\r\n      let params;\r\n\r\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\r\n        params = args[0];\r\n      } else {\r\n        [el, params] = args;\r\n      }\r\n\r\n      if (!params) params = {};\r\n      params = extend({}, params);\r\n      if (el && !params.el) params.el = el;\r\n\r\n      if (params.el && $(params.el).length > 1) {\r\n        const swipers = [];\r\n        $(params.el).each(containerEl => {\r\n          const newParams = extend({}, params, {\r\n            el: containerEl\r\n          });\r\n          swipers.push(new Swiper(newParams));\r\n        }); // eslint-disable-next-line no-constructor-return\r\n\r\n        return swipers;\r\n      } // Swiper Instance\r\n\r\n\r\n      const swiper = this;\r\n      swiper.__swiper__ = true;\r\n      swiper.support = getSupport();\r\n      swiper.device = getDevice({\r\n        userAgent: params.userAgent\r\n      });\r\n      swiper.browser = getBrowser();\r\n      swiper.eventsListeners = {};\r\n      swiper.eventsAnyListeners = [];\r\n      swiper.modules = [...swiper.__modules__];\r\n\r\n      if (params.modules && Array.isArray(params.modules)) {\r\n        swiper.modules.push(...params.modules);\r\n      }\r\n\r\n      const allModulesParams = {};\r\n      swiper.modules.forEach(mod => {\r\n        mod({\r\n          swiper,\r\n          extendParams: moduleExtendParams(params, allModulesParams),\r\n          on: swiper.on.bind(swiper),\r\n          once: swiper.once.bind(swiper),\r\n          off: swiper.off.bind(swiper),\r\n          emit: swiper.emit.bind(swiper)\r\n        });\r\n      }); // Extend defaults with modules params\r\n\r\n      const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\r\n\r\n      swiper.params = extend({}, swiperParams, extendedDefaults, params);\r\n      swiper.originalParams = extend({}, swiper.params);\r\n      swiper.passedParams = extend({}, params); // add event listeners\r\n\r\n      if (swiper.params && swiper.params.on) {\r\n        Object.keys(swiper.params.on).forEach(eventName => {\r\n          swiper.on(eventName, swiper.params.on[eventName]);\r\n        });\r\n      }\r\n\r\n      if (swiper.params && swiper.params.onAny) {\r\n        swiper.onAny(swiper.params.onAny);\r\n      } // Save Dom lib\r\n\r\n\r\n      swiper.$ = $; // Extend Swiper\r\n\r\n      Object.assign(swiper, {\r\n        enabled: swiper.params.enabled,\r\n        el,\r\n        // Classes\r\n        classNames: [],\r\n        // Slides\r\n        slides: $(),\r\n        slidesGrid: [],\r\n        snapGrid: [],\r\n        slidesSizesGrid: [],\r\n\r\n        // isDirection\r\n        isHorizontal() {\r\n          return swiper.params.direction === 'horizontal';\r\n        },\r\n\r\n        isVertical() {\r\n          return swiper.params.direction === 'vertical';\r\n        },\r\n\r\n        // Indexes\r\n        activeIndex: 0,\r\n        realIndex: 0,\r\n        //\r\n        isBeginning: true,\r\n        isEnd: false,\r\n        // Props\r\n        translate: 0,\r\n        previousTranslate: 0,\r\n        progress: 0,\r\n        velocity: 0,\r\n        animating: false,\r\n        // Locks\r\n        allowSlideNext: swiper.params.allowSlideNext,\r\n        allowSlidePrev: swiper.params.allowSlidePrev,\r\n        // Touch Events\r\n        touchEvents: function touchEvents() {\r\n          const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\r\n          const desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n          swiper.touchEventsTouch = {\r\n            start: touch[0],\r\n            move: touch[1],\r\n            end: touch[2],\r\n            cancel: touch[3]\r\n          };\r\n          swiper.touchEventsDesktop = {\r\n            start: desktop[0],\r\n            move: desktop[1],\r\n            end: desktop[2]\r\n          };\r\n          return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n        }(),\r\n        touchEventsData: {\r\n          isTouched: undefined,\r\n          isMoved: undefined,\r\n          allowTouchCallbacks: undefined,\r\n          touchStartTime: undefined,\r\n          isScrolling: undefined,\r\n          currentTranslate: undefined,\r\n          startTranslate: undefined,\r\n          allowThresholdMove: undefined,\r\n          // Form elements to match\r\n          focusableElements: swiper.params.focusableElements,\r\n          // Last click time\r\n          lastClickTime: now(),\r\n          clickTimeout: undefined,\r\n          // Velocities\r\n          velocities: [],\r\n          allowMomentumBounce: undefined,\r\n          isTouchEvent: undefined,\r\n          startMoving: undefined\r\n        },\r\n        // Clicks\r\n        allowClick: true,\r\n        // Touches\r\n        allowTouchMove: swiper.params.allowTouchMove,\r\n        touches: {\r\n          startX: 0,\r\n          startY: 0,\r\n          currentX: 0,\r\n          currentY: 0,\r\n          diff: 0\r\n        },\r\n        // Images\r\n        imagesToLoad: [],\r\n        imagesLoaded: 0\r\n      });\r\n      swiper.emit('_swiper'); // Init\r\n\r\n      if (swiper.params.init) {\r\n        swiper.init();\r\n      } // Return app instance\r\n      // eslint-disable-next-line no-constructor-return\r\n\r\n\r\n      return swiper;\r\n    }\r\n\r\n    enable() {\r\n      const swiper = this;\r\n      if (swiper.enabled) return;\r\n      swiper.enabled = true;\r\n\r\n      if (swiper.params.grabCursor) {\r\n        swiper.setGrabCursor();\r\n      }\r\n\r\n      swiper.emit('enable');\r\n    }\r\n\r\n    disable() {\r\n      const swiper = this;\r\n      if (!swiper.enabled) return;\r\n      swiper.enabled = false;\r\n\r\n      if (swiper.params.grabCursor) {\r\n        swiper.unsetGrabCursor();\r\n      }\r\n\r\n      swiper.emit('disable');\r\n    }\r\n\r\n    setProgress(progress, speed) {\r\n      const swiper = this;\r\n      progress = Math.min(Math.max(progress, 0), 1);\r\n      const min = swiper.minTranslate();\r\n      const max = swiper.maxTranslate();\r\n      const current = (max - min) * progress + min;\r\n      swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    emitContainerClasses() {\r\n      const swiper = this;\r\n      if (!swiper.params._emitClasses || !swiper.el) return;\r\n      const cls = swiper.el.className.split(' ').filter(className => {\r\n        return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\r\n      });\r\n      swiper.emit('_containerClasses', cls.join(' '));\r\n    }\r\n\r\n    getSlideClasses(slideEl) {\r\n      const swiper = this;\r\n      if (swiper.destroyed) return '';\r\n      return slideEl.className.split(' ').filter(className => {\r\n        return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\r\n      }).join(' ');\r\n    }\r\n\r\n    emitSlidesClasses() {\r\n      const swiper = this;\r\n      if (!swiper.params._emitClasses || !swiper.el) return;\r\n      const updates = [];\r\n      swiper.slides.each(slideEl => {\r\n        const classNames = swiper.getSlideClasses(slideEl);\r\n        updates.push({\r\n          slideEl,\r\n          classNames\r\n        });\r\n        swiper.emit('_slideClass', slideEl, classNames);\r\n      });\r\n      swiper.emit('_slideClasses', updates);\r\n    }\r\n\r\n    slidesPerViewDynamic(view, exact) {\r\n      if (view === void 0) {\r\n        view = 'current';\r\n      }\r\n\r\n      if (exact === void 0) {\r\n        exact = false;\r\n      }\r\n\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        slides,\r\n        slidesGrid,\r\n        slidesSizesGrid,\r\n        size: swiperSize,\r\n        activeIndex\r\n      } = swiper;\r\n      let spv = 1;\r\n\r\n      if (params.centeredSlides) {\r\n        let slideSize = slides[activeIndex].swiperSlideSize;\r\n        let breakLoop;\r\n\r\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n          if (slides[i] && !breakLoop) {\r\n            slideSize += slides[i].swiperSlideSize;\r\n            spv += 1;\r\n            if (slideSize > swiperSize) breakLoop = true;\r\n          }\r\n        }\r\n\r\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n          if (slides[i] && !breakLoop) {\r\n            slideSize += slides[i].swiperSlideSize;\r\n            spv += 1;\r\n            if (slideSize > swiperSize) breakLoop = true;\r\n          }\r\n        }\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (view === 'current') {\r\n          for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n            const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\r\n\r\n            if (slideInView) {\r\n              spv += 1;\r\n            }\r\n          }\r\n        } else {\r\n          // previous\r\n          for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n            const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\r\n\r\n            if (slideInView) {\r\n              spv += 1;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return spv;\r\n    }\r\n\r\n    update() {\r\n      const swiper = this;\r\n      if (!swiper || swiper.destroyed) return;\r\n      const {\r\n        snapGrid,\r\n        params\r\n      } = swiper; // Breakpoints\r\n\r\n      if (params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      }\r\n\r\n      swiper.updateSize();\r\n      swiper.updateSlides();\r\n      swiper.updateProgress();\r\n      swiper.updateSlidesClasses();\r\n\r\n      function setTranslate() {\r\n        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n        swiper.setTranslate(newTranslate);\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n\r\n      let translated;\r\n\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\r\n        setTranslate();\r\n\r\n        if (swiper.params.autoHeight) {\r\n          swiper.updateAutoHeight();\r\n        }\r\n      } else {\r\n        if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n          translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n        } else {\r\n          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n        }\r\n\r\n        if (!translated) {\r\n          setTranslate();\r\n        }\r\n      }\r\n\r\n      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n        swiper.checkOverflow();\r\n      }\r\n\r\n      swiper.emit('update');\r\n    }\r\n\r\n    changeDirection(newDirection, needUpdate) {\r\n      if (needUpdate === void 0) {\r\n        needUpdate = true;\r\n      }\r\n\r\n      const swiper = this;\r\n      const currentDirection = swiper.params.direction;\r\n\r\n      if (!newDirection) {\r\n        // eslint-disable-next-line\r\n        newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n      }\r\n\r\n      if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\r\n        return swiper;\r\n      }\r\n\r\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\r\n      swiper.emitContainerClasses();\r\n      swiper.params.direction = newDirection;\r\n      swiper.slides.each(slideEl => {\r\n        if (newDirection === 'vertical') {\r\n          slideEl.style.width = '';\r\n        } else {\r\n          slideEl.style.height = '';\r\n        }\r\n      });\r\n      swiper.emit('changeDirection');\r\n      if (needUpdate) swiper.update();\r\n      return swiper;\r\n    }\r\n\r\n    changeLanguageDirection(direction) {\r\n      const swiper = this;\r\n      if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\r\n      swiper.rtl = direction === 'rtl';\r\n      swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\r\n\r\n      if (swiper.rtl) {\r\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);\r\n        swiper.el.dir = 'rtl';\r\n      } else {\r\n        swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);\r\n        swiper.el.dir = 'ltr';\r\n      }\r\n\r\n      swiper.update();\r\n    }\r\n\r\n    mount(el) {\r\n      const swiper = this;\r\n      if (swiper.mounted) return true; // Find el\r\n\r\n      const $el = $(el || swiper.params.el);\r\n      el = $el[0];\r\n\r\n      if (!el) {\r\n        return false;\r\n      }\r\n\r\n      el.swiper = swiper;\r\n\r\n      const getWrapperSelector = () => {\r\n        return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\r\n      };\r\n\r\n      const getWrapper = () => {\r\n        if (el && el.shadowRoot && el.shadowRoot.querySelector) {\r\n          const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\r\n\r\n          res.children = options => $el.children(options);\r\n\r\n          return res;\r\n        }\r\n\r\n        if (!$el.children) {\r\n          return $($el).children(getWrapperSelector());\r\n        }\r\n\r\n        return $el.children(getWrapperSelector());\r\n      }; // Find Wrapper\r\n\r\n\r\n      let $wrapperEl = getWrapper();\r\n\r\n      if ($wrapperEl.length === 0 && swiper.params.createElements) {\r\n        const document = getDocument();\r\n        const wrapper = document.createElement('div');\r\n        $wrapperEl = $(wrapper);\r\n        wrapper.className = swiper.params.wrapperClass;\r\n        $el.append(wrapper);\r\n        $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\r\n          $wrapperEl.append(slideEl);\r\n        });\r\n      }\r\n\r\n      Object.assign(swiper, {\r\n        $el,\r\n        el,\r\n        $wrapperEl,\r\n        wrapperEl: $wrapperEl[0],\r\n        mounted: true,\r\n        // RTL\r\n        rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\r\n        rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n        wrongRTL: $wrapperEl.css('display') === '-webkit-box'\r\n      });\r\n      return true;\r\n    }\r\n\r\n    init(el) {\r\n      const swiper = this;\r\n      if (swiper.initialized) return swiper;\r\n      const mounted = swiper.mount(el);\r\n      if (mounted === false) return swiper;\r\n      swiper.emit('beforeInit'); // Set breakpoint\r\n\r\n      if (swiper.params.breakpoints) {\r\n        swiper.setBreakpoint();\r\n      } // Add Classes\r\n\r\n\r\n      swiper.addClasses(); // Create loop\r\n\r\n      if (swiper.params.loop) {\r\n        swiper.loopCreate();\r\n      } // Update size\r\n\r\n\r\n      swiper.updateSize(); // Update slides\r\n\r\n      swiper.updateSlides();\r\n\r\n      if (swiper.params.watchOverflow) {\r\n        swiper.checkOverflow();\r\n      } // Set Grab Cursor\r\n\r\n\r\n      if (swiper.params.grabCursor && swiper.enabled) {\r\n        swiper.setGrabCursor();\r\n      }\r\n\r\n      if (swiper.params.preloadImages) {\r\n        swiper.preloadImages();\r\n      } // Slide To Initial Slide\r\n\r\n\r\n      if (swiper.params.loop) {\r\n        swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\r\n      } else {\r\n        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\r\n      } // Attach events\r\n\r\n\r\n      swiper.attachEvents(); // Init Flag\r\n\r\n      swiper.initialized = true; // Emit\r\n\r\n      swiper.emit('init');\r\n      swiper.emit('afterInit');\r\n      return swiper;\r\n    }\r\n\r\n    destroy(deleteInstance, cleanStyles) {\r\n      if (deleteInstance === void 0) {\r\n        deleteInstance = true;\r\n      }\r\n\r\n      if (cleanStyles === void 0) {\r\n        cleanStyles = true;\r\n      }\r\n\r\n      const swiper = this;\r\n      const {\r\n        params,\r\n        $el,\r\n        $wrapperEl,\r\n        slides\r\n      } = swiper;\r\n\r\n      if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n        return null;\r\n      }\r\n\r\n      swiper.emit('beforeDestroy'); // Init Flag\r\n\r\n      swiper.initialized = false; // Detach events\r\n\r\n      swiper.detachEvents(); // Destroy loop\r\n\r\n      if (params.loop) {\r\n        swiper.loopDestroy();\r\n      } // Cleanup styles\r\n\r\n\r\n      if (cleanStyles) {\r\n        swiper.removeClasses();\r\n        $el.removeAttr('style');\r\n        $wrapperEl.removeAttr('style');\r\n\r\n        if (slides && slides.length) {\r\n          slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\r\n        }\r\n      }\r\n\r\n      swiper.emit('destroy'); // Detach emitter events\r\n\r\n      Object.keys(swiper.eventsListeners).forEach(eventName => {\r\n        swiper.off(eventName);\r\n      });\r\n\r\n      if (deleteInstance !== false) {\r\n        swiper.$el[0].swiper = null;\r\n        deleteProps(swiper);\r\n      }\r\n\r\n      swiper.destroyed = true;\r\n      return null;\r\n    }\r\n\r\n    static extendDefaults(newDefaults) {\r\n      extend(extendedDefaults, newDefaults);\r\n    }\r\n\r\n    static get extendedDefaults() {\r\n      return extendedDefaults;\r\n    }\r\n\r\n    static get defaults() {\r\n      return defaults;\r\n    }\r\n\r\n    static installModule(mod) {\r\n      if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\r\n      const modules = Swiper.prototype.__modules__;\r\n\r\n      if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\r\n        modules.push(mod);\r\n      }\r\n    }\r\n\r\n    static use(module) {\r\n      if (Array.isArray(module)) {\r\n        module.forEach(m => Swiper.installModule(m));\r\n        return Swiper;\r\n      }\r\n\r\n      Swiper.installModule(module);\r\n      return Swiper;\r\n    }\r\n\r\n  }\r\n\r\n  Object.keys(prototypes).forEach(prototypeGroup => {\r\n    Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\r\n      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n    });\r\n  });\r\n  Swiper.use([Resize, Observer]);\r\n\r\n  function Virtual(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    extendParams({\r\n      virtual: {\r\n        enabled: false,\r\n        slides: [],\r\n        cache: true,\r\n        renderSlide: null,\r\n        renderExternal: null,\r\n        renderExternalUpdate: true,\r\n        addSlidesBefore: 0,\r\n        addSlidesAfter: 0\r\n      }\r\n    });\r\n    let cssModeTimeout;\r\n    swiper.virtual = {\r\n      cache: {},\r\n      from: undefined,\r\n      to: undefined,\r\n      slides: [],\r\n      offset: 0,\r\n      slidesGrid: []\r\n    };\r\n\r\n    function renderSlide(slide, index) {\r\n      const params = swiper.params.virtual;\r\n\r\n      if (params.cache && swiper.virtual.cache[index]) {\r\n        return swiper.virtual.cache[index];\r\n      }\r\n\r\n      const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\r\n      if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\r\n      if (params.cache) swiper.virtual.cache[index] = $slideEl;\r\n      return $slideEl;\r\n    }\r\n\r\n    function update(force) {\r\n      const {\r\n        slidesPerView,\r\n        slidesPerGroup,\r\n        centeredSlides\r\n      } = swiper.params;\r\n      const {\r\n        addSlidesBefore,\r\n        addSlidesAfter\r\n      } = swiper.params.virtual;\r\n      const {\r\n        from: previousFrom,\r\n        to: previousTo,\r\n        slides,\r\n        slidesGrid: previousSlidesGrid,\r\n        offset: previousOffset\r\n      } = swiper.virtual;\r\n\r\n      if (!swiper.params.cssMode) {\r\n        swiper.updateActiveIndex();\r\n      }\r\n\r\n      const activeIndex = swiper.activeIndex || 0;\r\n      let offsetProp;\r\n      if (swiper.rtlTranslate) offsetProp = 'right'; else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\r\n      let slidesAfter;\r\n      let slidesBefore;\r\n\r\n      if (centeredSlides) {\r\n        slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\r\n        slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\r\n      } else {\r\n        slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\r\n        slidesBefore = slidesPerGroup + addSlidesBefore;\r\n      }\r\n\r\n      const from = Math.max((activeIndex || 0) - slidesBefore, 0);\r\n      const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\r\n      const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\r\n      Object.assign(swiper.virtual, {\r\n        from,\r\n        to,\r\n        offset,\r\n        slidesGrid: swiper.slidesGrid\r\n      });\r\n\r\n      function onRendered() {\r\n        swiper.updateSlides();\r\n        swiper.updateProgress();\r\n        swiper.updateSlidesClasses();\r\n\r\n        if (swiper.lazy && swiper.params.lazy.enabled) {\r\n          swiper.lazy.load();\r\n        }\r\n\r\n        emit('virtualUpdate');\r\n      }\r\n\r\n      if (previousFrom === from && previousTo === to && !force) {\r\n        if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\r\n          swiper.slides.css(offsetProp, `${offset}px`);\r\n        }\r\n\r\n        swiper.updateProgress();\r\n        emit('virtualUpdate');\r\n        return;\r\n      }\r\n\r\n      if (swiper.params.virtual.renderExternal) {\r\n        swiper.params.virtual.renderExternal.call(swiper, {\r\n          offset,\r\n          from,\r\n          to,\r\n          slides: function getSlides() {\r\n            const slidesToRender = [];\r\n\r\n            for (let i = from; i <= to; i += 1) {\r\n              slidesToRender.push(slides[i]);\r\n            }\r\n\r\n            return slidesToRender;\r\n          }()\r\n        });\r\n\r\n        if (swiper.params.virtual.renderExternalUpdate) {\r\n          onRendered();\r\n        } else {\r\n          emit('virtualUpdate');\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const prependIndexes = [];\r\n      const appendIndexes = [];\r\n\r\n      if (force) {\r\n        swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\r\n      } else {\r\n        for (let i = previousFrom; i <= previousTo; i += 1) {\r\n          if (i < from || i > to) {\r\n            swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (i >= from && i <= to) {\r\n          if (typeof previousTo === 'undefined' || force) {\r\n            appendIndexes.push(i);\r\n          } else {\r\n            if (i > previousTo) appendIndexes.push(i);\r\n            if (i < previousFrom) prependIndexes.push(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      appendIndexes.forEach(index => {\r\n        swiper.$wrapperEl.append(renderSlide(slides[index], index));\r\n      });\r\n      prependIndexes.sort((a, b) => b - a).forEach(index => {\r\n        swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\r\n      });\r\n      swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\r\n      onRendered();\r\n    }\r\n\r\n    function appendSlide(slides) {\r\n      if (typeof slides === 'object' && 'length' in slides) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) swiper.virtual.slides.push(slides[i]);\r\n        }\r\n      } else {\r\n        swiper.virtual.slides.push(slides);\r\n      }\r\n\r\n      update(true);\r\n    }\r\n\r\n    function prependSlide(slides) {\r\n      const activeIndex = swiper.activeIndex;\r\n      let newActiveIndex = activeIndex + 1;\r\n      let numberOfNewSlides = 1;\r\n\r\n      if (Array.isArray(slides)) {\r\n        for (let i = 0; i < slides.length; i += 1) {\r\n          if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\r\n        }\r\n\r\n        newActiveIndex = activeIndex + slides.length;\r\n        numberOfNewSlides = slides.length;\r\n      } else {\r\n        swiper.virtual.slides.unshift(slides);\r\n      }\r\n\r\n      if (swiper.params.virtual.cache) {\r\n        const cache = swiper.virtual.cache;\r\n        const newCache = {};\r\n        Object.keys(cache).forEach(cachedIndex => {\r\n          const $cachedEl = cache[cachedIndex];\r\n          const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\r\n\r\n          if (cachedElIndex) {\r\n            $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\r\n          }\r\n\r\n          newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\r\n        });\r\n        swiper.virtual.cache = newCache;\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(newActiveIndex, 0);\r\n    }\r\n\r\n    function removeSlide(slidesIndexes) {\r\n      if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\r\n      let activeIndex = swiper.activeIndex;\r\n\r\n      if (Array.isArray(slidesIndexes)) {\r\n        for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\r\n          swiper.virtual.slides.splice(slidesIndexes[i], 1);\r\n\r\n          if (swiper.params.virtual.cache) {\r\n            delete swiper.virtual.cache[slidesIndexes[i]];\r\n          }\r\n\r\n          if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\r\n          activeIndex = Math.max(activeIndex, 0);\r\n        }\r\n      } else {\r\n        swiper.virtual.slides.splice(slidesIndexes, 1);\r\n\r\n        if (swiper.params.virtual.cache) {\r\n          delete swiper.virtual.cache[slidesIndexes];\r\n        }\r\n\r\n        if (slidesIndexes < activeIndex) activeIndex -= 1;\r\n        activeIndex = Math.max(activeIndex, 0);\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(activeIndex, 0);\r\n    }\r\n\r\n    function removeAllSlides() {\r\n      swiper.virtual.slides = [];\r\n\r\n      if (swiper.params.virtual.cache) {\r\n        swiper.virtual.cache = {};\r\n      }\r\n\r\n      update(true);\r\n      swiper.slideTo(0, 0);\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n      swiper.virtual.slides = swiper.params.virtual.slides;\r\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\r\n      swiper.params.watchSlidesProgress = true;\r\n      swiper.originalParams.watchSlidesProgress = true;\r\n\r\n      if (!swiper.params.initialSlide) {\r\n        update();\r\n      }\r\n    });\r\n    on('setTranslate', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n\r\n      if (swiper.params.cssMode && !swiper._immediateVirtual) {\r\n        clearTimeout(cssModeTimeout);\r\n        cssModeTimeout = setTimeout(() => {\r\n          update();\r\n        }, 100);\r\n      } else {\r\n        update();\r\n      }\r\n    });\r\n    on('init update resize', () => {\r\n      if (!swiper.params.virtual.enabled) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\r\n      }\r\n    });\r\n    Object.assign(swiper.virtual, {\r\n      appendSlide,\r\n      prependSlide,\r\n      removeSlide,\r\n      removeAllSlides,\r\n      update\r\n    });\r\n  }\r\n\r\n  /* eslint-disable consistent-return */\r\n  function Keyboard(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    swiper.keyboard = {\r\n      enabled: false\r\n    };\r\n    extendParams({\r\n      keyboard: {\r\n        enabled: false,\r\n        onlyInViewport: true,\r\n        pageUpDown: true\r\n      }\r\n    });\r\n\r\n    function handle(event) {\r\n      if (!swiper.enabled) return;\r\n      const {\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      let e = event;\r\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n      const kc = e.keyCode || e.charCode;\r\n      const pageUpDown = swiper.params.keyboard.pageUpDown;\r\n      const isPageUp = pageUpDown && kc === 33;\r\n      const isPageDown = pageUpDown && kc === 34;\r\n      const isArrowLeft = kc === 37;\r\n      const isArrowRight = kc === 39;\r\n      const isArrowUp = kc === 38;\r\n      const isArrowDown = kc === 40; // Directions locks\r\n\r\n      if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\r\n        return false;\r\n      }\r\n\r\n      if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\r\n        return false;\r\n      }\r\n\r\n      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\r\n        return undefined;\r\n      }\r\n\r\n      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\r\n        return undefined;\r\n      }\r\n\r\n      if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\r\n        let inView = false; // Check that swiper should be inside of visible area of window\r\n\r\n        if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\r\n          return undefined;\r\n        }\r\n\r\n        const $el = swiper.$el;\r\n        const swiperWidth = $el[0].clientWidth;\r\n        const swiperHeight = $el[0].clientHeight;\r\n        const windowWidth = window.innerWidth;\r\n        const windowHeight = window.innerHeight;\r\n        const swiperOffset = swiper.$el.offset();\r\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\r\n        const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\r\n\r\n        for (let i = 0; i < swiperCoord.length; i += 1) {\r\n          const point = swiperCoord[i];\r\n\r\n          if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\r\n            if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n\r\n            inView = true;\r\n          }\r\n        }\r\n\r\n        if (!inView) return undefined;\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\r\n          if (e.preventDefault) e.preventDefault(); else e.returnValue = false;\r\n        }\r\n\r\n        if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\r\n        if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\r\n      } else {\r\n        if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\r\n          if (e.preventDefault) e.preventDefault(); else e.returnValue = false;\r\n        }\r\n\r\n        if (isPageDown || isArrowDown) swiper.slideNext();\r\n        if (isPageUp || isArrowUp) swiper.slidePrev();\r\n      }\r\n\r\n      emit('keyPress', kc);\r\n      return undefined;\r\n    }\r\n\r\n    function enable() {\r\n      if (swiper.keyboard.enabled) return;\r\n      $(document).on('keydown', handle);\r\n      swiper.keyboard.enabled = true;\r\n    }\r\n\r\n    function disable() {\r\n      if (!swiper.keyboard.enabled) return;\r\n      $(document).off('keydown', handle);\r\n      swiper.keyboard.enabled = false;\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.keyboard.enabled) {\r\n        enable();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.keyboard.enabled) {\r\n        disable();\r\n      }\r\n    });\r\n    Object.assign(swiper.keyboard, {\r\n      enable,\r\n      disable\r\n    });\r\n  }\r\n\r\n  /* eslint-disable consistent-return */\r\n  function Mousewheel(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    extendParams({\r\n      mousewheel: {\r\n        enabled: false,\r\n        releaseOnEdges: false,\r\n        invert: false,\r\n        forceToAxis: false,\r\n        sensitivity: 1,\r\n        eventsTarget: 'container',\r\n        thresholdDelta: null,\r\n        thresholdTime: null\r\n      }\r\n    });\r\n    swiper.mousewheel = {\r\n      enabled: false\r\n    };\r\n    let timeout;\r\n    let lastScrollTime = now();\r\n    let lastEventBeforeSnap;\r\n    const recentWheelEvents = [];\r\n\r\n    function normalize(e) {\r\n      // Reasonable defaults\r\n      const PIXEL_STEP = 10;\r\n      const LINE_HEIGHT = 40;\r\n      const PAGE_HEIGHT = 800;\r\n      let sX = 0;\r\n      let sY = 0; // spinX, spinY\r\n\r\n      let pX = 0;\r\n      let pY = 0; // pixelX, pixelY\r\n      // Legacy\r\n\r\n      if ('detail' in e) {\r\n        sY = e.detail;\r\n      }\r\n\r\n      if ('wheelDelta' in e) {\r\n        sY = -e.wheelDelta / 120;\r\n      }\r\n\r\n      if ('wheelDeltaY' in e) {\r\n        sY = -e.wheelDeltaY / 120;\r\n      }\r\n\r\n      if ('wheelDeltaX' in e) {\r\n        sX = -e.wheelDeltaX / 120;\r\n      } // side scrolling on FF with DOMMouseScroll\r\n\r\n\r\n      if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n        sX = sY;\r\n        sY = 0;\r\n      }\r\n\r\n      pX = sX * PIXEL_STEP;\r\n      pY = sY * PIXEL_STEP;\r\n\r\n      if ('deltaY' in e) {\r\n        pY = e.deltaY;\r\n      }\r\n\r\n      if ('deltaX' in e) {\r\n        pX = e.deltaX;\r\n      }\r\n\r\n      if (e.shiftKey && !pX) {\r\n        // if user scrolls with shift he wants horizontal scroll\r\n        pX = pY;\r\n        pY = 0;\r\n      }\r\n\r\n      if ((pX || pY) && e.deltaMode) {\r\n        if (e.deltaMode === 1) {\r\n          // delta in LINE units\r\n          pX *= LINE_HEIGHT;\r\n          pY *= LINE_HEIGHT;\r\n        } else {\r\n          // delta in PAGE units\r\n          pX *= PAGE_HEIGHT;\r\n          pY *= PAGE_HEIGHT;\r\n        }\r\n      } // Fall-back if spin cannot be determined\r\n\r\n\r\n      if (pX && !sX) {\r\n        sX = pX < 1 ? -1 : 1;\r\n      }\r\n\r\n      if (pY && !sY) {\r\n        sY = pY < 1 ? -1 : 1;\r\n      }\r\n\r\n      return {\r\n        spinX: sX,\r\n        spinY: sY,\r\n        pixelX: pX,\r\n        pixelY: pY\r\n      };\r\n    }\r\n\r\n    function handleMouseEnter() {\r\n      if (!swiper.enabled) return;\r\n      swiper.mouseEntered = true;\r\n    }\r\n\r\n    function handleMouseLeave() {\r\n      if (!swiper.enabled) return;\r\n      swiper.mouseEntered = false;\r\n    }\r\n\r\n    function animateSlider(newEvent) {\r\n      if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\r\n        // Prevent if delta of wheel scroll delta is below configured threshold\r\n        return false;\r\n      }\r\n\r\n      if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\r\n        // Prevent if time between scrolls is below configured threshold\r\n        return false;\r\n      } // If the movement is NOT big enough and\r\n      // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\r\n      //   Don't go any further (avoid insignificant scroll movement).\r\n\r\n\r\n      if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\r\n        // Return false as a default\r\n        return true;\r\n      } // If user is scrolling towards the end:\r\n      //   If the slider hasn't hit the latest slide or\r\n      //   if the slider is a loop and\r\n      //   if the slider isn't moving right now:\r\n      //     Go to next slide and\r\n      //     emit a scroll event.\r\n      // Else (the user is scrolling towards the beginning) and\r\n      // if the slider hasn't hit the first slide or\r\n      // if the slider is a loop and\r\n      // if the slider isn't moving right now:\r\n      //   Go to prev slide and\r\n      //   emit a scroll event.\r\n\r\n\r\n      if (newEvent.direction < 0) {\r\n        if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n          swiper.slideNext();\r\n          emit('scroll', newEvent.raw);\r\n        }\r\n      } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n        swiper.slidePrev();\r\n        emit('scroll', newEvent.raw);\r\n      } // If you got here is because an animation has been triggered so store the current time\r\n\r\n\r\n      lastScrollTime = new window.Date().getTime(); // Return false as a default\r\n\r\n      return false;\r\n    }\r\n\r\n    function releaseScroll(newEvent) {\r\n      const params = swiper.params.mousewheel;\r\n\r\n      if (newEvent.direction < 0) {\r\n        if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\r\n          // Return true to animate scroll on edges\r\n          return true;\r\n        }\r\n      } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\r\n        // Return true to animate scroll on edges\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    function handle(event) {\r\n      let e = event;\r\n      let disableParentSwiper = true;\r\n      if (!swiper.enabled) return;\r\n      const params = swiper.params.mousewheel;\r\n\r\n      if (swiper.params.cssMode) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      let target = swiper.$el;\r\n\r\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n        target = $(swiper.params.mousewheel.eventsTarget);\r\n      }\r\n\r\n      if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\r\n      if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n\r\n      let delta = 0;\r\n      const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n      const data = normalize(e);\r\n\r\n      if (params.forceToAxis) {\r\n        if (swiper.isHorizontal()) {\r\n          if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor; else return true;\r\n        } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY; else return true;\r\n      } else {\r\n        delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n      }\r\n\r\n      if (delta === 0) return true;\r\n      if (params.invert) delta = -delta; // Get the scroll positions\r\n\r\n      let positions = swiper.getTranslate() + delta * params.sensitivity;\r\n      if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\r\n      if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\r\n      //     the disableParentSwiper will be true.\r\n      // When loop is false:\r\n      //     if the scroll positions is not on edge,\r\n      //     then the disableParentSwiper will be true.\r\n      //     if the scroll on edge positions,\r\n      //     then the disableParentSwiper will be false.\r\n\r\n      disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\r\n      if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\r\n\r\n      if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\r\n        // Register the new event in a variable which stores the relevant data\r\n        const newEvent = {\r\n          time: now(),\r\n          delta: Math.abs(delta),\r\n          direction: Math.sign(delta),\r\n          raw: event\r\n        }; // Keep the most recent events\r\n\r\n        if (recentWheelEvents.length >= 2) {\r\n          recentWheelEvents.shift(); // only store the last N events\r\n        }\r\n\r\n        const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n        recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\r\n        //   If direction has changed or\r\n        //   if the scroll is quicker than the previous one:\r\n        //     Animate the slider.\r\n        // Else (this is the first time the wheel is moved):\r\n        //     Animate the slider.\r\n\r\n        if (prevEvent) {\r\n          if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\r\n            animateSlider(newEvent);\r\n          }\r\n        } else {\r\n          animateSlider(newEvent);\r\n        } // If it's time to release the scroll:\r\n        //   Return now so you don't hit the preventDefault.\r\n\r\n\r\n        if (releaseScroll(newEvent)) {\r\n          return true;\r\n        }\r\n      } else {\r\n        // Freemode or scrollContainer:\r\n        // If we recently snapped after a momentum scroll, then ignore wheel events\r\n        // to give time for the deceleration to finish. Stop ignoring after 500 msecs\r\n        // or if it's a new scroll (larger delta or inverse sign as last event before\r\n        // an end-of-momentum snap).\r\n        const newEvent = {\r\n          time: now(),\r\n          delta: Math.abs(delta),\r\n          direction: Math.sign(delta)\r\n        };\r\n        const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\r\n\r\n        if (!ignoreWheelEvents) {\r\n          lastEventBeforeSnap = undefined;\r\n\r\n          if (swiper.params.loop) {\r\n            swiper.loopFix();\r\n          }\r\n\r\n          let position = swiper.getTranslate() + delta * params.sensitivity;\r\n          const wasBeginning = swiper.isBeginning;\r\n          const wasEnd = swiper.isEnd;\r\n          if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n          if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n          swiper.setTransition(0);\r\n          swiper.setTranslate(position);\r\n          swiper.updateProgress();\r\n          swiper.updateActiveIndex();\r\n          swiper.updateSlidesClasses();\r\n\r\n          if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\r\n            swiper.updateSlidesClasses();\r\n          }\r\n\r\n          if (swiper.params.freeMode.sticky) {\r\n            // When wheel scrolling starts with sticky (aka snap) enabled, then detect\r\n            // the end of a momentum scroll by storing recent (N=15?) wheel events.\r\n            // 1. do all N events have decreasing or same (absolute value) delta?\r\n            // 2. did all N events arrive in the last M (M=500?) msecs?\r\n            // 3. does the earliest event have an (absolute value) delta that's\r\n            //    at least P (P=1?) larger than the most recent event's delta?\r\n            // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\r\n            // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\r\n            // Snap immediately and ignore remaining wheel events in this scroll.\r\n            // See comment above for \"remaining wheel events in this scroll\" determination.\r\n            // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\r\n            clearTimeout(timeout);\r\n            timeout = undefined;\r\n\r\n            if (recentWheelEvents.length >= 15) {\r\n              recentWheelEvents.shift(); // only store the last N events\r\n            }\r\n\r\n            const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\r\n            const firstEvent = recentWheelEvents[0];\r\n            recentWheelEvents.push(newEvent);\r\n\r\n            if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\r\n              // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\r\n              recentWheelEvents.splice(0);\r\n            } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\r\n              // We're at the end of the deceleration of a momentum scroll, so there's no need\r\n              // to wait for more events. Snap ASAP on the next tick.\r\n              // Also, because there's some remaining momentum we'll bias the snap in the\r\n              // direction of the ongoing scroll because it's better UX for the scroll to snap\r\n              // in the same direction as the scroll instead of reversing to snap.  Therefore,\r\n              // if it's already scrolled more than 20% in the current direction, keep going.\r\n              const snapToThreshold = delta > 0 ? 0.8 : 0.2;\r\n              lastEventBeforeSnap = newEvent;\r\n              recentWheelEvents.splice(0);\r\n              timeout = nextTick(() => {\r\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n              }, 0); // no delay; move on next tick\r\n            }\r\n\r\n            if (!timeout) {\r\n              // if we get here, then we haven't detected the end of a momentum scroll, so\r\n              // we'll consider a scroll \"complete\" when there haven't been any wheel events\r\n              // for 500ms.\r\n              timeout = nextTick(() => {\r\n                const snapToThreshold = 0.5;\r\n                lastEventBeforeSnap = newEvent;\r\n                recentWheelEvents.splice(0);\r\n                swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\r\n              }, 500);\r\n            }\r\n          } // Emit event\r\n\r\n\r\n          if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\r\n\r\n          if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\r\n\r\n          if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n        }\r\n      }\r\n\r\n      if (e.preventDefault) e.preventDefault(); else e.returnValue = false;\r\n      return false;\r\n    }\r\n\r\n    function events(method) {\r\n      let target = swiper.$el;\r\n\r\n      if (swiper.params.mousewheel.eventsTarget !== 'container') {\r\n        target = $(swiper.params.mousewheel.eventsTarget);\r\n      }\r\n\r\n      target[method]('mouseenter', handleMouseEnter);\r\n      target[method]('mouseleave', handleMouseLeave);\r\n      target[method]('wheel', handle);\r\n    }\r\n\r\n    function enable() {\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.removeEventListener('wheel', handle);\r\n        return true;\r\n      }\r\n\r\n      if (swiper.mousewheel.enabled) return false;\r\n      events('on');\r\n      swiper.mousewheel.enabled = true;\r\n      return true;\r\n    }\r\n\r\n    function disable() {\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.addEventListener(event, handle);\r\n        return true;\r\n      }\r\n\r\n      if (!swiper.mousewheel.enabled) return false;\r\n      events('off');\r\n      swiper.mousewheel.enabled = false;\r\n      return true;\r\n    }\r\n\r\n    on('init', () => {\r\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\r\n        disable();\r\n      }\r\n\r\n      if (swiper.params.mousewheel.enabled) enable();\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.cssMode) {\r\n        enable();\r\n      }\r\n\r\n      if (swiper.mousewheel.enabled) disable();\r\n    });\r\n    Object.assign(swiper.mousewheel, {\r\n      enable,\r\n      disable\r\n    });\r\n  }\r\n\r\n  function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\r\n    const document = getDocument();\r\n\r\n    if (swiper.params.createElements) {\r\n      Object.keys(checkProps).forEach(key => {\r\n        if (!params[key] && params.auto === true) {\r\n          let element = swiper.$el.children(`.${checkProps[key]}`)[0];\r\n\r\n          if (!element) {\r\n            element = document.createElement('div');\r\n            element.className = checkProps[key];\r\n            swiper.$el.append(element);\r\n          }\r\n\r\n          params[key] = element;\r\n          originalParams[key] = element;\r\n        }\r\n      });\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  function Navigation(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    extendParams({\r\n      navigation: {\r\n        nextEl: null,\r\n        prevEl: null,\r\n        hideOnClick: false,\r\n        disabledClass: 'swiper-button-disabled',\r\n        hiddenClass: 'swiper-button-hidden',\r\n        lockClass: 'swiper-button-lock',\r\n        navigationDisabledClass: 'swiper-navigation-disabled'\r\n      }\r\n    });\r\n    swiper.navigation = {\r\n      nextEl: null,\r\n      $nextEl: null,\r\n      prevEl: null,\r\n      $prevEl: null\r\n    };\r\n\r\n    function getEl(el) {\r\n      let $el;\r\n\r\n      if (el) {\r\n        $el = $(el);\r\n\r\n        if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\r\n          $el = swiper.$el.find(el);\r\n        }\r\n      }\r\n\r\n      return $el;\r\n    }\r\n\r\n    function toggleEl($el, disabled) {\r\n      const params = swiper.params.navigation;\r\n\r\n      if ($el && $el.length > 0) {\r\n        $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\r\n        if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\r\n\r\n        if (swiper.params.watchOverflow && swiper.enabled) {\r\n          $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n        }\r\n      }\r\n    }\r\n\r\n    function update() {\r\n      // Update Navigation Buttons\r\n      if (swiper.params.loop) return;\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n      toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\r\n      toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\r\n    }\r\n\r\n    function onPrevClick(e) {\r\n      e.preventDefault();\r\n      if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\r\n      swiper.slidePrev();\r\n      emit('navigationPrev');\r\n    }\r\n\r\n    function onNextClick(e) {\r\n      e.preventDefault();\r\n      if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\r\n      swiper.slideNext();\r\n      emit('navigationNext');\r\n    }\r\n\r\n    function init() {\r\n      const params = swiper.params.navigation;\r\n      swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\r\n        nextEl: 'swiper-button-next',\r\n        prevEl: 'swiper-button-prev'\r\n      });\r\n      if (!(params.nextEl || params.prevEl)) return;\r\n      const $nextEl = getEl(params.nextEl);\r\n      const $prevEl = getEl(params.prevEl);\r\n\r\n      if ($nextEl && $nextEl.length > 0) {\r\n        $nextEl.on('click', onNextClick);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length > 0) {\r\n        $prevEl.on('click', onPrevClick);\r\n      }\r\n\r\n      Object.assign(swiper.navigation, {\r\n        $nextEl,\r\n        nextEl: $nextEl && $nextEl[0],\r\n        $prevEl,\r\n        prevEl: $prevEl && $prevEl[0]\r\n      });\r\n\r\n      if (!swiper.enabled) {\r\n        if ($nextEl) $nextEl.addClass(params.lockClass);\r\n        if ($prevEl) $prevEl.addClass(params.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($nextEl && $nextEl.length) {\r\n        $nextEl.off('click', onNextClick);\r\n        $nextEl.removeClass(swiper.params.navigation.disabledClass);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length) {\r\n        $prevEl.off('click', onPrevClick);\r\n        $prevEl.removeClass(swiper.params.navigation.disabledClass);\r\n      }\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.navigation.enabled === false) {\r\n        // eslint-disable-next-line\r\n        disable();\r\n      } else {\r\n        init();\r\n        update();\r\n      }\r\n    });\r\n    on('toEdge fromEdge lock unlock', () => {\r\n      update();\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($nextEl) {\r\n        $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\r\n      }\r\n\r\n      if ($prevEl) {\r\n        $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\r\n      }\r\n    });\r\n    on('click', (_s, e) => {\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n      const targetEl = e.target;\r\n\r\n      if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\r\n        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\r\n        let isHidden;\r\n\r\n        if ($nextEl) {\r\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\r\n        } else if ($prevEl) {\r\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n\r\n        if (isHidden === true) {\r\n          emit('navigationShow');\r\n        } else {\r\n          emit('navigationHide');\r\n        }\r\n\r\n        if ($nextEl) {\r\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n\r\n        if ($prevEl) {\r\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\r\n        }\r\n      }\r\n    });\r\n\r\n    const enable = () => {\r\n      swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\r\n      init();\r\n      update();\r\n    };\r\n\r\n    const disable = () => {\r\n      swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\r\n      destroy();\r\n    };\r\n\r\n    Object.assign(swiper.navigation, {\r\n      enable,\r\n      disable,\r\n      update,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function classesToSelector(classes) {\r\n    if (classes === void 0) {\r\n      classes = '';\r\n    }\r\n\r\n    return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\r\n      .replace(/ /g, '.')}`;\r\n  }\r\n\r\n  function Pagination(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const pfx = 'swiper-pagination';\r\n    extendParams({\r\n      pagination: {\r\n        el: null,\r\n        bulletElement: 'span',\r\n        clickable: false,\r\n        hideOnClick: false,\r\n        renderBullet: null,\r\n        renderProgressbar: null,\r\n        renderFraction: null,\r\n        renderCustom: null,\r\n        progressbarOpposite: false,\r\n        type: 'bullets',\r\n        // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n        dynamicBullets: false,\r\n        dynamicMainBullets: 1,\r\n        formatFractionCurrent: number => number,\r\n        formatFractionTotal: number => number,\r\n        bulletClass: `${pfx}-bullet`,\r\n        bulletActiveClass: `${pfx}-bullet-active`,\r\n        modifierClass: `${pfx}-`,\r\n        currentClass: `${pfx}-current`,\r\n        totalClass: `${pfx}-total`,\r\n        hiddenClass: `${pfx}-hidden`,\r\n        progressbarFillClass: `${pfx}-progressbar-fill`,\r\n        progressbarOppositeClass: `${pfx}-progressbar-opposite`,\r\n        clickableClass: `${pfx}-clickable`,\r\n        lockClass: `${pfx}-lock`,\r\n        horizontalClass: `${pfx}-horizontal`,\r\n        verticalClass: `${pfx}-vertical`,\r\n        paginationDisabledClass: `${pfx}-disabled`\r\n      }\r\n    });\r\n    swiper.pagination = {\r\n      el: null,\r\n      $el: null,\r\n      bullets: []\r\n    };\r\n    let bulletSize;\r\n    let dynamicBulletIndex = 0;\r\n\r\n    function isPaginationDisabled() {\r\n      return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\r\n    }\r\n\r\n    function setSideBullets($bulletEl, position) {\r\n      const {\r\n        bulletActiveClass\r\n      } = swiper.params.pagination;\r\n      $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\r\n    }\r\n\r\n    function update() {\r\n      // Render || Update Pagination bullets/items\r\n      const rtl = swiper.rtl;\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const $el = swiper.pagination.$el; // Current/Total\r\n\r\n      let current;\r\n      const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n      if (swiper.params.loop) {\r\n        current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n\r\n        if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\r\n          current -= slidesLength - swiper.loopedSlides * 2;\r\n        }\r\n\r\n        if (current > total - 1) current -= total;\r\n        if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\r\n      } else if (typeof swiper.snapIndex !== 'undefined') {\r\n        current = swiper.snapIndex;\r\n      } else {\r\n        current = swiper.activeIndex || 0;\r\n      } // Types\r\n\r\n\r\n      if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n        const bullets = swiper.pagination.bullets;\r\n        let firstIndex;\r\n        let lastIndex;\r\n        let midIndex;\r\n\r\n        if (params.dynamicBullets) {\r\n          bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n          $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\r\n\r\n          if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n            dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\r\n\r\n            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\r\n              dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n            } else if (dynamicBulletIndex < 0) {\r\n              dynamicBulletIndex = 0;\r\n            }\r\n          }\r\n\r\n          firstIndex = Math.max(current - dynamicBulletIndex, 0);\r\n          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n          midIndex = (lastIndex + firstIndex) / 2;\r\n        }\r\n\r\n        bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\r\n\r\n        if ($el.length > 1) {\r\n          bullets.each(bullet => {\r\n            const $bullet = $(bullet);\r\n            const bulletIndex = $bullet.index();\r\n\r\n            if (bulletIndex === current) {\r\n              $bullet.addClass(params.bulletActiveClass);\r\n            }\r\n\r\n            if (params.dynamicBullets) {\r\n              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n                $bullet.addClass(`${params.bulletActiveClass}-main`);\r\n              }\r\n\r\n              if (bulletIndex === firstIndex) {\r\n                setSideBullets($bullet, 'prev');\r\n              }\r\n\r\n              if (bulletIndex === lastIndex) {\r\n                setSideBullets($bullet, 'next');\r\n              }\r\n            }\r\n          });\r\n        } else {\r\n          const $bullet = bullets.eq(current);\r\n          const bulletIndex = $bullet.index();\r\n          $bullet.addClass(params.bulletActiveClass);\r\n\r\n          if (params.dynamicBullets) {\r\n            const $firstDisplayedBullet = bullets.eq(firstIndex);\r\n            const $lastDisplayedBullet = bullets.eq(lastIndex);\r\n\r\n            for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n              bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\r\n            }\r\n\r\n            if (swiper.params.loop) {\r\n              if (bulletIndex >= bullets.length) {\r\n                for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\r\n                  bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\r\n                }\r\n\r\n                bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\r\n              } else {\r\n                setSideBullets($firstDisplayedBullet, 'prev');\r\n                setSideBullets($lastDisplayedBullet, 'next');\r\n              }\r\n            } else {\r\n              setSideBullets($firstDisplayedBullet, 'prev');\r\n              setSideBullets($lastDisplayedBullet, 'next');\r\n            }\r\n          }\r\n        }\r\n\r\n        if (params.dynamicBullets) {\r\n          const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n          const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\r\n          const offsetProp = rtl ? 'right' : 'left';\r\n          bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\r\n        }\r\n      }\r\n\r\n      if (params.type === 'fraction') {\r\n        $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\r\n        $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\r\n      }\r\n\r\n      if (params.type === 'progressbar') {\r\n        let progressbarDirection;\r\n\r\n        if (params.progressbarOpposite) {\r\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n        } else {\r\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n        }\r\n\r\n        const scale = (current + 1) / total;\r\n        let scaleX = 1;\r\n        let scaleY = 1;\r\n\r\n        if (progressbarDirection === 'horizontal') {\r\n          scaleX = scale;\r\n        } else {\r\n          scaleY = scale;\r\n        }\r\n\r\n        $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\r\n      }\r\n\r\n      if (params.type === 'custom' && params.renderCustom) {\r\n        $el.html(params.renderCustom(swiper, current + 1, total));\r\n        emit('paginationRender', $el[0]);\r\n      } else {\r\n        emit('paginationUpdate', $el[0]);\r\n      }\r\n\r\n      if (swiper.params.watchOverflow && swiper.enabled) {\r\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n      }\r\n    }\r\n\r\n    function render() {\r\n      // Render Container\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n      const $el = swiper.pagination.$el;\r\n      let paginationHTML = '';\r\n\r\n      if (params.type === 'bullets') {\r\n        let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n\r\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\r\n          numberOfBullets = slidesLength;\r\n        }\r\n\r\n        for (let i = 0; i < numberOfBullets; i += 1) {\r\n          if (params.renderBullet) {\r\n            paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n          } else {\r\n            paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n          }\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n        swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\r\n      }\r\n\r\n      if (params.type === 'fraction') {\r\n        if (params.renderFraction) {\r\n          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n        } else {\r\n          paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n      }\r\n\r\n      if (params.type === 'progressbar') {\r\n        if (params.renderProgressbar) {\r\n          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n        } else {\r\n          paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n        }\r\n\r\n        $el.html(paginationHTML);\r\n      }\r\n\r\n      if (params.type !== 'custom') {\r\n        emit('paginationRender', swiper.pagination.$el[0]);\r\n      }\r\n    }\r\n\r\n    function init() {\r\n      swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\r\n        el: 'swiper-pagination'\r\n      });\r\n      const params = swiper.params.pagination;\r\n      if (!params.el) return;\r\n      let $el = $(params.el);\r\n      if ($el.length === 0) return;\r\n\r\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\r\n        $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\r\n\r\n        if ($el.length > 1) {\r\n          $el = $el.filter(el => {\r\n            if ($(el).parents('.swiper')[0] !== swiper.el) return false;\r\n            return true;\r\n          });\r\n        }\r\n      }\r\n\r\n      if (params.type === 'bullets' && params.clickable) {\r\n        $el.addClass(params.clickableClass);\r\n      }\r\n\r\n      $el.addClass(params.modifierClass + params.type);\r\n      $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n\r\n      if (params.type === 'bullets' && params.dynamicBullets) {\r\n        $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\r\n        dynamicBulletIndex = 0;\r\n\r\n        if (params.dynamicMainBullets < 1) {\r\n          params.dynamicMainBullets = 1;\r\n        }\r\n      }\r\n\r\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n        $el.addClass(params.progressbarOppositeClass);\r\n      }\r\n\r\n      if (params.clickable) {\r\n        $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\r\n          e.preventDefault();\r\n          let index = $(this).index() * swiper.params.slidesPerGroup;\r\n          if (swiper.params.loop) index += swiper.loopedSlides;\r\n          swiper.slideTo(index);\r\n        });\r\n      }\r\n\r\n      Object.assign(swiper.pagination, {\r\n        $el,\r\n        el: $el[0]\r\n      });\r\n\r\n      if (!swiper.enabled) {\r\n        $el.addClass(params.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      const params = swiper.params.pagination;\r\n      if (isPaginationDisabled()) return;\r\n      const $el = swiper.pagination.$el;\r\n      $el.removeClass(params.hiddenClass);\r\n      $el.removeClass(params.modifierClass + params.type);\r\n      $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n      if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n\r\n      if (params.clickable) {\r\n        $el.off('click', classesToSelector(params.bulletClass));\r\n      }\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.pagination.enabled === false) {\r\n        // eslint-disable-next-line\r\n        disable();\r\n      } else {\r\n        init();\r\n        render();\r\n        update();\r\n      }\r\n    });\r\n    on('activeIndexChange', () => {\r\n      if (swiper.params.loop) {\r\n        update();\r\n      } else if (typeof swiper.snapIndex === 'undefined') {\r\n        update();\r\n      }\r\n    });\r\n    on('snapIndexChange', () => {\r\n      if (!swiper.params.loop) {\r\n        update();\r\n      }\r\n    });\r\n    on('slidesLengthChange', () => {\r\n      if (swiper.params.loop) {\r\n        render();\r\n        update();\r\n      }\r\n    });\r\n    on('snapGridLengthChange', () => {\r\n      if (!swiper.params.loop) {\r\n        render();\r\n        update();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $el\r\n      } = swiper.pagination;\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\r\n      }\r\n    });\r\n    on('lock unlock', () => {\r\n      update();\r\n    });\r\n    on('click', (_s, e) => {\r\n      const targetEl = e.target;\r\n      const {\r\n        $el\r\n      } = swiper.pagination;\r\n\r\n      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\r\n        if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\r\n        const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\r\n\r\n        if (isHidden === true) {\r\n          emit('paginationShow');\r\n        } else {\r\n          emit('paginationHide');\r\n        }\r\n\r\n        $el.toggleClass(swiper.params.pagination.hiddenClass);\r\n      }\r\n    });\r\n\r\n    const enable = () => {\r\n      swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\r\n\r\n      if (swiper.pagination.$el) {\r\n        swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\r\n      }\r\n\r\n      init();\r\n      render();\r\n      update();\r\n    };\r\n\r\n    const disable = () => {\r\n      swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\r\n\r\n      if (swiper.pagination.$el) {\r\n        swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\r\n      }\r\n\r\n      destroy();\r\n    };\r\n\r\n    Object.assign(swiper.pagination, {\r\n      enable,\r\n      disable,\r\n      render,\r\n      update,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function Scrollbar(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const document = getDocument();\r\n    let isTouched = false;\r\n    let timeout = null;\r\n    let dragTimeout = null;\r\n    let dragStartPos;\r\n    let dragSize;\r\n    let trackSize;\r\n    let divider;\r\n    extendParams({\r\n      scrollbar: {\r\n        el: null,\r\n        dragSize: 'auto',\r\n        hide: false,\r\n        draggable: false,\r\n        snapOnRelease: true,\r\n        lockClass: 'swiper-scrollbar-lock',\r\n        dragClass: 'swiper-scrollbar-drag',\r\n        scrollbarDisabledClass: 'swiper-scrollbar-disabled',\r\n        horizontalClass: `swiper-scrollbar-horizontal`,\r\n        verticalClass: `swiper-scrollbar-vertical`\r\n      }\r\n    });\r\n    swiper.scrollbar = {\r\n      el: null,\r\n      dragEl: null,\r\n      $el: null,\r\n      $dragEl: null\r\n    };\r\n\r\n    function setTranslate() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      const {\r\n        scrollbar,\r\n        rtlTranslate: rtl,\r\n        progress\r\n      } = swiper;\r\n      const {\r\n        $dragEl,\r\n        $el\r\n      } = scrollbar;\r\n      const params = swiper.params.scrollbar;\r\n      let newSize = dragSize;\r\n      let newPos = (trackSize - dragSize) * progress;\r\n\r\n      if (rtl) {\r\n        newPos = -newPos;\r\n\r\n        if (newPos > 0) {\r\n          newSize = dragSize - newPos;\r\n          newPos = 0;\r\n        } else if (-newPos + dragSize > trackSize) {\r\n          newSize = trackSize + newPos;\r\n        }\r\n      } else if (newPos < 0) {\r\n        newSize = dragSize + newPos;\r\n        newPos = 0;\r\n      } else if (newPos + dragSize > trackSize) {\r\n        newSize = trackSize - newPos;\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\r\n        $dragEl[0].style.width = `${newSize}px`;\r\n      } else {\r\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\r\n        $dragEl[0].style.height = `${newSize}px`;\r\n      }\r\n\r\n      if (params.hide) {\r\n        clearTimeout(timeout);\r\n        $el[0].style.opacity = 1;\r\n        timeout = setTimeout(() => {\r\n          $el[0].style.opacity = 0;\r\n          $el.transition(400);\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n    function setTransition(duration) {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      swiper.scrollbar.$dragEl.transition(duration);\r\n    }\r\n\r\n    function updateSize() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      const {\r\n        scrollbar\r\n      } = swiper;\r\n      const {\r\n        $dragEl,\r\n        $el\r\n      } = scrollbar;\r\n      $dragEl[0].style.width = '';\r\n      $dragEl[0].style.height = '';\r\n      trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n      divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\r\n\r\n      if (swiper.params.scrollbar.dragSize === 'auto') {\r\n        dragSize = trackSize * divider;\r\n      } else {\r\n        dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n      }\r\n\r\n      if (swiper.isHorizontal()) {\r\n        $dragEl[0].style.width = `${dragSize}px`;\r\n      } else {\r\n        $dragEl[0].style.height = `${dragSize}px`;\r\n      }\r\n\r\n      if (divider >= 1) {\r\n        $el[0].style.display = 'none';\r\n      } else {\r\n        $el[0].style.display = '';\r\n      }\r\n\r\n      if (swiper.params.scrollbar.hide) {\r\n        $el[0].style.opacity = 0;\r\n      }\r\n\r\n      if (swiper.params.watchOverflow && swiper.enabled) {\r\n        scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    }\r\n\r\n    function getPointerPosition(e) {\r\n      if (swiper.isHorizontal()) {\r\n        return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\r\n      }\r\n\r\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\r\n    }\r\n\r\n    function setDragPosition(e) {\r\n      const {\r\n        scrollbar,\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      const {\r\n        $el\r\n      } = scrollbar;\r\n      let positionRatio;\r\n      positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n      positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n\r\n      if (rtl) {\r\n        positionRatio = 1 - positionRatio;\r\n      }\r\n\r\n      const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\r\n      swiper.updateProgress(position);\r\n      swiper.setTranslate(position);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n\r\n    function onDragStart(e) {\r\n      const params = swiper.params.scrollbar;\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el,\r\n        $dragEl\r\n      } = scrollbar;\r\n      isTouched = true;\r\n      dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      $wrapperEl.transition(100);\r\n      $dragEl.transition(100);\r\n      setDragPosition(e);\r\n      clearTimeout(dragTimeout);\r\n      $el.transition(0);\r\n\r\n      if (params.hide) {\r\n        $el.css('opacity', 1);\r\n      }\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.$wrapperEl.css('scroll-snap-type', 'none');\r\n      }\r\n\r\n      emit('scrollbarDragStart', e);\r\n    }\r\n\r\n    function onDragMove(e) {\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el,\r\n        $dragEl\r\n      } = scrollbar;\r\n      if (!isTouched) return;\r\n      if (e.preventDefault) e.preventDefault(); else e.returnValue = false;\r\n      setDragPosition(e);\r\n      $wrapperEl.transition(0);\r\n      $el.transition(0);\r\n      $dragEl.transition(0);\r\n      emit('scrollbarDragMove', e);\r\n    }\r\n\r\n    function onDragEnd(e) {\r\n      const params = swiper.params.scrollbar;\r\n      const {\r\n        scrollbar,\r\n        $wrapperEl\r\n      } = swiper;\r\n      const {\r\n        $el\r\n      } = scrollbar;\r\n      if (!isTouched) return;\r\n      isTouched = false;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.$wrapperEl.css('scroll-snap-type', '');\r\n        $wrapperEl.transition('');\r\n      }\r\n\r\n      if (params.hide) {\r\n        clearTimeout(dragTimeout);\r\n        dragTimeout = nextTick(() => {\r\n          $el.css('opacity', 0);\r\n          $el.transition(400);\r\n        }, 1000);\r\n      }\r\n\r\n      emit('scrollbarDragEnd', e);\r\n\r\n      if (params.snapOnRelease) {\r\n        swiper.slideToClosest();\r\n      }\r\n    }\r\n\r\n    function events(method) {\r\n      const {\r\n        scrollbar,\r\n        touchEventsTouch,\r\n        touchEventsDesktop,\r\n        params,\r\n        support\r\n      } = swiper;\r\n      const $el = scrollbar.$el;\r\n      if (!$el) return;\r\n      const target = $el[0];\r\n      const activeListener = support.passiveListener && params.passiveListeners ? {\r\n        passive: false,\r\n        capture: false\r\n      } : false;\r\n      const passiveListener = support.passiveListener && params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      if (!target) return;\r\n      const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\r\n\r\n      if (!support.touch) {\r\n        target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\r\n        document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\r\n        document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\r\n      } else {\r\n        target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\r\n        target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\r\n        target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\r\n      }\r\n    }\r\n\r\n    function enableDraggable() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      events('on');\r\n    }\r\n\r\n    function disableDraggable() {\r\n      if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n      events('off');\r\n    }\r\n\r\n    function init() {\r\n      const {\r\n        scrollbar,\r\n        $el: $swiperEl\r\n      } = swiper;\r\n      swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\r\n        el: 'swiper-scrollbar'\r\n      });\r\n      const params = swiper.params.scrollbar;\r\n      if (!params.el) return;\r\n      let $el = $(params.el);\r\n\r\n      if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n        $el = $swiperEl.find(params.el);\r\n      }\r\n\r\n      $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n      let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\r\n\r\n      if ($dragEl.length === 0) {\r\n        $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\r\n        $el.append($dragEl);\r\n      }\r\n\r\n      Object.assign(scrollbar, {\r\n        $el,\r\n        el: $el[0],\r\n        $dragEl,\r\n        dragEl: $dragEl[0]\r\n      });\r\n\r\n      if (params.draggable) {\r\n        enableDraggable();\r\n      }\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    }\r\n\r\n    function destroy() {\r\n      const params = swiper.params.scrollbar;\r\n      const $el = swiper.scrollbar.$el;\r\n\r\n      if ($el) {\r\n        $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\r\n      }\r\n\r\n      disableDraggable();\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.scrollbar.enabled === false) {\r\n        // eslint-disable-next-line\r\n        disable();\r\n      } else {\r\n        init();\r\n        updateSize();\r\n        setTranslate();\r\n      }\r\n    });\r\n    on('update resize observerUpdate lock unlock', () => {\r\n      updateSize();\r\n    });\r\n    on('setTranslate', () => {\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      setTransition(duration);\r\n    });\r\n    on('enable disable', () => {\r\n      const {\r\n        $el\r\n      } = swiper.scrollbar;\r\n\r\n      if ($el) {\r\n        $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      destroy();\r\n    });\r\n\r\n    const enable = () => {\r\n      swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\r\n\r\n      if (swiper.scrollbar.$el) {\r\n        swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\r\n      }\r\n\r\n      init();\r\n      updateSize();\r\n      setTranslate();\r\n    };\r\n\r\n    const disable = () => {\r\n      swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\r\n\r\n      if (swiper.scrollbar.$el) {\r\n        swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\r\n      }\r\n\r\n      destroy();\r\n    };\r\n\r\n    Object.assign(swiper.scrollbar, {\r\n      enable,\r\n      disable,\r\n      updateSize,\r\n      setTranslate,\r\n      init,\r\n      destroy\r\n    });\r\n  }\r\n\r\n  function Parallax(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      parallax: {\r\n        enabled: false\r\n      }\r\n    });\r\n\r\n    const setTransform = (el, progress) => {\r\n      const {\r\n        rtl\r\n      } = swiper;\r\n      const $el = $(el);\r\n      const rtlFactor = rtl ? -1 : 1;\r\n      const p = $el.attr('data-swiper-parallax') || '0';\r\n      let x = $el.attr('data-swiper-parallax-x');\r\n      let y = $el.attr('data-swiper-parallax-y');\r\n      const scale = $el.attr('data-swiper-parallax-scale');\r\n      const opacity = $el.attr('data-swiper-parallax-opacity');\r\n\r\n      if (x || y) {\r\n        x = x || '0';\r\n        y = y || '0';\r\n      } else if (swiper.isHorizontal()) {\r\n        x = p;\r\n        y = '0';\r\n      } else {\r\n        y = p;\r\n        x = '0';\r\n      }\r\n\r\n      if (x.indexOf('%') >= 0) {\r\n        x = `${parseInt(x, 10) * progress * rtlFactor}%`;\r\n      } else {\r\n        x = `${x * progress * rtlFactor}px`;\r\n      }\r\n\r\n      if (y.indexOf('%') >= 0) {\r\n        y = `${parseInt(y, 10) * progress}%`;\r\n      } else {\r\n        y = `${y * progress}px`;\r\n      }\r\n\r\n      if (typeof opacity !== 'undefined' && opacity !== null) {\r\n        const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\r\n        $el[0].style.opacity = currentOpacity;\r\n      }\r\n\r\n      if (typeof scale === 'undefined' || scale === null) {\r\n        $el.transform(`translate3d(${x}, ${y}, 0px)`);\r\n      } else {\r\n        const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\r\n        $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\r\n      }\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        $el,\r\n        slides,\r\n        progress,\r\n        snapGrid\r\n      } = swiper;\r\n      $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\r\n        setTransform(el, progress);\r\n      });\r\n      slides.each((slideEl, slideIndex) => {\r\n        let slideProgress = slideEl.progress;\r\n\r\n        if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\r\n          slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\r\n        }\r\n\r\n        slideProgress = Math.min(Math.max(slideProgress, -1), 1);\r\n        $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\r\n          setTransform(el, slideProgress);\r\n        });\r\n      });\r\n    };\r\n\r\n    const setTransition = function (duration) {\r\n      if (duration === void 0) {\r\n        duration = swiper.params.speed;\r\n      }\r\n\r\n      const {\r\n        $el\r\n      } = swiper;\r\n      $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\r\n        const $parallaxEl = $(parallaxEl);\r\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\r\n        if (duration === 0) parallaxDuration = 0;\r\n        $parallaxEl.transition(parallaxDuration);\r\n      });\r\n    };\r\n\r\n    on('beforeInit', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      swiper.params.watchSlidesProgress = true;\r\n      swiper.originalParams.watchSlidesProgress = true;\r\n    });\r\n    on('init', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTranslate();\r\n    });\r\n    on('setTranslate', () => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_swiper, duration) => {\r\n      if (!swiper.params.parallax.enabled) return;\r\n      setTransition(duration);\r\n    });\r\n  }\r\n\r\n  function Zoom(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    const window = getWindow();\r\n    extendParams({\r\n      zoom: {\r\n        enabled: false,\r\n        maxRatio: 3,\r\n        minRatio: 1,\r\n        toggle: true,\r\n        containerClass: 'swiper-zoom-container',\r\n        zoomedSlideClass: 'swiper-slide-zoomed'\r\n      }\r\n    });\r\n    swiper.zoom = {\r\n      enabled: false\r\n    };\r\n    let currentScale = 1;\r\n    let isScaling = false;\r\n    let gesturesEnabled;\r\n    let fakeGestureTouched;\r\n    let fakeGestureMoved;\r\n    const gesture = {\r\n      $slideEl: undefined,\r\n      slideWidth: undefined,\r\n      slideHeight: undefined,\r\n      $imageEl: undefined,\r\n      $imageWrapEl: undefined,\r\n      maxRatio: 3\r\n    };\r\n    const image = {\r\n      isTouched: undefined,\r\n      isMoved: undefined,\r\n      currentX: undefined,\r\n      currentY: undefined,\r\n      minX: undefined,\r\n      minY: undefined,\r\n      maxX: undefined,\r\n      maxY: undefined,\r\n      width: undefined,\r\n      height: undefined,\r\n      startX: undefined,\r\n      startY: undefined,\r\n      touchesStart: {},\r\n      touchesCurrent: {}\r\n    };\r\n    const velocity = {\r\n      x: undefined,\r\n      y: undefined,\r\n      prevPositionX: undefined,\r\n      prevPositionY: undefined,\r\n      prevTime: undefined\r\n    };\r\n    let scale = 1;\r\n    Object.defineProperty(swiper.zoom, 'scale', {\r\n      get() {\r\n        return scale;\r\n      },\r\n\r\n      set(value) {\r\n        if (scale !== value) {\r\n          const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\r\n          const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\r\n          emit('zoomChange', value, imageEl, slideEl);\r\n        }\r\n\r\n        scale = value;\r\n      }\r\n\r\n    });\r\n\r\n    function getDistanceBetweenTouches(e) {\r\n      if (e.targetTouches.length < 2) return 1;\r\n      const x1 = e.targetTouches[0].pageX;\r\n      const y1 = e.targetTouches[0].pageY;\r\n      const x2 = e.targetTouches[1].pageX;\r\n      const y2 = e.targetTouches[1].pageY;\r\n      const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\r\n      return distance;\r\n    } // Events\r\n\r\n\r\n    function onGestureStart(e) {\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      fakeGestureTouched = false;\r\n      fakeGestureMoved = false;\r\n\r\n      if (!support.gestures) {\r\n        if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureTouched = true;\r\n        gesture.scaleStart = getDistanceBetweenTouches(e);\r\n      }\r\n\r\n      if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\r\n        if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n        gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n        if (gesture.$imageWrapEl.length === 0) {\r\n          gesture.$imageEl = undefined;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (gesture.$imageEl) {\r\n        gesture.$imageEl.transition(0);\r\n      }\r\n\r\n      isScaling = true;\r\n    }\r\n\r\n    function onGestureChange(e) {\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      const zoom = swiper.zoom;\r\n\r\n      if (!support.gestures) {\r\n        if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureMoved = true;\r\n        gesture.scaleMove = getDistanceBetweenTouches(e);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\r\n        if (e.type === 'gesturechange') onGestureStart(e);\r\n        return;\r\n      }\r\n\r\n      if (support.gestures) {\r\n        zoom.scale = e.scale * currentScale;\r\n      } else {\r\n        zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\r\n      }\r\n\r\n      if (zoom.scale > gesture.maxRatio) {\r\n        zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\r\n      }\r\n\r\n      if (zoom.scale < params.minRatio) {\r\n        zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\r\n      }\r\n\r\n      gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    }\r\n\r\n    function onGestureEnd(e) {\r\n      const device = swiper.device;\r\n      const support = swiper.support;\r\n      const params = swiper.params.zoom;\r\n      const zoom = swiper.zoom;\r\n\r\n      if (!support.gestures) {\r\n        if (!fakeGestureTouched || !fakeGestureMoved) {\r\n          return;\r\n        }\r\n\r\n        if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\r\n          return;\r\n        }\r\n\r\n        fakeGestureTouched = false;\r\n        fakeGestureMoved = false;\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n      gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n      currentScale = zoom.scale;\r\n      isScaling = false;\r\n      if (zoom.scale === 1) gesture.$slideEl = undefined;\r\n    }\r\n\r\n    function onTouchStart(e) {\r\n      const device = swiper.device;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      if (image.isTouched) return;\r\n      if (device.android && e.cancelable) e.preventDefault();\r\n      image.isTouched = true;\r\n      image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n      image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n    }\r\n\r\n    function onTouchMove(e) {\r\n      const zoom = swiper.zoom;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n      swiper.allowClick = false;\r\n      if (!image.isTouched || !gesture.$slideEl) return;\r\n\r\n      if (!image.isMoved) {\r\n        image.width = gesture.$imageEl[0].offsetWidth;\r\n        image.height = gesture.$imageEl[0].offsetHeight;\r\n        image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n        image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n        gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n        gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n        gesture.$imageWrapEl.transition(0);\r\n      } // Define if we need image drag\r\n\r\n\r\n      const scaledWidth = image.width * zoom.scale;\r\n      const scaledHeight = image.height * zoom.scale;\r\n      if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n      image.maxX = -image.minX;\r\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n      image.maxY = -image.minY;\r\n      image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n      image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n\r\n      if (!image.isMoved && !isScaling) {\r\n        if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\r\n          image.isTouched = false;\r\n          return;\r\n        }\r\n\r\n        if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\r\n          image.isTouched = false;\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (e.cancelable) {\r\n        e.preventDefault();\r\n      }\r\n\r\n      e.stopPropagation();\r\n      image.isMoved = true;\r\n      image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\r\n      image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\r\n\r\n      if (image.currentX < image.minX) {\r\n        image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentX > image.maxX) {\r\n        image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentY < image.minY) {\r\n        image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\r\n      }\r\n\r\n      if (image.currentY > image.maxY) {\r\n        image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\r\n      } // Velocity\r\n\r\n\r\n      if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n      if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n      if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n      velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n      velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n      if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n      if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n      velocity.prevPositionX = image.touchesCurrent.x;\r\n      velocity.prevPositionY = image.touchesCurrent.y;\r\n      velocity.prevTime = Date.now();\r\n      gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n    }\r\n\r\n    function onTouchEnd() {\r\n      const zoom = swiper.zoom;\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n      if (!image.isTouched || !image.isMoved) {\r\n        image.isTouched = false;\r\n        image.isMoved = false;\r\n        return;\r\n      }\r\n\r\n      image.isTouched = false;\r\n      image.isMoved = false;\r\n      let momentumDurationX = 300;\r\n      let momentumDurationY = 300;\r\n      const momentumDistanceX = velocity.x * momentumDurationX;\r\n      const newPositionX = image.currentX + momentumDistanceX;\r\n      const momentumDistanceY = velocity.y * momentumDurationY;\r\n      const newPositionY = image.currentY + momentumDistanceY; // Fix duration\r\n\r\n      if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n      if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n      const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n      image.currentX = newPositionX;\r\n      image.currentY = newPositionY; // Define if we need image drag\r\n\r\n      const scaledWidth = image.width * zoom.scale;\r\n      const scaledHeight = image.height * zoom.scale;\r\n      image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\r\n      image.maxX = -image.minX;\r\n      image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\r\n      image.maxY = -image.minY;\r\n      image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n      image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n      gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n    }\r\n\r\n    function onTransitionEnd() {\r\n      const zoom = swiper.zoom;\r\n\r\n      if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n        if (gesture.$imageEl) {\r\n          gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n        }\r\n\r\n        if (gesture.$imageWrapEl) {\r\n          gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n        }\r\n\r\n        zoom.scale = 1;\r\n        currentScale = 1;\r\n        gesture.$slideEl = undefined;\r\n        gesture.$imageEl = undefined;\r\n        gesture.$imageWrapEl = undefined;\r\n      }\r\n    }\r\n\r\n    function zoomIn(e) {\r\n      const zoom = swiper.zoom;\r\n      const params = swiper.params.zoom;\r\n\r\n      if (!gesture.$slideEl) {\r\n        if (e && e.target) {\r\n          gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\r\n        }\r\n\r\n        if (!gesture.$slideEl) {\r\n          if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n            gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n          } else {\r\n            gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n          }\r\n        }\r\n\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.overflow = 'hidden';\r\n        swiper.wrapperEl.style.touchAction = 'none';\r\n      }\r\n\r\n      gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\r\n      let touchX;\r\n      let touchY;\r\n      let offsetX;\r\n      let offsetY;\r\n      let diffX;\r\n      let diffY;\r\n      let translateX;\r\n      let translateY;\r\n      let imageWidth;\r\n      let imageHeight;\r\n      let scaledWidth;\r\n      let scaledHeight;\r\n      let translateMinX;\r\n      let translateMinY;\r\n      let translateMaxX;\r\n      let translateMaxY;\r\n      let slideWidth;\r\n      let slideHeight;\r\n\r\n      if (typeof image.touchesStart.x === 'undefined' && e) {\r\n        touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n        touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n      } else {\r\n        touchX = image.touchesStart.x;\r\n        touchY = image.touchesStart.y;\r\n      }\r\n\r\n      zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n      currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n\r\n      if (e) {\r\n        slideWidth = gesture.$slideEl[0].offsetWidth;\r\n        slideHeight = gesture.$slideEl[0].offsetHeight;\r\n        offsetX = gesture.$slideEl.offset().left + window.scrollX;\r\n        offsetY = gesture.$slideEl.offset().top + window.scrollY;\r\n        diffX = offsetX + slideWidth / 2 - touchX;\r\n        diffY = offsetY + slideHeight / 2 - touchY;\r\n        imageWidth = gesture.$imageEl[0].offsetWidth;\r\n        imageHeight = gesture.$imageEl[0].offsetHeight;\r\n        scaledWidth = imageWidth * zoom.scale;\r\n        scaledHeight = imageHeight * zoom.scale;\r\n        translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\r\n        translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\r\n        translateMaxX = -translateMinX;\r\n        translateMaxY = -translateMinY;\r\n        translateX = diffX * zoom.scale;\r\n        translateY = diffY * zoom.scale;\r\n\r\n        if (translateX < translateMinX) {\r\n          translateX = translateMinX;\r\n        }\r\n\r\n        if (translateX > translateMaxX) {\r\n          translateX = translateMaxX;\r\n        }\r\n\r\n        if (translateY < translateMinY) {\r\n          translateY = translateMinY;\r\n        }\r\n\r\n        if (translateY > translateMaxY) {\r\n          translateY = translateMaxY;\r\n        }\r\n      } else {\r\n        translateX = 0;\r\n        translateY = 0;\r\n      }\r\n\r\n      gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\r\n      gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    }\r\n\r\n    function zoomOut() {\r\n      const zoom = swiper.zoom;\r\n      const params = swiper.params.zoom;\r\n\r\n      if (!gesture.$slideEl) {\r\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\r\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\r\n        } else {\r\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n        }\r\n\r\n        gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\r\n        gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      }\r\n\r\n      if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\r\n\r\n      if (swiper.params.cssMode) {\r\n        swiper.wrapperEl.style.overflow = '';\r\n        swiper.wrapperEl.style.touchAction = '';\r\n      }\r\n\r\n      zoom.scale = 1;\r\n      currentScale = 1;\r\n      gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n      gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n      gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\r\n      gesture.$slideEl = undefined;\r\n    } // Toggle Zoom\r\n\r\n\r\n    function zoomToggle(e) {\r\n      const zoom = swiper.zoom;\r\n\r\n      if (zoom.scale && zoom.scale !== 1) {\r\n        // Zoom Out\r\n        zoomOut();\r\n      } else {\r\n        // Zoom In\r\n        zoomIn(e);\r\n      }\r\n    }\r\n\r\n    function getListeners() {\r\n      const support = swiper.support;\r\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n      const activeListenerWithCapture = support.passiveListener ? {\r\n        passive: false,\r\n        capture: true\r\n      } : true;\r\n      return {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      };\r\n    }\r\n\r\n    function getSlideSelector() {\r\n      return `.${swiper.params.slideClass}`;\r\n    }\r\n\r\n    function toggleGestures(method) {\r\n      const {\r\n        passiveListener\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector();\r\n      swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\r\n      swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\r\n      swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\r\n    }\r\n\r\n    function enableGestures() {\r\n      if (gesturesEnabled) return;\r\n      gesturesEnabled = true;\r\n      toggleGestures('on');\r\n    }\r\n\r\n    function disableGestures() {\r\n      if (!gesturesEnabled) return;\r\n      gesturesEnabled = false;\r\n      toggleGestures('off');\r\n    } // Attach/Detach Events\r\n\r\n\r\n    function enable() {\r\n      const zoom = swiper.zoom;\r\n      if (zoom.enabled) return;\r\n      zoom.enabled = true;\r\n      const support = swiper.support;\r\n      const {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector(); // Scale image\r\n\r\n      if (support.gestures) {\r\n        swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\r\n      } else if (swiper.touchEvents.start === 'touchstart') {\r\n        swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\r\n        swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\r\n\r\n        if (swiper.touchEvents.cancel) {\r\n          swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\r\n        }\r\n      } // Move image\r\n\r\n\r\n      swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\r\n    }\r\n\r\n    function disable() {\r\n      const zoom = swiper.zoom;\r\n      if (!zoom.enabled) return;\r\n      const support = swiper.support;\r\n      zoom.enabled = false;\r\n      const {\r\n        passiveListener,\r\n        activeListenerWithCapture\r\n      } = getListeners();\r\n      const slideSelector = getSlideSelector(); // Scale image\r\n\r\n      if (support.gestures) {\r\n        swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\r\n      } else if (swiper.touchEvents.start === 'touchstart') {\r\n        swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\r\n        swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\r\n\r\n        if (swiper.touchEvents.cancel) {\r\n          swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\r\n        }\r\n      } // Move image\r\n\r\n\r\n      swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.zoom.enabled) {\r\n        enable();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      disable();\r\n    });\r\n    on('touchStart', (_s, e) => {\r\n      if (!swiper.zoom.enabled) return;\r\n      onTouchStart(e);\r\n    });\r\n    on('touchEnd', (_s, e) => {\r\n      if (!swiper.zoom.enabled) return;\r\n      onTouchEnd();\r\n    });\r\n    on('doubleTap', (_s, e) => {\r\n      if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n        zoomToggle(e);\r\n      }\r\n    });\r\n    on('transitionEnd', () => {\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n        onTransitionEnd();\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\r\n        onTransitionEnd();\r\n      }\r\n    });\r\n    Object.assign(swiper.zoom, {\r\n      enable,\r\n      disable,\r\n      in: zoomIn,\r\n      out: zoomOut,\r\n      toggle: zoomToggle\r\n    });\r\n  }\r\n\r\n  function Lazy(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    extendParams({\r\n      lazy: {\r\n        checkInView: false,\r\n        enabled: false,\r\n        loadPrevNext: false,\r\n        loadPrevNextAmount: 1,\r\n        loadOnTransitionStart: false,\r\n        scrollingElement: '',\r\n        elementClass: 'swiper-lazy',\r\n        loadingClass: 'swiper-lazy-loading',\r\n        loadedClass: 'swiper-lazy-loaded',\r\n        preloaderClass: 'swiper-lazy-preloader'\r\n      }\r\n    });\r\n    swiper.lazy = {};\r\n    let scrollHandlerAttached = false;\r\n    let initialImageLoaded = false;\r\n\r\n    function loadInSlide(index, loadInDuplicate) {\r\n      if (loadInDuplicate === void 0) {\r\n        loadInDuplicate = true;\r\n      }\r\n\r\n      const params = swiper.params.lazy;\r\n      if (typeof index === 'undefined') return;\r\n      if (swiper.slides.length === 0) return;\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\r\n      const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\r\n\r\n      if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\r\n        $images.push($slideEl[0]);\r\n      }\r\n\r\n      if ($images.length === 0) return;\r\n      $images.each(imageEl => {\r\n        const $imageEl = $(imageEl);\r\n        $imageEl.addClass(params.loadingClass);\r\n        const background = $imageEl.attr('data-background');\r\n        const src = $imageEl.attr('data-src');\r\n        const srcset = $imageEl.attr('data-srcset');\r\n        const sizes = $imageEl.attr('data-sizes');\r\n        const $pictureEl = $imageEl.parent('picture');\r\n        swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\r\n          if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\r\n\r\n          if (background) {\r\n            $imageEl.css('background-image', `url(\"${background}\")`);\r\n            $imageEl.removeAttr('data-background');\r\n          } else {\r\n            if (srcset) {\r\n              $imageEl.attr('srcset', srcset);\r\n              $imageEl.removeAttr('data-srcset');\r\n            }\r\n\r\n            if (sizes) {\r\n              $imageEl.attr('sizes', sizes);\r\n              $imageEl.removeAttr('data-sizes');\r\n            }\r\n\r\n            if ($pictureEl.length) {\r\n              $pictureEl.children('source').each(sourceEl => {\r\n                const $source = $(sourceEl);\r\n\r\n                if ($source.attr('data-srcset')) {\r\n                  $source.attr('srcset', $source.attr('data-srcset'));\r\n                  $source.removeAttr('data-srcset');\r\n                }\r\n              });\r\n            }\r\n\r\n            if (src) {\r\n              $imageEl.attr('src', src);\r\n              $imageEl.removeAttr('data-src');\r\n            }\r\n          }\r\n\r\n          $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\r\n          $slideEl.find(`.${params.preloaderClass}`).remove();\r\n\r\n          if (swiper.params.loop && loadInDuplicate) {\r\n            const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\r\n\r\n            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\r\n              const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\r\n              loadInSlide(originalSlide.index(), false);\r\n            } else {\r\n              const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\r\n              loadInSlide(duplicatedSlide.index(), false);\r\n            }\r\n          }\r\n\r\n          emit('lazyImageReady', $slideEl[0], $imageEl[0]);\r\n\r\n          if (swiper.params.autoHeight) {\r\n            swiper.updateAutoHeight();\r\n          }\r\n        });\r\n        emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\r\n      });\r\n    }\r\n\r\n    function load() {\r\n      const {\r\n        $wrapperEl,\r\n        params: swiperParams,\r\n        slides,\r\n        activeIndex\r\n      } = swiper;\r\n      const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\r\n      const params = swiperParams.lazy;\r\n      let slidesPerView = swiperParams.slidesPerView;\r\n\r\n      if (slidesPerView === 'auto') {\r\n        slidesPerView = 0;\r\n      }\r\n\r\n      function slideExist(index) {\r\n        if (isVirtual) {\r\n          if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\r\n            return true;\r\n          }\r\n        } else if (slides[index]) return true;\r\n\r\n        return false;\r\n      }\r\n\r\n      function slideIndex(slideEl) {\r\n        if (isVirtual) {\r\n          return $(slideEl).attr('data-swiper-slide-index');\r\n        }\r\n\r\n        return $(slideEl).index();\r\n      }\r\n\r\n      if (!initialImageLoaded) initialImageLoaded = true;\r\n\r\n      if (swiper.params.watchSlidesProgress) {\r\n        $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\r\n          const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\r\n          loadInSlide(index);\r\n        });\r\n      } else if (slidesPerView > 1) {\r\n        for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\r\n          if (slideExist(i)) loadInSlide(i);\r\n        }\r\n      } else {\r\n        loadInSlide(activeIndex);\r\n      }\r\n\r\n      if (params.loadPrevNext) {\r\n        if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\r\n          const amount = params.loadPrevNextAmount;\r\n          const spv = Math.ceil(slidesPerView);\r\n          const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\r\n          const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\r\n\r\n          for (let i = activeIndex + spv; i < maxIndex; i += 1) {\r\n            if (slideExist(i)) loadInSlide(i);\r\n          } // Prev Slides\r\n\r\n\r\n          for (let i = minIndex; i < activeIndex; i += 1) {\r\n            if (slideExist(i)) loadInSlide(i);\r\n          }\r\n        } else {\r\n          const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\r\n          if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\r\n          const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\r\n          if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\r\n        }\r\n      }\r\n    }\r\n\r\n    function checkInViewOnLoad() {\r\n      const window = getWindow();\r\n      if (!swiper || swiper.destroyed) return;\r\n      const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\r\n      const isWindow = $scrollElement[0] === window;\r\n      const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\r\n      const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\r\n      const swiperOffset = swiper.$el.offset();\r\n      const {\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      let inView = false;\r\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\r\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\r\n\r\n      for (let i = 0; i < swiperCoord.length; i += 1) {\r\n        const point = swiperCoord[i];\r\n\r\n        if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\r\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\r\n\r\n          inView = true;\r\n        }\r\n      }\r\n\r\n      const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\r\n        passive: true,\r\n        capture: false\r\n      } : false;\r\n\r\n      if (inView) {\r\n        load();\r\n        $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\r\n      } else if (!scrollHandlerAttached) {\r\n        scrollHandlerAttached = true;\r\n        $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\r\n        swiper.params.preloadImages = false;\r\n      }\r\n    });\r\n    on('init', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('scroll', () => {\r\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\r\n        load();\r\n      }\r\n    });\r\n    on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('transitionStart', () => {\r\n      if (swiper.params.lazy.enabled) {\r\n        if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\r\n          if (swiper.params.lazy.checkInView) {\r\n            checkInViewOnLoad();\r\n          } else {\r\n            load();\r\n          }\r\n        }\r\n      }\r\n    });\r\n    on('transitionEnd', () => {\r\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\r\n        if (swiper.params.lazy.checkInView) {\r\n          checkInViewOnLoad();\r\n        } else {\r\n          load();\r\n        }\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      const {\r\n        lazy,\r\n        cssMode,\r\n        watchSlidesProgress,\r\n        touchReleaseOnEdges,\r\n        resistanceRatio\r\n      } = swiper.params;\r\n\r\n      if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\r\n        load();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (!swiper.$el) return;\r\n      swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);\r\n    });\r\n    Object.assign(swiper.lazy, {\r\n      load,\r\n      loadInSlide\r\n    });\r\n  }\r\n\r\n  /* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\r\n  function Controller(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      controller: {\r\n        control: undefined,\r\n        inverse: false,\r\n        by: 'slide' // or 'container'\r\n\r\n      }\r\n    });\r\n    swiper.controller = {\r\n      control: undefined\r\n    };\r\n\r\n    function LinearSpline(x, y) {\r\n      const binarySearch = function search() {\r\n        let maxIndex;\r\n        let minIndex;\r\n        let guess;\r\n        return (array, val) => {\r\n          minIndex = -1;\r\n          maxIndex = array.length;\r\n\r\n          while (maxIndex - minIndex > 1) {\r\n            guess = maxIndex + minIndex >> 1;\r\n\r\n            if (array[guess] <= val) {\r\n              minIndex = guess;\r\n            } else {\r\n              maxIndex = guess;\r\n            }\r\n          }\r\n\r\n          return maxIndex;\r\n        };\r\n      }();\r\n\r\n      this.x = x;\r\n      this.y = y;\r\n      this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\r\n      // (x1,y1) is the known point before given value,\r\n      // (x3,y3) is the known point after given value.\r\n\r\n      let i1;\r\n      let i3;\r\n\r\n      this.interpolate = function interpolate(x2) {\r\n        if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\r\n\r\n        i3 = binarySearch(this.x, x2);\r\n        i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\r\n        // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\r\n\r\n        return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\r\n      };\r\n\r\n      return this;\r\n    } // xxx: for now i will just save one spline function to to\r\n\r\n\r\n    function getInterpolateFunction(c) {\r\n      if (!swiper.controller.spline) {\r\n        swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\r\n      }\r\n    }\r\n\r\n    function setTranslate(_t, byController) {\r\n      const controlled = swiper.controller.control;\r\n      let multiplier;\r\n      let controlledTranslate;\r\n      const Swiper = swiper.constructor;\r\n\r\n      function setControlledTranslate(c) {\r\n        // this will create an Interpolate function based on the snapGrids\r\n        // x is the Grid of the scrolled scroller and y will be the controlled scroller\r\n        // it makes sense to create this only once and recall it for the interpolation\r\n        // the function does a lot of value caching for performance\r\n        const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\r\n\r\n        if (swiper.params.controller.by === 'slide') {\r\n          getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\r\n          // but it did not work out\r\n\r\n          controlledTranslate = -swiper.controller.spline.interpolate(-translate);\r\n        }\r\n\r\n        if (!controlledTranslate || swiper.params.controller.by === 'container') {\r\n          multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\r\n          controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\r\n        }\r\n\r\n        if (swiper.params.controller.inverse) {\r\n          controlledTranslate = c.maxTranslate() - controlledTranslate;\r\n        }\r\n\r\n        c.updateProgress(controlledTranslate);\r\n        c.setTranslate(controlledTranslate, swiper);\r\n        c.updateActiveIndex();\r\n        c.updateSlidesClasses();\r\n      }\r\n\r\n      if (Array.isArray(controlled)) {\r\n        for (let i = 0; i < controlled.length; i += 1) {\r\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n            setControlledTranslate(controlled[i]);\r\n          }\r\n        }\r\n      } else if (controlled instanceof Swiper && byController !== controlled) {\r\n        setControlledTranslate(controlled);\r\n      }\r\n    }\r\n\r\n    function setTransition(duration, byController) {\r\n      const Swiper = swiper.constructor;\r\n      const controlled = swiper.controller.control;\r\n      let i;\r\n\r\n      function setControlledTransition(c) {\r\n        c.setTransition(duration, swiper);\r\n\r\n        if (duration !== 0) {\r\n          c.transitionStart();\r\n\r\n          if (c.params.autoHeight) {\r\n            nextTick(() => {\r\n              c.updateAutoHeight();\r\n            });\r\n          }\r\n\r\n          c.$wrapperEl.transitionEnd(() => {\r\n            if (!controlled) return;\r\n\r\n            if (c.params.loop && swiper.params.controller.by === 'slide') {\r\n              c.loopFix();\r\n            }\r\n\r\n            c.transitionEnd();\r\n          });\r\n        }\r\n      }\r\n\r\n      if (Array.isArray(controlled)) {\r\n        for (i = 0; i < controlled.length; i += 1) {\r\n          if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\r\n            setControlledTransition(controlled[i]);\r\n          }\r\n        }\r\n      } else if (controlled instanceof Swiper && byController !== controlled) {\r\n        setControlledTransition(controlled);\r\n      }\r\n    }\r\n\r\n    function removeSpline() {\r\n      if (!swiper.controller.control) return;\r\n\r\n      if (swiper.controller.spline) {\r\n        swiper.controller.spline = undefined;\r\n        delete swiper.controller.spline;\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      swiper.controller.control = swiper.params.controller.control;\r\n    });\r\n    on('update', () => {\r\n      removeSpline();\r\n    });\r\n    on('resize', () => {\r\n      removeSpline();\r\n    });\r\n    on('observerUpdate', () => {\r\n      removeSpline();\r\n    });\r\n    on('setTranslate', (_s, translate, byController) => {\r\n      if (!swiper.controller.control) return;\r\n      swiper.controller.setTranslate(translate, byController);\r\n    });\r\n    on('setTransition', (_s, duration, byController) => {\r\n      if (!swiper.controller.control) return;\r\n      swiper.controller.setTransition(duration, byController);\r\n    });\r\n    Object.assign(swiper.controller, {\r\n      setTranslate,\r\n      setTransition\r\n    });\r\n  }\r\n\r\n  function A11y(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      a11y: {\r\n        enabled: true,\r\n        notificationClass: 'swiper-notification',\r\n        prevSlideMessage: 'Previous slide',\r\n        nextSlideMessage: 'Next slide',\r\n        firstSlideMessage: 'This is the first slide',\r\n        lastSlideMessage: 'This is the last slide',\r\n        paginationBulletMessage: 'Go to slide {{index}}',\r\n        slideLabelMessage: '{{index}} / {{slidesLength}}',\r\n        containerMessage: null,\r\n        containerRoleDescriptionMessage: null,\r\n        itemRoleDescriptionMessage: null,\r\n        slideRole: 'group',\r\n        id: null\r\n      }\r\n    });\r\n    swiper.a11y = {\r\n      clicked: false\r\n    };\r\n    let liveRegion = null;\r\n\r\n    function notify(message) {\r\n      const notification = liveRegion;\r\n      if (notification.length === 0) return;\r\n      notification.html('');\r\n      notification.html(message);\r\n    }\r\n\r\n    function getRandomNumber(size) {\r\n      if (size === void 0) {\r\n        size = 16;\r\n      }\r\n\r\n      const randomChar = () => Math.round(16 * Math.random()).toString(16);\r\n\r\n      return 'x'.repeat(size).replace(/x/g, randomChar);\r\n    }\r\n\r\n    function makeElFocusable($el) {\r\n      $el.attr('tabIndex', '0');\r\n    }\r\n\r\n    function makeElNotFocusable($el) {\r\n      $el.attr('tabIndex', '-1');\r\n    }\r\n\r\n    function addElRole($el, role) {\r\n      $el.attr('role', role);\r\n    }\r\n\r\n    function addElRoleDescription($el, description) {\r\n      $el.attr('aria-roledescription', description);\r\n    }\r\n\r\n    function addElControls($el, controls) {\r\n      $el.attr('aria-controls', controls);\r\n    }\r\n\r\n    function addElLabel($el, label) {\r\n      $el.attr('aria-label', label);\r\n    }\r\n\r\n    function addElId($el, id) {\r\n      $el.attr('id', id);\r\n    }\r\n\r\n    function addElLive($el, live) {\r\n      $el.attr('aria-live', live);\r\n    }\r\n\r\n    function disableEl($el) {\r\n      $el.attr('aria-disabled', true);\r\n    }\r\n\r\n    function enableEl($el) {\r\n      $el.attr('aria-disabled', false);\r\n    }\r\n\r\n    function onEnterOrSpaceKey(e) {\r\n      if (e.keyCode !== 13 && e.keyCode !== 32) return;\r\n      const params = swiper.params.a11y;\r\n      const $targetEl = $(e.target);\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\r\n        if (!(swiper.isEnd && !swiper.params.loop)) {\r\n          swiper.slideNext();\r\n        }\r\n\r\n        if (swiper.isEnd) {\r\n          notify(params.lastSlideMessage);\r\n        } else {\r\n          notify(params.nextSlideMessage);\r\n        }\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\r\n        if (!(swiper.isBeginning && !swiper.params.loop)) {\r\n          swiper.slidePrev();\r\n        }\r\n\r\n        if (swiper.isBeginning) {\r\n          notify(params.firstSlideMessage);\r\n        } else {\r\n          notify(params.prevSlideMessage);\r\n        }\r\n      }\r\n\r\n      if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\r\n        $targetEl[0].click();\r\n      }\r\n    }\r\n\r\n    function updateNavigation() {\r\n      if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\r\n      const {\r\n        $nextEl,\r\n        $prevEl\r\n      } = swiper.navigation;\r\n\r\n      if ($prevEl && $prevEl.length > 0) {\r\n        if (swiper.isBeginning) {\r\n          disableEl($prevEl);\r\n          makeElNotFocusable($prevEl);\r\n        } else {\r\n          enableEl($prevEl);\r\n          makeElFocusable($prevEl);\r\n        }\r\n      }\r\n\r\n      if ($nextEl && $nextEl.length > 0) {\r\n        if (swiper.isEnd) {\r\n          disableEl($nextEl);\r\n          makeElNotFocusable($nextEl);\r\n        } else {\r\n          enableEl($nextEl);\r\n          makeElFocusable($nextEl);\r\n        }\r\n      }\r\n    }\r\n\r\n    function hasPagination() {\r\n      return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\r\n    }\r\n\r\n    function hasClickablePagination() {\r\n      return hasPagination() && swiper.params.pagination.clickable;\r\n    }\r\n\r\n    function updatePagination() {\r\n      const params = swiper.params.a11y;\r\n      if (!hasPagination()) return;\r\n      swiper.pagination.bullets.each(bulletEl => {\r\n        const $bulletEl = $(bulletEl);\r\n\r\n        if (swiper.params.pagination.clickable) {\r\n          makeElFocusable($bulletEl);\r\n\r\n          if (!swiper.params.pagination.renderBullet) {\r\n            addElRole($bulletEl, 'button');\r\n            addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\r\n          }\r\n        }\r\n\r\n        if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\r\n          $bulletEl.attr('aria-current', 'true');\r\n        } else {\r\n          $bulletEl.removeAttr('aria-current');\r\n        }\r\n      });\r\n    }\r\n\r\n    const initNavEl = ($el, wrapperId, message) => {\r\n      makeElFocusable($el);\r\n\r\n      if ($el[0].tagName !== 'BUTTON') {\r\n        addElRole($el, 'button');\r\n        $el.on('keydown', onEnterOrSpaceKey);\r\n      }\r\n\r\n      addElLabel($el, message);\r\n      addElControls($el, wrapperId);\r\n    };\r\n\r\n    const handlePointerDown = () => {\r\n      swiper.a11y.clicked = true;\r\n    };\r\n\r\n    const handlePointerUp = () => {\r\n      requestAnimationFrame(() => {\r\n        requestAnimationFrame(() => {\r\n          if (!swiper.destroyed) {\r\n            swiper.a11y.clicked = false;\r\n          }\r\n        });\r\n      });\r\n    };\r\n\r\n    const handleFocus = e => {\r\n      if (swiper.a11y.clicked) return;\r\n      const slideEl = e.target.closest(`.${swiper.params.slideClass}`);\r\n      if (!slideEl || !swiper.slides.includes(slideEl)) return;\r\n      const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\r\n      const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\r\n      if (isActive || isVisible) return;\r\n      if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\r\n\r\n      if (swiper.isHorizontal()) {\r\n        swiper.el.scrollLeft = 0;\r\n      } else {\r\n        swiper.el.scrollTop = 0;\r\n      }\r\n\r\n      swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\r\n    };\r\n\r\n    const initSlides = () => {\r\n      const params = swiper.params.a11y;\r\n\r\n      if (params.itemRoleDescriptionMessage) {\r\n        addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\r\n      }\r\n\r\n      if (params.slideRole) {\r\n        addElRole($(swiper.slides), params.slideRole);\r\n      }\r\n\r\n      const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\r\n\r\n      if (params.slideLabelMessage) {\r\n        swiper.slides.each((slideEl, index) => {\r\n          const $slideEl = $(slideEl);\r\n          const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\r\n          const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\r\n          addElLabel($slideEl, ariaLabelMessage);\r\n        });\r\n      }\r\n    };\r\n\r\n    const init = () => {\r\n      const params = swiper.params.a11y;\r\n      swiper.$el.append(liveRegion); // Container\r\n\r\n      const $containerEl = swiper.$el;\r\n\r\n      if (params.containerRoleDescriptionMessage) {\r\n        addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\r\n      }\r\n\r\n      if (params.containerMessage) {\r\n        addElLabel($containerEl, params.containerMessage);\r\n      } // Wrapper\r\n\r\n\r\n      const $wrapperEl = swiper.$wrapperEl;\r\n      const wrapperId = params.id || $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\r\n      const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\r\n      addElId($wrapperEl, wrapperId);\r\n      addElLive($wrapperEl, live); // Slide\r\n\r\n      initSlides(); // Navigation\r\n\r\n      let $nextEl;\r\n      let $prevEl;\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl) {\r\n        $nextEl = swiper.navigation.$nextEl;\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl) {\r\n        $prevEl = swiper.navigation.$prevEl;\r\n      }\r\n\r\n      if ($nextEl && $nextEl.length) {\r\n        initNavEl($nextEl, wrapperId, params.nextSlideMessage);\r\n      }\r\n\r\n      if ($prevEl && $prevEl.length) {\r\n        initNavEl($prevEl, wrapperId, params.prevSlideMessage);\r\n      } // Pagination\r\n\r\n\r\n      if (hasClickablePagination()) {\r\n        swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\r\n      } // Tab focus\r\n\r\n\r\n      swiper.$el.on('focus', handleFocus, true);\r\n      swiper.$el.on('pointerdown', handlePointerDown, true);\r\n      swiper.$el.on('pointerup', handlePointerUp, true);\r\n    };\r\n\r\n    function destroy() {\r\n      if (liveRegion && liveRegion.length > 0) liveRegion.remove();\r\n      let $nextEl;\r\n      let $prevEl;\r\n\r\n      if (swiper.navigation && swiper.navigation.$nextEl) {\r\n        $nextEl = swiper.navigation.$nextEl;\r\n      }\r\n\r\n      if (swiper.navigation && swiper.navigation.$prevEl) {\r\n        $prevEl = swiper.navigation.$prevEl;\r\n      }\r\n\r\n      if ($nextEl) {\r\n        $nextEl.off('keydown', onEnterOrSpaceKey);\r\n      }\r\n\r\n      if ($prevEl) {\r\n        $prevEl.off('keydown', onEnterOrSpaceKey);\r\n      } // Pagination\r\n\r\n\r\n      if (hasClickablePagination()) {\r\n        swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\r\n      } // Tab focus\r\n\r\n\r\n      swiper.$el.off('focus', handleFocus, true);\r\n      swiper.$el.off('pointerdown', handlePointerDown, true);\r\n      swiper.$el.off('pointerup', handlePointerUp, true);\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\r\n    });\r\n    on('afterInit', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      init();\r\n    });\r\n    on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      initSlides();\r\n    });\r\n    on('fromEdge toEdge afterInit lock unlock', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      updateNavigation();\r\n    });\r\n    on('paginationUpdate', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      updatePagination();\r\n    });\r\n    on('destroy', () => {\r\n      if (!swiper.params.a11y.enabled) return;\r\n      destroy();\r\n    });\r\n  }\r\n\r\n  function History(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      history: {\r\n        enabled: false,\r\n        root: '',\r\n        replaceState: false,\r\n        key: 'slides',\r\n        keepQuery: false\r\n      }\r\n    });\r\n    let initialized = false;\r\n    let paths = {};\r\n\r\n    const slugify = text => {\r\n      return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\r\n    };\r\n\r\n    const getPathValues = urlOverride => {\r\n      const window = getWindow();\r\n      let location;\r\n\r\n      if (urlOverride) {\r\n        location = new URL(urlOverride);\r\n      } else {\r\n        location = window.location;\r\n      }\r\n\r\n      const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\r\n      const total = pathArray.length;\r\n      const key = pathArray[total - 2];\r\n      const value = pathArray[total - 1];\r\n      return {\r\n        key,\r\n        value\r\n      };\r\n    };\r\n\r\n    const setHistory = (key, index) => {\r\n      const window = getWindow();\r\n      if (!initialized || !swiper.params.history.enabled) return;\r\n      let location;\r\n\r\n      if (swiper.params.url) {\r\n        location = new URL(swiper.params.url);\r\n      } else {\r\n        location = window.location;\r\n      }\r\n\r\n      const slide = swiper.slides.eq(index);\r\n      let value = slugify(slide.attr('data-history'));\r\n\r\n      if (swiper.params.history.root.length > 0) {\r\n        let root = swiper.params.history.root;\r\n        if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\r\n        value = `${root}/${key}/${value}`;\r\n      } else if (!location.pathname.includes(key)) {\r\n        value = `${key}/${value}`;\r\n      }\r\n\r\n      if (swiper.params.history.keepQuery) {\r\n        value += location.search;\r\n      }\r\n\r\n      const currentState = window.history.state;\r\n\r\n      if (currentState && currentState.value === value) {\r\n        return;\r\n      }\r\n\r\n      if (swiper.params.history.replaceState) {\r\n        window.history.replaceState({\r\n          value\r\n        }, null, value);\r\n      } else {\r\n        window.history.pushState({\r\n          value\r\n        }, null, value);\r\n      }\r\n    };\r\n\r\n    const scrollToSlide = (speed, value, runCallbacks) => {\r\n      if (value) {\r\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n          const slide = swiper.slides.eq(i);\r\n          const slideHistory = slugify(slide.attr('data-history'));\r\n\r\n          if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n            const index = slide.index();\r\n            swiper.slideTo(index, speed, runCallbacks);\r\n          }\r\n        }\r\n      } else {\r\n        swiper.slideTo(0, speed, runCallbacks);\r\n      }\r\n    };\r\n\r\n    const setHistoryPopState = () => {\r\n      paths = getPathValues(swiper.params.url);\r\n      scrollToSlide(swiper.params.speed, paths.value, false);\r\n    };\r\n\r\n    const init = () => {\r\n      const window = getWindow();\r\n      if (!swiper.params.history) return;\r\n\r\n      if (!window.history || !window.history.pushState) {\r\n        swiper.params.history.enabled = false;\r\n        swiper.params.hashNavigation.enabled = true;\r\n        return;\r\n      }\r\n\r\n      initialized = true;\r\n      paths = getPathValues(swiper.params.url);\r\n      if (!paths.key && !paths.value) return;\r\n      scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\r\n\r\n      if (!swiper.params.history.replaceState) {\r\n        window.addEventListener('popstate', setHistoryPopState);\r\n      }\r\n    };\r\n\r\n    const destroy = () => {\r\n      const window = getWindow();\r\n\r\n      if (!swiper.params.history.replaceState) {\r\n        window.removeEventListener('popstate', setHistoryPopState);\r\n      }\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.history.enabled) {\r\n        init();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.history.enabled) {\r\n        destroy();\r\n      }\r\n    });\r\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n      if (initialized) {\r\n        setHistory(swiper.params.history.key, swiper.activeIndex);\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (initialized && swiper.params.cssMode) {\r\n        setHistory(swiper.params.history.key, swiper.activeIndex);\r\n      }\r\n    });\r\n  }\r\n\r\n  function HashNavigation(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      emit,\r\n      on\r\n    } = _ref;\r\n    let initialized = false;\r\n    const document = getDocument();\r\n    const window = getWindow();\r\n    extendParams({\r\n      hashNavigation: {\r\n        enabled: false,\r\n        replaceState: false,\r\n        watchState: false\r\n      }\r\n    });\r\n\r\n    const onHashChange = () => {\r\n      emit('hashChange');\r\n      const newHash = document.location.hash.replace('#', '');\r\n      const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\r\n\r\n      if (newHash !== activeSlideHash) {\r\n        const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\r\n        if (typeof newIndex === 'undefined') return;\r\n        swiper.slideTo(newIndex);\r\n      }\r\n    };\r\n\r\n    const setHash = () => {\r\n      if (!initialized || !swiper.params.hashNavigation.enabled) return;\r\n\r\n      if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\r\n        window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\r\n        emit('hashSet');\r\n      } else {\r\n        const slide = swiper.slides.eq(swiper.activeIndex);\r\n        const hash = slide.attr('data-hash') || slide.attr('data-history');\r\n        document.location.hash = hash || '';\r\n        emit('hashSet');\r\n      }\r\n    };\r\n\r\n    const init = () => {\r\n      if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\r\n      initialized = true;\r\n      const hash = document.location.hash.replace('#', '');\r\n\r\n      if (hash) {\r\n        const speed = 0;\r\n\r\n        for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\r\n          const slide = swiper.slides.eq(i);\r\n          const slideHash = slide.attr('data-hash') || slide.attr('data-history');\r\n\r\n          if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\r\n            const index = slide.index();\r\n            swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (swiper.params.hashNavigation.watchState) {\r\n        $(window).on('hashchange', onHashChange);\r\n      }\r\n    };\r\n\r\n    const destroy = () => {\r\n      if (swiper.params.hashNavigation.watchState) {\r\n        $(window).off('hashchange', onHashChange);\r\n      }\r\n    };\r\n\r\n    on('init', () => {\r\n      if (swiper.params.hashNavigation.enabled) {\r\n        init();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      if (swiper.params.hashNavigation.enabled) {\r\n        destroy();\r\n      }\r\n    });\r\n    on('transitionEnd _freeModeNoMomentumRelease', () => {\r\n      if (initialized) {\r\n        setHash();\r\n      }\r\n    });\r\n    on('slideChange', () => {\r\n      if (initialized && swiper.params.cssMode) {\r\n        setHash();\r\n      }\r\n    });\r\n  }\r\n\r\n  /* eslint no-underscore-dangle: \"off\" */\r\n  function Autoplay(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on,\r\n      emit\r\n    } = _ref;\r\n    let timeout;\r\n    swiper.autoplay = {\r\n      running: false,\r\n      paused: false\r\n    };\r\n    extendParams({\r\n      autoplay: {\r\n        enabled: false,\r\n        delay: 3000,\r\n        waitForTransition: true,\r\n        disableOnInteraction: true,\r\n        stopOnLastSlide: false,\r\n        reverseDirection: false,\r\n        pauseOnMouseEnter: false\r\n      }\r\n    });\r\n\r\n    function run() {\r\n      if (!swiper.size) {\r\n        swiper.autoplay.running = false;\r\n        swiper.autoplay.paused = false;\r\n        return;\r\n      }\r\n\r\n      const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n      let delay = swiper.params.autoplay.delay;\r\n\r\n      if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n        delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n      }\r\n\r\n      clearTimeout(timeout);\r\n      timeout = nextTick(() => {\r\n        let autoplayResult;\r\n\r\n        if (swiper.params.autoplay.reverseDirection) {\r\n          if (swiper.params.loop) {\r\n            swiper.loopFix();\r\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else if (!swiper.isBeginning) {\r\n            autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n            autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n            emit('autoplay');\r\n          } else {\r\n            stop();\r\n          }\r\n        } else if (swiper.params.loop) {\r\n          swiper.loopFix();\r\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else if (!swiper.isEnd) {\r\n          autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n          autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\r\n          emit('autoplay');\r\n        } else {\r\n          stop();\r\n        }\r\n\r\n        if (swiper.params.cssMode && swiper.autoplay.running) run(); else if (autoplayResult === false) {\r\n          run();\r\n        }\r\n      }, delay);\r\n    }\r\n\r\n    function start() {\r\n      if (typeof timeout !== 'undefined') return false;\r\n      if (swiper.autoplay.running) return false;\r\n      swiper.autoplay.running = true;\r\n      emit('autoplayStart');\r\n      run();\r\n      return true;\r\n    }\r\n\r\n    function stop() {\r\n      if (!swiper.autoplay.running) return false;\r\n      if (typeof timeout === 'undefined') return false;\r\n\r\n      if (timeout) {\r\n        clearTimeout(timeout);\r\n        timeout = undefined;\r\n      }\r\n\r\n      swiper.autoplay.running = false;\r\n      emit('autoplayStop');\r\n      return true;\r\n    }\r\n\r\n    function pause(speed) {\r\n      if (!swiper.autoplay.running) return;\r\n      if (swiper.autoplay.paused) return;\r\n      if (timeout) clearTimeout(timeout);\r\n      swiper.autoplay.paused = true;\r\n\r\n      if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n        swiper.autoplay.paused = false;\r\n        run();\r\n      } else {\r\n        ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n          swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\r\n        });\r\n      }\r\n    }\r\n\r\n    function onVisibilityChange() {\r\n      const document = getDocument();\r\n\r\n      if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\r\n        pause();\r\n      }\r\n\r\n      if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\r\n        run();\r\n        swiper.autoplay.paused = false;\r\n      }\r\n    }\r\n\r\n    function onTransitionEnd(e) {\r\n      if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\r\n      if (e.target !== swiper.$wrapperEl[0]) return;\r\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\r\n      });\r\n      swiper.autoplay.paused = false;\r\n\r\n      if (!swiper.autoplay.running) {\r\n        stop();\r\n      } else {\r\n        run();\r\n      }\r\n    }\r\n\r\n    function onMouseEnter() {\r\n      if (swiper.params.autoplay.disableOnInteraction) {\r\n        stop();\r\n      } else {\r\n        emit('autoplayPause');\r\n        pause();\r\n      }\r\n\r\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\r\n        swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\r\n      });\r\n    }\r\n\r\n    function onMouseLeave() {\r\n      if (swiper.params.autoplay.disableOnInteraction) {\r\n        return;\r\n      }\r\n\r\n      swiper.autoplay.paused = false;\r\n      emit('autoplayResume');\r\n      run();\r\n    }\r\n\r\n    function attachMouseEvents() {\r\n      if (swiper.params.autoplay.pauseOnMouseEnter) {\r\n        swiper.$el.on('mouseenter', onMouseEnter);\r\n        swiper.$el.on('mouseleave', onMouseLeave);\r\n      }\r\n    }\r\n\r\n    function detachMouseEvents() {\r\n      swiper.$el.off('mouseenter', onMouseEnter);\r\n      swiper.$el.off('mouseleave', onMouseLeave);\r\n    }\r\n\r\n    on('init', () => {\r\n      if (swiper.params.autoplay.enabled) {\r\n        start();\r\n        const document = getDocument();\r\n        document.addEventListener('visibilitychange', onVisibilityChange);\r\n        attachMouseEvents();\r\n      }\r\n    });\r\n    on('beforeTransitionStart', (_s, speed, internal) => {\r\n      if (swiper.autoplay.running) {\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.pause(speed);\r\n        } else {\r\n          stop();\r\n        }\r\n      }\r\n    });\r\n    on('sliderFirstMove', () => {\r\n      if (swiper.autoplay.running) {\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          stop();\r\n        } else {\r\n          pause();\r\n        }\r\n      }\r\n    });\r\n    on('touchEnd', () => {\r\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\r\n        run();\r\n      }\r\n    });\r\n    on('destroy', () => {\r\n      detachMouseEvents();\r\n\r\n      if (swiper.autoplay.running) {\r\n        stop();\r\n      }\r\n\r\n      const document = getDocument();\r\n      document.removeEventListener('visibilitychange', onVisibilityChange);\r\n    });\r\n    Object.assign(swiper.autoplay, {\r\n      pause,\r\n      run,\r\n      start,\r\n      stop\r\n    });\r\n  }\r\n\r\n  function Thumb(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      thumbs: {\r\n        swiper: null,\r\n        multipleActiveThumbs: true,\r\n        autoScrollOffset: 0,\r\n        slideThumbActiveClass: 'swiper-slide-thumb-active',\r\n        thumbsContainerClass: 'swiper-thumbs'\r\n      }\r\n    });\r\n    let initialized = false;\r\n    let swiperCreated = false;\r\n    swiper.thumbs = {\r\n      swiper: null\r\n    };\r\n\r\n    function onThumbClick() {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n      const clickedIndex = thumbsSwiper.clickedIndex;\r\n      const clickedSlide = thumbsSwiper.clickedSlide;\r\n      if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\r\n      if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\r\n      let slideToIndex;\r\n\r\n      if (thumbsSwiper.params.loop) {\r\n        slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n      } else {\r\n        slideToIndex = clickedIndex;\r\n      }\r\n\r\n      if (swiper.params.loop) {\r\n        let currentIndex = swiper.activeIndex;\r\n\r\n        if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\r\n          swiper.loopFix(); // eslint-disable-next-line\r\n\r\n          swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n          currentIndex = swiper.activeIndex;\r\n        }\r\n\r\n        const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\r\n        const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\r\n        if (typeof prevIndex === 'undefined') slideToIndex = nextIndex; else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex; else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex; else slideToIndex = prevIndex;\r\n      }\r\n\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n\r\n    function init() {\r\n      const {\r\n        thumbs: thumbsParams\r\n      } = swiper.params;\r\n      if (initialized) return false;\r\n      initialized = true;\r\n      const SwiperClass = swiper.constructor;\r\n\r\n      if (thumbsParams.swiper instanceof SwiperClass) {\r\n        swiper.thumbs.swiper = thumbsParams.swiper;\r\n        Object.assign(swiper.thumbs.swiper.originalParams, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n        Object.assign(swiper.thumbs.swiper.params, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n      } else if (isObject(thumbsParams.swiper)) {\r\n        const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\r\n        Object.assign(thumbsSwiperParams, {\r\n          watchSlidesProgress: true,\r\n          slideToClickedSlide: false\r\n        });\r\n        swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\r\n        swiperCreated = true;\r\n      }\r\n\r\n      swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\r\n      swiper.thumbs.swiper.on('tap', onThumbClick);\r\n      return true;\r\n    }\r\n\r\n    function update(initial) {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n      const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\r\n\r\n      let thumbsToActivate = 1;\r\n      const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\r\n\r\n      if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\r\n        thumbsToActivate = swiper.params.slidesPerView;\r\n      }\r\n\r\n      if (!swiper.params.thumbs.multipleActiveThumbs) {\r\n        thumbsToActivate = 1;\r\n      }\r\n\r\n      thumbsToActivate = Math.floor(thumbsToActivate);\r\n      thumbsSwiper.slides.removeClass(thumbActiveClass);\r\n\r\n      if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\r\n        for (let i = 0; i < thumbsToActivate; i += 1) {\r\n          thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\r\n        }\r\n      } else {\r\n        for (let i = 0; i < thumbsToActivate; i += 1) {\r\n          thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\r\n        }\r\n      }\r\n\r\n      const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\r\n      const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\r\n\r\n      if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\r\n        let currentThumbsIndex = thumbsSwiper.activeIndex;\r\n        let newThumbsIndex;\r\n        let direction;\r\n\r\n        if (thumbsSwiper.params.loop) {\r\n          if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\r\n            thumbsSwiper.loopFix(); // eslint-disable-next-line\r\n\r\n            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\r\n            currentThumbsIndex = thumbsSwiper.activeIndex;\r\n          } // Find actual thumbs index to slide to\r\n\r\n\r\n          const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\r\n          const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\r\n\r\n          if (typeof prevThumbsIndex === 'undefined') {\r\n            newThumbsIndex = nextThumbsIndex;\r\n          } else if (typeof nextThumbsIndex === 'undefined') {\r\n            newThumbsIndex = prevThumbsIndex;\r\n          } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\r\n            newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\r\n          } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\r\n            newThumbsIndex = nextThumbsIndex;\r\n          } else {\r\n            newThumbsIndex = prevThumbsIndex;\r\n          }\r\n\r\n          direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\r\n        } else {\r\n          newThumbsIndex = swiper.realIndex;\r\n          direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\r\n        }\r\n\r\n        if (useOffset) {\r\n          newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\r\n        }\r\n\r\n        if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\r\n          if (thumbsSwiper.params.centeredSlides) {\r\n            if (newThumbsIndex > currentThumbsIndex) {\r\n              newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\r\n            } else {\r\n              newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\r\n            }\r\n          } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1);\r\n\r\n          thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\r\n        }\r\n      }\r\n    }\r\n\r\n    on('beforeInit', () => {\r\n      const {\r\n        thumbs\r\n      } = swiper.params;\r\n      if (!thumbs || !thumbs.swiper) return;\r\n      init();\r\n      update(true);\r\n    });\r\n    on('slideChange update resize observerUpdate', () => {\r\n      update();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n      thumbsSwiper.setTransition(duration);\r\n    });\r\n    on('beforeDestroy', () => {\r\n      const thumbsSwiper = swiper.thumbs.swiper;\r\n      if (!thumbsSwiper || thumbsSwiper.destroyed) return;\r\n\r\n      if (swiperCreated) {\r\n        thumbsSwiper.destroy();\r\n      }\r\n    });\r\n    Object.assign(swiper.thumbs, {\r\n      init,\r\n      update\r\n    });\r\n  }\r\n\r\n  function freeMode(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      emit,\r\n      once\r\n    } = _ref;\r\n    extendParams({\r\n      freeMode: {\r\n        enabled: false,\r\n        momentum: true,\r\n        momentumRatio: 1,\r\n        momentumBounce: true,\r\n        momentumBounceRatio: 1,\r\n        momentumVelocityRatio: 1,\r\n        sticky: false,\r\n        minimumVelocity: 0.02\r\n      }\r\n    });\r\n\r\n    function onTouchStart() {\r\n      const translate = swiper.getTranslate();\r\n      swiper.setTranslate(translate);\r\n      swiper.setTransition(0);\r\n      swiper.touchEventsData.velocities.length = 0;\r\n      swiper.freeMode.onTouchEnd({\r\n        currentPos: swiper.rtl ? swiper.translate : -swiper.translate\r\n      });\r\n    }\r\n\r\n    function onTouchMove() {\r\n      const {\r\n        touchEventsData: data,\r\n        touches\r\n      } = swiper; // Velocity\r\n\r\n      if (data.velocities.length === 0) {\r\n        data.velocities.push({\r\n          position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n          time: data.touchStartTime\r\n        });\r\n      }\r\n\r\n      data.velocities.push({\r\n        position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n        time: now()\r\n      });\r\n    }\r\n\r\n    function onTouchEnd(_ref2) {\r\n      let {\r\n        currentPos\r\n      } = _ref2;\r\n      const {\r\n        params,\r\n        $wrapperEl,\r\n        rtlTranslate: rtl,\r\n        snapGrid,\r\n        touchEventsData: data\r\n      } = swiper; // Time diff\r\n\r\n      const touchEndTime = now();\r\n      const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n      if (currentPos < -swiper.minTranslate()) {\r\n        swiper.slideTo(swiper.activeIndex);\r\n        return;\r\n      }\r\n\r\n      if (currentPos > -swiper.maxTranslate()) {\r\n        if (swiper.slides.length < snapGrid.length) {\r\n          swiper.slideTo(snapGrid.length - 1);\r\n        } else {\r\n          swiper.slideTo(swiper.slides.length - 1);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (params.freeMode.momentum) {\r\n        if (data.velocities.length > 1) {\r\n          const lastMoveEvent = data.velocities.pop();\r\n          const velocityEvent = data.velocities.pop();\r\n          const distance = lastMoveEvent.position - velocityEvent.position;\r\n          const time = lastMoveEvent.time - velocityEvent.time;\r\n          swiper.velocity = distance / time;\r\n          swiper.velocity /= 2;\r\n\r\n          if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\r\n            swiper.velocity = 0;\r\n          } // this implies that the user stopped moving a finger then released.\r\n          // There would be no events with distance zero, so the last event is stale.\r\n\r\n\r\n          if (time > 150 || now() - lastMoveEvent.time > 300) {\r\n            swiper.velocity = 0;\r\n          }\r\n        } else {\r\n          swiper.velocity = 0;\r\n        }\r\n\r\n        swiper.velocity *= params.freeMode.momentumVelocityRatio;\r\n        data.velocities.length = 0;\r\n        let momentumDuration = 1000 * params.freeMode.momentumRatio;\r\n        const momentumDistance = swiper.velocity * momentumDuration;\r\n        let newPosition = swiper.translate + momentumDistance;\r\n        if (rtl) newPosition = -newPosition;\r\n        let doBounce = false;\r\n        let afterBouncePosition;\r\n        const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\r\n        let needsLoopFix;\r\n\r\n        if (newPosition < swiper.maxTranslate()) {\r\n          if (params.freeMode.momentumBounce) {\r\n            if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n              newPosition = swiper.maxTranslate() - bounceAmount;\r\n            }\r\n\r\n            afterBouncePosition = swiper.maxTranslate();\r\n            doBounce = true;\r\n            data.allowMomentumBounce = true;\r\n          } else {\r\n            newPosition = swiper.maxTranslate();\r\n          }\r\n\r\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n        } else if (newPosition > swiper.minTranslate()) {\r\n          if (params.freeMode.momentumBounce) {\r\n            if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n              newPosition = swiper.minTranslate() + bounceAmount;\r\n            }\r\n\r\n            afterBouncePosition = swiper.minTranslate();\r\n            doBounce = true;\r\n            data.allowMomentumBounce = true;\r\n          } else {\r\n            newPosition = swiper.minTranslate();\r\n          }\r\n\r\n          if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n        } else if (params.freeMode.sticky) {\r\n          let nextSlide;\r\n\r\n          for (let j = 0; j < snapGrid.length; j += 1) {\r\n            if (snapGrid[j] > -newPosition) {\r\n              nextSlide = j;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n            newPosition = snapGrid[nextSlide];\r\n          } else {\r\n            newPosition = snapGrid[nextSlide - 1];\r\n          }\r\n\r\n          newPosition = -newPosition;\r\n        }\r\n\r\n        if (needsLoopFix) {\r\n          once('transitionEnd', () => {\r\n            swiper.loopFix();\r\n          });\r\n        } // Fix duration\r\n\r\n\r\n        if (swiper.velocity !== 0) {\r\n          if (rtl) {\r\n            momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n          } else {\r\n            momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n          }\r\n\r\n          if (params.freeMode.sticky) {\r\n            // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\r\n            // event, then durations can be 20+ seconds to slide one (or zero!) slides.\r\n            // It's easy to see this when simulating touch with mouse events. To fix this,\r\n            // limit single-slide swipes to the default slide duration. This also has the\r\n            // nice side effect of matching slide speed if the user stopped moving before\r\n            // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\r\n            // For faster swipes, also apply limits (albeit higher ones).\r\n            const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\r\n            const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\r\n\r\n            if (moveDistance < currentSlideSize) {\r\n              momentumDuration = params.speed;\r\n            } else if (moveDistance < 2 * currentSlideSize) {\r\n              momentumDuration = params.speed * 1.5;\r\n            } else {\r\n              momentumDuration = params.speed * 2.5;\r\n            }\r\n          }\r\n        } else if (params.freeMode.sticky) {\r\n          swiper.slideToClosest();\r\n          return;\r\n        }\r\n\r\n        if (params.freeMode.momentumBounce && doBounce) {\r\n          swiper.updateProgress(afterBouncePosition);\r\n          swiper.setTransition(momentumDuration);\r\n          swiper.setTranslate(newPosition);\r\n          swiper.transitionStart(true, swiper.swipeDirection);\r\n          swiper.animating = true;\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n            emit('momentumBounce');\r\n            swiper.setTransition(params.speed);\r\n            setTimeout(() => {\r\n              swiper.setTranslate(afterBouncePosition);\r\n              $wrapperEl.transitionEnd(() => {\r\n                if (!swiper || swiper.destroyed) return;\r\n                swiper.transitionEnd();\r\n              });\r\n            }, 0);\r\n          });\r\n        } else if (swiper.velocity) {\r\n          emit('_freeModeNoMomentumRelease');\r\n          swiper.updateProgress(newPosition);\r\n          swiper.setTransition(momentumDuration);\r\n          swiper.setTranslate(newPosition);\r\n          swiper.transitionStart(true, swiper.swipeDirection);\r\n\r\n          if (!swiper.animating) {\r\n            swiper.animating = true;\r\n            $wrapperEl.transitionEnd(() => {\r\n              if (!swiper || swiper.destroyed) return;\r\n              swiper.transitionEnd();\r\n            });\r\n          }\r\n        } else {\r\n          swiper.updateProgress(newPosition);\r\n        }\r\n\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      } else if (params.freeMode.sticky) {\r\n        swiper.slideToClosest();\r\n        return;\r\n      } else if (params.freeMode) {\r\n        emit('_freeModeNoMomentumRelease');\r\n      }\r\n\r\n      if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\r\n        swiper.updateProgress();\r\n        swiper.updateActiveIndex();\r\n        swiper.updateSlidesClasses();\r\n      }\r\n    }\r\n\r\n    Object.assign(swiper, {\r\n      freeMode: {\r\n        onTouchStart,\r\n        onTouchMove,\r\n        onTouchEnd\r\n      }\r\n    });\r\n  }\r\n\r\n  function Grid(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams\r\n    } = _ref;\r\n    extendParams({\r\n      grid: {\r\n        rows: 1,\r\n        fill: 'column'\r\n      }\r\n    });\r\n    let slidesNumberEvenToRows;\r\n    let slidesPerRow;\r\n    let numFullColumns;\r\n\r\n    const initSlides = slidesLength => {\r\n      const {\r\n        slidesPerView\r\n      } = swiper.params;\r\n      const {\r\n        rows,\r\n        fill\r\n      } = swiper.params.grid;\r\n      slidesPerRow = slidesNumberEvenToRows / rows;\r\n      numFullColumns = Math.floor(slidesLength / rows);\r\n\r\n      if (Math.floor(slidesLength / rows) === slidesLength / rows) {\r\n        slidesNumberEvenToRows = slidesLength;\r\n      } else {\r\n        slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\r\n      }\r\n\r\n      if (slidesPerView !== 'auto' && fill === 'row') {\r\n        slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\r\n      }\r\n    };\r\n\r\n    const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\r\n      const {\r\n        slidesPerGroup,\r\n        spaceBetween\r\n      } = swiper.params;\r\n      const {\r\n        rows,\r\n        fill\r\n      } = swiper.params.grid; // Set slides order\r\n\r\n      let newSlideOrderIndex;\r\n      let column;\r\n      let row;\r\n\r\n      if (fill === 'row' && slidesPerGroup > 1) {\r\n        const groupIndex = Math.floor(i / (slidesPerGroup * rows));\r\n        const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\r\n        const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\r\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\r\n        column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\r\n        newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\r\n        slide.css({\r\n          '-webkit-order': newSlideOrderIndex,\r\n          order: newSlideOrderIndex\r\n        });\r\n      } else if (fill === 'column') {\r\n        column = Math.floor(i / rows);\r\n        row = i - column * rows;\r\n\r\n        if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\r\n          row += 1;\r\n\r\n          if (row >= rows) {\r\n            row = 0;\r\n            column += 1;\r\n          }\r\n        }\r\n      } else {\r\n        row = Math.floor(i / slidesPerRow);\r\n        column = i - row * slidesPerRow;\r\n      }\r\n\r\n      slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\r\n    };\r\n\r\n    const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\r\n      const {\r\n        spaceBetween,\r\n        centeredSlides,\r\n        roundLengths\r\n      } = swiper.params;\r\n      const {\r\n        rows\r\n      } = swiper.params.grid;\r\n      swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\r\n      swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\r\n      swiper.$wrapperEl.css({\r\n        [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\r\n      });\r\n\r\n      if (centeredSlides) {\r\n        snapGrid.splice(0, snapGrid.length);\r\n        const newSlidesGrid = [];\r\n\r\n        for (let i = 0; i < snapGrid.length; i += 1) {\r\n          let slidesGridItem = snapGrid[i];\r\n          if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n          if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n        }\r\n\r\n        snapGrid.push(...newSlidesGrid);\r\n      }\r\n    };\r\n\r\n    swiper.grid = {\r\n      initSlides,\r\n      updateSlide,\r\n      updateWrapperSize\r\n    };\r\n  }\r\n\r\n  function appendSlide(slides) {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params\r\n    } = swiper;\r\n\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.append(slides[i]);\r\n      }\r\n    } else {\r\n      $wrapperEl.append(slides);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n  }\r\n\r\n  function prependSlide(slides) {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex\r\n    } = swiper;\r\n\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    let newActiveIndex = activeIndex + 1;\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.prepend(slides[i]);\r\n      }\r\n\r\n      newActiveIndex = activeIndex + slides.length;\r\n    } else {\r\n      $wrapperEl.prepend(slides);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n\r\n  function addSlide(index, slides) {\r\n    const swiper = this;\r\n    const {\r\n      $wrapperEl,\r\n      params,\r\n      activeIndex\r\n    } = swiper;\r\n    let activeIndexBuffer = activeIndex;\r\n\r\n    if (params.loop) {\r\n      activeIndexBuffer -= swiper.loopedSlides;\r\n      swiper.loopDestroy();\r\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n\r\n    const baseLength = swiper.slides.length;\r\n\r\n    if (index <= 0) {\r\n      swiper.prependSlide(slides);\r\n      return;\r\n    }\r\n\r\n    if (index >= baseLength) {\r\n      swiper.appendSlide(slides);\r\n      return;\r\n    }\r\n\r\n    let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n    const slidesBuffer = [];\r\n\r\n    for (let i = baseLength - 1; i >= index; i -= 1) {\r\n      const currentSlide = swiper.slides.eq(i);\r\n      currentSlide.remove();\r\n      slidesBuffer.unshift(currentSlide);\r\n    }\r\n\r\n    if (typeof slides === 'object' && 'length' in slides) {\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        if (slides[i]) $wrapperEl.append(slides[i]);\r\n      }\r\n\r\n      newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n    } else {\r\n      $wrapperEl.append(slides);\r\n    }\r\n\r\n    for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n      $wrapperEl.append(slidesBuffer[i]);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    } else {\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n  }\r\n\r\n  function removeSlide(slidesIndexes) {\r\n    const swiper = this;\r\n    const {\r\n      params,\r\n      $wrapperEl,\r\n      activeIndex\r\n    } = swiper;\r\n    let activeIndexBuffer = activeIndex;\r\n\r\n    if (params.loop) {\r\n      activeIndexBuffer -= swiper.loopedSlides;\r\n      swiper.loopDestroy();\r\n      swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n\r\n    let newActiveIndex = activeIndexBuffer;\r\n    let indexToRemove;\r\n\r\n    if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n      for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n        indexToRemove = slidesIndexes[i];\r\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n      }\r\n\r\n      newActiveIndex = Math.max(newActiveIndex, 0);\r\n    } else {\r\n      indexToRemove = slidesIndexes;\r\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n      newActiveIndex = Math.max(newActiveIndex, 0);\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    if (!params.observer) {\r\n      swiper.update();\r\n    }\r\n\r\n    if (params.loop) {\r\n      swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n    } else {\r\n      swiper.slideTo(newActiveIndex, 0, false);\r\n    }\r\n  }\r\n\r\n  function removeAllSlides() {\r\n    const swiper = this;\r\n    const slidesIndexes = [];\r\n\r\n    for (let i = 0; i < swiper.slides.length; i += 1) {\r\n      slidesIndexes.push(i);\r\n    }\r\n\r\n    swiper.removeSlide(slidesIndexes);\r\n  }\r\n\r\n  function Manipulation(_ref) {\r\n    let {\r\n      swiper\r\n    } = _ref;\r\n    Object.assign(swiper, {\r\n      appendSlide: appendSlide.bind(swiper),\r\n      prependSlide: prependSlide.bind(swiper),\r\n      addSlide: addSlide.bind(swiper),\r\n      removeSlide: removeSlide.bind(swiper),\r\n      removeAllSlides: removeAllSlides.bind(swiper)\r\n    });\r\n  }\r\n\r\n  function effectInit(params) {\r\n    const {\r\n      effect,\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      overwriteParams,\r\n      perspective,\r\n      recreateShadows,\r\n      getEffectParams\r\n    } = params;\r\n    on('beforeInit', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n      swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\r\n\r\n      if (perspective && perspective()) {\r\n        swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\r\n      }\r\n\r\n      const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\r\n      Object.assign(swiper.params, overwriteParamsResult);\r\n      Object.assign(swiper.originalParams, overwriteParamsResult);\r\n    });\r\n    on('setTranslate', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n      setTranslate();\r\n    });\r\n    on('setTransition', (_s, duration) => {\r\n      if (swiper.params.effect !== effect) return;\r\n      setTransition(duration);\r\n    });\r\n    on('transitionEnd', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n\r\n      if (recreateShadows) {\r\n        if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\r\n\r\n        swiper.slides.each(slideEl => {\r\n          const $slideEl = swiper.$(slideEl);\r\n          $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\r\n        }); // create new one\r\n\r\n        recreateShadows();\r\n      }\r\n    });\r\n    let requireUpdateOnVirtual;\r\n    on('virtualUpdate', () => {\r\n      if (swiper.params.effect !== effect) return;\r\n\r\n      if (!swiper.slides.length) {\r\n        requireUpdateOnVirtual = true;\r\n      }\r\n\r\n      requestAnimationFrame(() => {\r\n        if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\r\n          setTranslate();\r\n          requireUpdateOnVirtual = false;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  function effectTarget(effectParams, $slideEl) {\r\n    if (effectParams.transformEl) {\r\n      return $slideEl.find(effectParams.transformEl).css({\r\n        'backface-visibility': 'hidden',\r\n        '-webkit-backface-visibility': 'hidden'\r\n      });\r\n    }\r\n\r\n    return $slideEl;\r\n  }\r\n\r\n  function effectVirtualTransitionEnd(_ref) {\r\n    let {\r\n      swiper,\r\n      duration,\r\n      transformEl,\r\n      allSlides\r\n    } = _ref;\r\n    const {\r\n      slides,\r\n      activeIndex,\r\n      $wrapperEl\r\n    } = swiper;\r\n\r\n    if (swiper.params.virtualTranslate && duration !== 0) {\r\n      let eventTriggered = false;\r\n      let $transitionEndTarget;\r\n\r\n      if (allSlides) {\r\n        $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\r\n      } else {\r\n        $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\r\n      }\r\n\r\n      $transitionEndTarget.transitionEnd(() => {\r\n        if (eventTriggered) return;\r\n        if (!swiper || swiper.destroyed) return;\r\n        eventTriggered = true;\r\n        swiper.animating = false;\r\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\r\n\r\n        for (let i = 0; i < triggerEvents.length; i += 1) {\r\n          $wrapperEl.trigger(triggerEvents[i]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function EffectFade(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      fadeEffect: {\r\n        crossFade: false,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides\r\n      } = swiper;\r\n      const params = swiper.params.fadeEffect;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = swiper.slides.eq(i);\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        let tx = -offset;\r\n        if (!swiper.params.virtualTranslate) tx -= swiper.translate;\r\n        let ty = 0;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          ty = tx;\r\n          tx = 0;\r\n        }\r\n\r\n        const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.css({\r\n          opacity: slideOpacity\r\n        }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.fadeEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl,\r\n        allSlides: true\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'fade',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        spaceBetween: 0,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCube(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      cubeEffect: {\r\n        slideShadows: true,\r\n        shadow: true,\r\n        shadowOffset: 20,\r\n        shadowScale: 0.94\r\n      }\r\n    });\r\n\r\n    const createSlideShadows = ($slideEl, progress, isHorizontal) => {\r\n      let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n      let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n      if (shadowBefore.length === 0) {\r\n        shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\r\n        $slideEl.append(shadowBefore);\r\n      }\r\n\r\n      if (shadowAfter.length === 0) {\r\n        shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\r\n        $slideEl.append(shadowAfter);\r\n      }\r\n\r\n      if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n      if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n    };\r\n\r\n    const recreateShadows = () => {\r\n      // create new ones\r\n      const isHorizontal = swiper.isHorizontal();\r\n      swiper.slides.each(slideEl => {\r\n        const progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n        createSlideShadows($(slideEl), progress, isHorizontal);\r\n      });\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        $el,\r\n        $wrapperEl,\r\n        slides,\r\n        width: swiperWidth,\r\n        height: swiperHeight,\r\n        rtlTranslate: rtl,\r\n        size: swiperSize,\r\n        browser\r\n      } = swiper;\r\n      const params = swiper.params.cubeEffect;\r\n      const isHorizontal = swiper.isHorizontal();\r\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\r\n      let wrapperRotate = 0;\r\n      let $cubeShadowEl;\r\n\r\n      if (params.shadow) {\r\n        if (isHorizontal) {\r\n          $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\r\n\r\n          if ($cubeShadowEl.length === 0) {\r\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n            $wrapperEl.append($cubeShadowEl);\r\n          }\r\n\r\n          $cubeShadowEl.css({\r\n            height: `${swiperWidth}px`\r\n          });\r\n        } else {\r\n          $cubeShadowEl = $el.find('.swiper-cube-shadow');\r\n\r\n          if ($cubeShadowEl.length === 0) {\r\n            $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\r\n            $el.append($cubeShadowEl);\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        let slideIndex = i;\r\n\r\n        if (isVirtual) {\r\n          slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\r\n        }\r\n\r\n        let slideAngle = slideIndex * 90;\r\n        let round = Math.floor(slideAngle / 360);\r\n\r\n        if (rtl) {\r\n          slideAngle = -slideAngle;\r\n          round = Math.floor(-slideAngle / 360);\r\n        }\r\n\r\n        const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n        let tx = 0;\r\n        let ty = 0;\r\n        let tz = 0;\r\n\r\n        if (slideIndex % 4 === 0) {\r\n          tx = -round * 4 * swiperSize;\r\n          tz = 0;\r\n        } else if ((slideIndex - 1) % 4 === 0) {\r\n          tx = 0;\r\n          tz = -round * 4 * swiperSize;\r\n        } else if ((slideIndex - 2) % 4 === 0) {\r\n          tx = swiperSize + round * 4 * swiperSize;\r\n          tz = swiperSize;\r\n        } else if ((slideIndex - 3) % 4 === 0) {\r\n          tx = -swiperSize;\r\n          tz = 3 * swiperSize + swiperSize * 4 * round;\r\n        }\r\n\r\n        if (rtl) {\r\n          tx = -tx;\r\n        }\r\n\r\n        if (!isHorizontal) {\r\n          ty = tx;\r\n          tx = 0;\r\n        }\r\n\r\n        const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\r\n\r\n        if (progress <= 1 && progress > -1) {\r\n          wrapperRotate = slideIndex * 90 + progress * 90;\r\n          if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\r\n        }\r\n\r\n        $slideEl.transform(transform);\r\n\r\n        if (params.slideShadows) {\r\n          createSlideShadows($slideEl, progress, isHorizontal);\r\n        }\r\n      }\r\n\r\n      $wrapperEl.css({\r\n        '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\r\n        'transform-origin': `50% 50% -${swiperSize / 2}px`\r\n      });\r\n\r\n      if (params.shadow) {\r\n        if (isHorizontal) {\r\n          $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\r\n        } else {\r\n          const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\r\n          const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\r\n          const scale1 = params.shadowScale;\r\n          const scale2 = params.shadowScale / multiplier;\r\n          const offset = params.shadowOffset;\r\n          $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\r\n        }\r\n      }\r\n\r\n      const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\r\n      $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\r\n      $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        $el,\r\n        slides\r\n      } = swiper;\r\n      slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n\r\n      if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\r\n        $el.find('.swiper-cube-shadow').transition(duration);\r\n      }\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'cube',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      recreateShadows,\r\n      getEffectParams: () => swiper.params.cubeEffect,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        resistanceRatio: 0,\r\n        spaceBetween: 0,\r\n        centeredSlides: false,\r\n        virtualTranslate: true\r\n      })\r\n    });\r\n  }\r\n\r\n  function createShadow(params, $slideEl, side) {\r\n    const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\r\n    const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\r\n    let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\r\n\r\n    if (!$shadowEl.length) {\r\n      $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\r\n      $shadowContainer.append($shadowEl);\r\n    }\r\n\r\n    return $shadowEl;\r\n  }\r\n\r\n  function EffectFlip(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      flipEffect: {\r\n        slideShadows: true,\r\n        limitRotation: true,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const createSlideShadows = ($slideEl, progress, params) => {\r\n      let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n      let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n      if (shadowBefore.length === 0) {\r\n        shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\r\n      }\r\n\r\n      if (shadowAfter.length === 0) {\r\n        shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\r\n      }\r\n\r\n      if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\r\n      if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\r\n    };\r\n\r\n    const recreateShadows = () => {\r\n      // Set shadows\r\n      const params = swiper.params.flipEffect;\r\n      swiper.slides.each(slideEl => {\r\n        const $slideEl = $(slideEl);\r\n        let progress = $slideEl[0].progress;\r\n\r\n        if (swiper.params.flipEffect.limitRotation) {\r\n          progress = Math.max(Math.min(slideEl.progress, 1), -1);\r\n        }\r\n\r\n        createSlideShadows($slideEl, progress, params);\r\n      });\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        rtlTranslate: rtl\r\n      } = swiper;\r\n      const params = swiper.params.flipEffect;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        let progress = $slideEl[0].progress;\r\n\r\n        if (swiper.params.flipEffect.limitRotation) {\r\n          progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\r\n        }\r\n\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        const rotate = -180 * progress;\r\n        let rotateY = rotate;\r\n        let rotateX = 0;\r\n        let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n        let ty = 0;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          ty = tx;\r\n          tx = 0;\r\n          rotateX = -rotateY;\r\n          rotateY = 0;\r\n        } else if (rtl) {\r\n          rotateY = -rotateY;\r\n        }\r\n\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\r\n\r\n        if (params.slideShadows) {\r\n          createSlideShadows($slideEl, progress, params);\r\n        }\r\n\r\n        const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.flipEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'flip',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      recreateShadows,\r\n      getEffectParams: () => swiper.params.flipEffect,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        slidesPerView: 1,\r\n        slidesPerGroup: 1,\r\n        watchSlidesProgress: true,\r\n        spaceBetween: 0,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCoverflow(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      coverflowEffect: {\r\n        rotate: 50,\r\n        stretch: 0,\r\n        depth: 100,\r\n        scale: 1,\r\n        modifier: 1,\r\n        slideShadows: true,\r\n        transformEl: null\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        width: swiperWidth,\r\n        height: swiperHeight,\r\n        slides,\r\n        slidesSizesGrid\r\n      } = swiper;\r\n      const params = swiper.params.coverflowEffect;\r\n      const isHorizontal = swiper.isHorizontal();\r\n      const transform = swiper.translate;\r\n      const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\r\n      const rotate = isHorizontal ? params.rotate : -params.rotate;\r\n      const translate = params.depth; // Each slide offset from center\r\n\r\n      for (let i = 0, length = slides.length; i < length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideSize = slidesSizesGrid[i];\r\n        const slideOffset = $slideEl[0].swiperSlideOffset;\r\n        const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\r\n        const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\r\n        let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\r\n        let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\r\n\r\n        let translateZ = -translate * Math.abs(offsetMultiplier);\r\n        let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\r\n\r\n        if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\r\n          stretch = parseFloat(params.stretch) / 100 * slideSize;\r\n        }\r\n\r\n        let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\r\n        let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\r\n        let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\r\n\r\n        if (Math.abs(translateX) < 0.001) translateX = 0;\r\n        if (Math.abs(translateY) < 0.001) translateY = 0;\r\n        if (Math.abs(translateZ) < 0.001) translateZ = 0;\r\n        if (Math.abs(rotateY) < 0.001) rotateY = 0;\r\n        if (Math.abs(rotateX) < 0.001) rotateX = 0;\r\n        if (Math.abs(scale) < 0.001) scale = 0;\r\n        const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(slideTransform);\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\r\n          let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\r\n\r\n          if ($shadowBeforeEl.length === 0) {\r\n            $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\r\n          }\r\n\r\n          if ($shadowAfterEl.length === 0) {\r\n            $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\r\n          }\r\n\r\n          if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\r\n          if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\r\n        }\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.coverflowEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'coverflow',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCreative(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      creativeEffect: {\r\n        transformEl: null,\r\n        limitProgress: 1,\r\n        shadowPerProgress: false,\r\n        progressMultiplier: 1,\r\n        perspective: true,\r\n        prev: {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          opacity: 1,\r\n          scale: 1\r\n        },\r\n        next: {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          opacity: 1,\r\n          scale: 1\r\n        }\r\n      }\r\n    });\r\n\r\n    const getTranslateValue = value => {\r\n      if (typeof value === 'string') return value;\r\n      return `${value}px`;\r\n    };\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        $wrapperEl,\r\n        slidesSizesGrid\r\n      } = swiper;\r\n      const params = swiper.params.creativeEffect;\r\n      const {\r\n        progressMultiplier: multiplier\r\n      } = params;\r\n      const isCenteredSlides = swiper.params.centeredSlides;\r\n\r\n      if (isCenteredSlides) {\r\n        const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\r\n        $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\r\n      }\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideProgress = $slideEl[0].progress;\r\n        const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\r\n        let originalProgress = progress;\r\n\r\n        if (!isCenteredSlides) {\r\n          originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\r\n        }\r\n\r\n        const offset = $slideEl[0].swiperSlideOffset;\r\n        const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\r\n        const r = [0, 0, 0];\r\n        let custom = false;\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          t[1] = t[0];\r\n          t[0] = 0;\r\n        }\r\n\r\n        let data = {\r\n          translate: [0, 0, 0],\r\n          rotate: [0, 0, 0],\r\n          scale: 1,\r\n          opacity: 1\r\n        };\r\n\r\n        if (progress < 0) {\r\n          data = params.next;\r\n          custom = true;\r\n        } else if (progress > 0) {\r\n          data = params.prev;\r\n          custom = true;\r\n        } // set translate\r\n\r\n\r\n        t.forEach((value, index) => {\r\n          t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\r\n        }); // set rotates\r\n\r\n        r.forEach((value, index) => {\r\n          r[index] = data.rotate[index] * Math.abs(progress * multiplier);\r\n        });\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n        const translateString = t.join(', ');\r\n        const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\r\n        const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\r\n        const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\r\n        const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\r\n\r\n        if (custom && data.shadow || !custom) {\r\n          let $shadowEl = $slideEl.children('.swiper-slide-shadow');\r\n\r\n          if ($shadowEl.length === 0 && data.shadow) {\r\n            $shadowEl = createShadow(params, $slideEl);\r\n          }\r\n\r\n          if ($shadowEl.length) {\r\n            const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\r\n            $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\r\n          }\r\n        }\r\n\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform).css({\r\n          opacity: opacityString\r\n        });\r\n\r\n        if (data.origin) {\r\n          $targetEl.css('transform-origin', data.origin);\r\n        }\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.creativeEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl,\r\n        allSlides: true\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'creative',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => swiper.params.creativeEffect.perspective,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  function EffectCards(_ref) {\r\n    let {\r\n      swiper,\r\n      extendParams,\r\n      on\r\n    } = _ref;\r\n    extendParams({\r\n      cardsEffect: {\r\n        slideShadows: true,\r\n        transformEl: null,\r\n        rotate: true,\r\n        perSlideRotate: 2,\r\n        perSlideOffset: 8\r\n      }\r\n    });\r\n\r\n    const setTranslate = () => {\r\n      const {\r\n        slides,\r\n        activeIndex\r\n      } = swiper;\r\n      const params = swiper.params.cardsEffect;\r\n      const {\r\n        startTranslate,\r\n        isTouched\r\n      } = swiper.touchEventsData;\r\n      const currentTranslate = swiper.translate;\r\n\r\n      for (let i = 0; i < slides.length; i += 1) {\r\n        const $slideEl = slides.eq(i);\r\n        const slideProgress = $slideEl[0].progress;\r\n        const progress = Math.min(Math.max(slideProgress, -4), 4);\r\n        let offset = $slideEl[0].swiperSlideOffset;\r\n\r\n        if (swiper.params.centeredSlides && !swiper.params.cssMode) {\r\n          swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\r\n        }\r\n\r\n        if (swiper.params.centeredSlides && swiper.params.cssMode) {\r\n          offset -= slides[0].swiperSlideOffset;\r\n        }\r\n\r\n        let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\r\n        let tY = 0;\r\n        const tZ = -100 * Math.abs(progress);\r\n        let scale = 1;\r\n        let rotate = -params.perSlideRotate * progress;\r\n        let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\r\n        const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\r\n        const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\r\n        const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\r\n\r\n        if (isSwipeToNext || isSwipeToPrev) {\r\n          const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\r\n          rotate += -28 * progress * subProgress;\r\n          scale += -0.5 * subProgress;\r\n          tXAdd += 96 * subProgress;\r\n          tY = `${-25 * subProgress * Math.abs(progress)}%`;\r\n        }\r\n\r\n        if (progress < 0) {\r\n          // next\r\n          tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\r\n        } else if (progress > 0) {\r\n          // prev\r\n          tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\r\n        } else {\r\n          tX = `${tX}px`;\r\n        }\r\n\r\n        if (!swiper.isHorizontal()) {\r\n          const prevY = tY;\r\n          tY = tX;\r\n          tX = prevY;\r\n        }\r\n\r\n        const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\r\n        const transform = `\r\n      translate3d(${tX}, ${tY}, ${tZ}px)\r\n      rotateZ(${params.rotate ? rotate : 0}deg)\r\n      scale(${scaleString})\r\n    `;\r\n\r\n        if (params.slideShadows) {\r\n          // Set shadows\r\n          let $shadowEl = $slideEl.find('.swiper-slide-shadow');\r\n\r\n          if ($shadowEl.length === 0) {\r\n            $shadowEl = createShadow(params, $slideEl);\r\n          }\r\n\r\n          if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\r\n        }\r\n\r\n        $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\r\n        const $targetEl = effectTarget(params, $slideEl);\r\n        $targetEl.transform(transform);\r\n      }\r\n    };\r\n\r\n    const setTransition = duration => {\r\n      const {\r\n        transformEl\r\n      } = swiper.params.cardsEffect;\r\n      const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\r\n      $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\r\n      effectVirtualTransitionEnd({\r\n        swiper,\r\n        duration,\r\n        transformEl\r\n      });\r\n    };\r\n\r\n    effectInit({\r\n      effect: 'cards',\r\n      swiper,\r\n      on,\r\n      setTranslate,\r\n      setTransition,\r\n      perspective: () => true,\r\n      overwriteParams: () => ({\r\n        watchSlidesProgress: true,\r\n        virtualTranslate: !swiper.params.cssMode\r\n      })\r\n    });\r\n  }\r\n\r\n  // Swiper Class\r\n  const modules = [Virtual, Keyboard, Mousewheel, Navigation, Pagination, Scrollbar, Parallax, Zoom, Lazy, Controller, A11y, History, HashNavigation, Autoplay, Thumb, freeMode, Grid, Manipulation, EffectFade, EffectCube, EffectFlip, EffectCoverflow, EffectCreative, EffectCards];\r\n  Swiper.use(modules);\r\n\r\n  return Swiper;\r\n\r\n}));\r\n//# sourceMappingURL=swiper-bundle.js.map","\r\nconst SLIDER = new Swiper(\".page\", {\r\n  wrapperClass: \"page__wrapper\",\r\n  slideClass: \"page__screen\",\r\n  direction: checkSliderOrientation(),\r\n  // slidesPerView: 'auto',\r\n  mousewheel: {\r\n    sensitivity: 1,\r\n  },\r\n  keyboard: {\r\n    enabled: true,\r\n    onlyInViewport: true,\r\n    pageUpDown: true,\r\n  },\r\n  speed: 800,\r\n\r\n  pagination: {\r\n    el: '.page__pagination',\r\n    type: 'bullets',\r\n    clickable: false,\r\n    bulletClass: \"page__bullet\",\r\n    bulletActiveClass: \"page__bullet_active\",\r\n  },\r\n  navigation: {\r\n    nextEl: \".scroll-indicator-next\",\r\n    prevEl: \".scroll-indicator-prew\",\r\n  }\r\n});\r\n\r\n    \r\n \r\nconst numOfSliders = document.querySelectorAll('.page__screen').length - 1;\r\n// колечко стрелочек\r\nconst pointerCircles = document.querySelectorAll('.cls-3');\r\n// палочка стрелочек\r\nconst pointerLine = document.querySelectorAll('.cls-5');\r\n// навершие стрелочек\r\nconst pointerHead = document.querySelectorAll('.cls-6');\r\n\r\nfunction addActiveClass(item) {\r\n  item.forEach(function (e, i) {\r\n    if (!e.classList.contains('active'))\r\n      e.classList.add(\"active\");\r\n  });\r\n}\r\n\r\n\r\nwindow.addEventListener('load', windowLoad);\r\nfunction windowLoad() {\r\n  addActiveClass(pointerCircles);\r\n  addActiveClass(pointerLine);\r\n  addActiveClass(pointerHead);\r\n\r\n}\r\n\r\nSLIDER.on('slideChange', function () {\r\n  //console.log(SLIDER.activeIndex);\r\n});\r\n\r\nSLIDER.on('beforeResize', function () {\r\nSLIDER.changeDirection(checkSliderOrientation(), true);\r\n});\r\n\r\nfunction checkSliderOrientation(){\r\n //console.log(\"Изменение размера\");\r\n  let windowWidth = parseInt(document.documentElement.clientWidth);\r\n  let windowHeight = parseInt(document.documentElement.clientHeight);\r\n  let orientation;\r\n  if (windowHeight < windowWidth){\r\n   // console.log(`Вертикальная ориентация`);\r\n   orientation = 'vertical';\r\n   // SLIDER.direction = ;\r\n   //  console.log(SLIDER.direction);\r\n  }\r\n  else {\r\n//console.log(`Горизонтальная ориентация`);\r\norientation = 'horizontal';\r\n//console.log(SLIDER.direction);\r\n  }\r\n // console.log(SLIDER.activeIndex);\r\n // SLIDER.updateSize();\r\n return orientation;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"]}